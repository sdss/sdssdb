# !usr/bin/env python
# -*- coding: utf-8 -*-
#

# this file was autogenerated with sqlacodegen and then adapted for sdssdb
# flake8: noqa=E501,E741

from sqlalchemy import (ARRAY, BigInteger, Boolean, Column, DateTime, Float,
                        ForeignKey, Index, Integer, SmallInteger, Text, UniqueConstraint, text)
from sqlalchemy.ext.declarative import AbstractConcreteBase, declared_attr
from sqlalchemy.orm import relationship

from sdssdb.sqlalchemy.sdss5db import SDSS5dbBase, database


SCHEMA = 'apogee_drp'


class Base(AbstractConcreteBase, SDSS5dbBase):
    __abstract__ = True
    _schema = SCHEMA
    _relations = 'define_relations'

    @declared_attr
    def __table_args__(cls):
        return {'schema': cls._schema}


class CalibrationStatus(Base):
    __tablename__ = 'calib_status'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.calib_status_pk_seq'::regclass)"))
    logfile = Column(Text)
    apred_vers = Column(Text)
    v_apred = Column(Text)
    instrument = Column(Text, index=True)
    telescope = Column(Text, index=True)
    mjd = Column(Integer, index=True)
    caltype = Column(Text, index=True)
    plate = Column(Integer, index=True)
    configid = Column(Text)
    designid = Column(Text)
    fieldid = Column(Text)
    pbskey = Column(Text)
    checktime = Column(DateTime)
    num = Column(Text, index=True)
    calfile = Column(Text)
    success3d = Column(Boolean)
    success2d = Column(Boolean)
    success = Column(Boolean)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))


class DailyStatus(Base):
    __tablename__ = 'daily_status'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.daily_status_pk_seq'::regclass)"))
    mjd = Column(Integer, index=True)
    telescope = Column(Text, index=True)
    nexposures = Column(Text)
    nplanfiles = Column(Text)
    begtime = Column(Text, index=True)
    endtime = Column(Text, index=True)
    success = Column(Boolean)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))


class Exposure(Base):
    __tablename__ = 'exposure'
    __table_args__ = (
        UniqueConstraint('num', 'observatory'),
        {'schema': 'apogee_drp'}
    )

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.exposure_pk_seq'::regclass)"))
    num = Column(Integer, index=True)
    nread = Column(Integer)
    exptype = Column(Text)
    plateid = Column(Text)
    exptime = Column(Float)
    dateobs = Column(Text)
    mjd = Column(Integer, index=True)
    observatory = Column(Text)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    arctype = Column(Text)
    configid = Column(Text)
    designid = Column(Text)
    fieldid = Column(Text)
    dithpix = Column(Float)
    gangstate = Column(Text)
    shutter = Column(Text)
    calshutter = Column(Text)


class ExposureStatus(Base):
    __tablename__ = 'exposure_status'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.exposure_status_pk_seq'::regclass)"))
    exposure_pk = Column(ForeignKey('apogee_drp.exposure.pk'), index=True)
    planfile = Column(Text)
    apred_vers = Column(Text)
    instrument = Column(Text, index=True)
    telescope = Column(Text, index=True)
    platetype = Column(Text)
    mjd = Column(Integer, index=True)
    plate = Column(Integer, index=True)
    proctype = Column(Text, index=True)
    pbskey = Column(Text)
    checktime = Column(DateTime)
    num = Column(Integer, index=True)
    success = Column(Boolean)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    v_apred = Column(Text)
    configid = Column(Text)
    designid = Column(Text)
    fieldid = Column(Text)

    exposure = relationship('Exposure')


class MasterCalibrationStatus(Base):
    __tablename__ = 'mastercal_status'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.mastercal_status_pk_seq'::regclass)"))
    logfile = Column(Text)
    apred_vers = Column(Text)
    v_apred = Column(Text)
    instrument = Column(Text, index=True)
    telescope = Column(Text, index=True)
    caltype = Column(Text, index=True)
    pbskey = Column(Text)
    checktime = Column(DateTime)
    name = Column(Text, index=True)
    calfile = Column(Text)
    success = Column(Boolean)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))


class Plan(Base):
    __tablename__ = 'plan'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.plan_pk_seq'::regclass)"))
    planfile = Column(Text, index=True)
    apred_vers = Column(Text, index=True)
    telescope = Column(Text, index=True)
    instrument = Column(Text, index=True)
    mjd = Column(Integer, index=True)
    plate = Column(Integer, index=True)
    platetype = Column(Text, index=True)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    v_apred = Column(Text)
    configid = Column(Text)
    designid = Column(Text)
    fieldid = Column(Text)
    fps = Column(Boolean)


class RvStatus(Base):
    __tablename__ = 'rv_status'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.rv_status_pk_seq'::regclass)"))
    apogee_id = Column(Text, index=True)
    apred_vers = Column(Text, index=True)
    telescope = Column(Text, index=True)
    healpix = Column(Integer)
    nvisits = Column(Integer)
    pbskey = Column(Text)
    file = Column(Text)
    checktime = Column(DateTime)
    success = Column(Boolean)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    v_apred = Column(Text)


class RvVisit(Base):
    __tablename__ = 'rv_visit'
    __table_args__ = (
        UniqueConstraint('apred_vers', 'telescope', 'plate', 'mjd', 'fiberid', 'starver'),
        {'schema': 'apogee_drp'}
    )

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.rv_visit_pk_seq'::regclass)"))
    visit_pk = Column(ForeignKey('apogee_drp.visit.pk'), index=True)
    apogee_id = Column(Text, index=True)
    catalogid = Column(BigInteger)
    star_pk = Column(ForeignKey('apogee_drp.star.pk'), index=True)
    starver = Column(Text)
    file = Column(Text)
    uri = Column(Text)
    fiberid = Column(SmallInteger, index=True)
    plate = Column(Text, index=True)
    mjd = Column(Integer, index=True)
    telescope = Column(Text, index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    hmag = Column(Float, index=True)
    snr = Column(Float)
    dateobs = Column(Text)
    jd = Column(Float(53))
    bc = Column(Float)
    vtype = Column(SmallInteger)
    vrel = Column(Float)
    vrelerr = Column(Float)
    vrad = Column(Float, index=True)
    chisq = Column(Float)
    rv_teff = Column(Float)
    rv_tefferr = Column(Float)
    rv_feh = Column(Float)
    rv_feherr = Column(Float)
    rv_logg = Column(Float)
    rv_loggerr = Column(Float)
    xcorr_vrel = Column(Float)
    xcorr_vrelerr = Column(Float)
    xcorr_vrad = Column(Float)
    n_components = Column(Integer)
    rv_components = Column(ARRAY(Float()))
    apred_vers = Column(Text)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    v_apred = Column(Text)

    star = relationship('Star')
    visit = relationship('Visit')


class Star(Base):
    __tablename__ = 'star'
    __table_args__ = (
        UniqueConstraint('apred_vers', 'telescope', 'apogee_id', 'starver'),
        {'schema': 'apogee_drp'}
    )

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.star_pk_seq'::regclass)"))
    apogee_id = Column(Text, index=True)
    file = Column(Text)
    uri = Column(Text)
    starver = Column(Text)
    mjdbeg = Column(Integer)
    mjdend = Column(Integer)
    telescope = Column(Text, index=True)
    apred_vers = Column(Text)
    healpix = Column(Integer, index=True)
    snr = Column(Float)
    ra = Column(Float(53))
    dec = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    jmag = Column(Float)
    jerr = Column(Float)
    hmag = Column(Float, index=True)
    herr = Column(Float)
    kmag = Column(Float)
    kerr = Column(Float)
    src_h = Column(Text)
    targ_pmra = Column(Float)
    targ_pmdec = Column(Float)
    targ_pm_src = Column(Text)
    apogee_target1 = Column(Integer)
    apogee_target2 = Column(Integer)
    apogee2_target1 = Column(Integer)
    apogee2_target2 = Column(Integer)
    apogee2_target3 = Column(Integer)
    apogee2_target4 = Column(Integer)
    catalogid = Column(BigInteger, index=True)
    gaiadr2_sourceid = Column(BigInteger)
    gaiadr2_plx = Column(Float, index=True)
    gaiadr2_plx_error = Column(Float)
    gaiadr2_pmra = Column(Float, index=True)
    gaiadr2_pmra_error = Column(Float)
    gaiadr2_pmdec = Column(Float, index=True)
    gaiadr2_pmdec_error = Column(Float)
    gaiadr2_gmag = Column(Float, index=True)
    gaiadr2_gerr = Column(Float)
    gaiadr2_bpmag = Column(Float, index=True)
    gaiadr2_bperr = Column(Float)
    gaiadr2_rpmag = Column(Float, index=True)
    gaiadr2_rperr = Column(Float)
    sdssv_apogee_target0 = Column(Integer)
    firstcarton = Column(Text)
    targflags = Column(Text)
    nvisits = Column(Integer)
    ngoodvisits = Column(Integer)
    ngoodrvs = Column(Integer)
    starflag = Column(Integer)
    starflags = Column(Text)
    andflag = Column(Integer)
    andflags = Column(Text)
    vrad = Column(Float, index=True)
    vscatter = Column(Float)
    verr = Column(Float)
    vmederr = Column(Float)
    chisq = Column(Float)
    rv_teff = Column(Float)
    rv_tefferr = Column(Float)
    rv_logg = Column(Float)
    rv_loggerr = Column(Float)
    rv_feh = Column(Float)
    rv_feherr = Column(Float)
    rv_ccpfwhm = Column(Float)
    rv_autofwhm = Column(Float)
    n_components = Column(Integer)
    meanfib = Column(Float)
    sigfib = Column(Float)
    nres = Column(Text)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    v_apred = Column(Text)
    cadence = Column(Text)
    program = Column(Text)
    category = Column(Text)


class StarLatest(Base):
    __tablename__ = 'star_latest'
    __table_args__ = (
        UniqueConstraint('apred_vers', 'telescope', 'apogee_id', 'starver'),
        {'schema': 'apogee_drp'}
    )

    pk = Column('pk', Integer, primary_key=True)
    apogee_id = Column('apogee_id', Text)
    file = Column('file', Text)
    uri = Column('uri', Text)
    starver = Column('starver', Text)
    mjdbeg = Column('mjdbeg', Integer)
    mjdend = Column('mjdend', Integer)
    telescope = Column('telescope', Text)
    apred_vers = Column('apred_vers', Text)
    healpix = Column('healpix', Integer)
    snr = Column('snr', Float)
    ra = Column('ra', Float(53))
    dec = Column('dec', Float(53))
    glon = Column('glon', Float(53))
    glat = Column('glat', Float(53))
    jmag = Column('jmag', Float)
    jerr = Column('jerr', Float)
    hmag = Column('hmag', Float)
    herr = Column('herr', Float)
    kmag = Column('kmag', Float)
    kerr = Column('kerr', Float)
    src_h = Column('src_h', Text)
    targ_pmra = Column('targ_pmra', Float)
    targ_pmdec = Column('targ_pmdec', Float)
    targ_pm_src = Column('targ_pm_src', Text)
    apogee_target1 = Column('apogee_target1', Integer)
    apogee_target2 = Column('apogee_target2', Integer)
    apogee2_target1 = Column('apogee2_target1', Integer)
    apogee2_target2 = Column('apogee2_target2', Integer)
    apogee2_target3 = Column('apogee2_target3', Integer)
    apogee2_target4 = Column('apogee2_target4', Integer)
    catalogid = Column('catalogid', BigInteger)
    gaiadr2_sourceid = Column('gaiadr2_sourceid', BigInteger)
    gaiadr2_plx = Column('gaiadr2_plx', Float)
    gaiadr2_plx_error = Column('gaiadr2_plx_error', Float)
    gaiadr2_pmra = Column('gaiadr2_pmra', Float)
    gaiadr2_pmra_error = Column('gaiadr2_pmra_error', Float)
    gaiadr2_pmdec = Column('gaiadr2_pmdec', Float)
    gaiadr2_pmdec_error = Column('gaiadr2_pmdec_error', Float)
    gaiadr2_gmag = Column('gaiadr2_gmag', Float)
    gaiadr2_gerr = Column('gaiadr2_gerr', Float)
    gaiadr2_bpmag = Column('gaiadr2_bpmag', Float)
    gaiadr2_bperr = Column('gaiadr2_bperr', Float)
    gaiadr2_rpmag = Column('gaiadr2_rpmag', Float)
    gaiadr2_rperr = Column('gaiadr2_rperr', Float)
    sdssv_apogee_target0 = Column('sdssv_apogee_target0', Integer)
    firstcarton = Column('firstcarton', Text)
    targflags = Column('targflags', Text)
    nvisits = Column('nvisits', Integer)
    ngoodvisits = Column('ngoodvisits', Integer)
    ngoodrvs = Column('ngoodrvs', Integer)
    starflag = Column('starflag', Integer)
    starflags = Column('starflags', Text)
    andflag = Column('andflag', Integer)
    andflags = Column('andflags', Text)
    vheliobary = Column('vheliobary', Float)
    vscatter = Column('vscatter', Float)
    verr = Column('verr', Float)
    vmederr = Column('vmederr', Float)
    chisq = Column('chisq', Float)
    rv_teff = Column('rv_teff', Float)
    rv_tefferr = Column('rv_tefferr', Float)
    rv_logg = Column('rv_logg', Float)
    rv_loggerr = Column('rv_loggerr', Float)
    rv_feh = Column('rv_feh', Float)
    rv_feherr = Column('rv_feherr', Float)
    rv_ccpfwhm = Column('rv_ccpfwhm', Float)
    rv_autofwhm = Column('rv_autofwhm', Float)
    n_components = Column('n_components', Integer)
    meanfib = Column('meanfib', Float)
    sigfib = Column('sigfib', Float)
    nres = Column('nres', Text)
    created = Column('created', DateTime(True))


class Test(Base):
    __tablename__ = 'test'
    __table_args__ = (
        UniqueConstraint('id', 'version', 'telescope'),
        {'schema': 'apogee_drp'}
    )

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.test_pk_seq'::regclass)"))
    id = Column(Text)
    version = Column(Text)
    telescope = Column(Text)
    width = Column(Text)
    flux = Column(ARRAY(Float()))


class Version(Base):
    __tablename__ = 'version'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.version_pk_seq'::regclass)"))
    name = Column(Text)
    type = Column(Text)
    current = Column(Boolean)
    datarelease = Column(Text)
    modified = Column(Text)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))


class Visit(Base):
    __tablename__ = 'visit'
    __table_args__ = (
        UniqueConstraint('apred_vers', 'telescope', 'plate', 'mjd', 'fiberid'),
        Index('visit_apred_pk_idx', 'apred_vers', 'pk'),
        {'schema': 'apogee_drp'}
    )

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.visit_pk_seq'::regclass)"))
    apogee_id = Column(Text, index=True)
    target_id = Column(Text)
    file = Column(Text)
    uri = Column(Text)
    fiberid = Column(SmallInteger, index=True)
    plate = Column(Text, index=True)
    mjd = Column(Integer, index=True)
    telescope = Column(Text, index=True)
    apred_vers = Column(Text)
    survey = Column(Text)
    field = Column(Text, index=True)
    programname = Column(Text)
    objtype = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    jmag = Column(Float)
    jerr = Column(Float)
    hmag = Column(Float, index=True)
    herr = Column(Float)
    kmag = Column(Float)
    kerr = Column(Float)
    src_h = Column(Text)
    pmra = Column(Float)
    pmdec = Column(Float)
    pm_src = Column(Text)
    apogee_target1 = Column(Integer)
    apogee_target2 = Column(Integer)
    apogee_target3 = Column(Integer)
    apogee_target4 = Column(Integer)
    catalogid = Column(BigInteger, index=True)
    gaiadr2_sourceid = Column(BigInteger, index=True)
    gaiadr2_plx = Column(Float, index=True)
    gaiadr2_plx_error = Column(Float)
    gaiadr2_pmra = Column(Float, index=True)
    gaiadr2_pmra_error = Column(Float)
    gaiadr2_pmdec = Column(Float, index=True)
    gaiadr2_pmdec_error = Column(Float)
    gaiadr2_gmag = Column(Float)
    gaiadr2_gerr = Column(Float)
    gaiadr2_bpmag = Column(Float, index=True)
    gaiadr2_bperr = Column(Float)
    gaiadr2_rpmag = Column(Float, index=True)
    gaiadr2_rperr = Column(Float)
    sdssv_apogee_target0 = Column(Integer)
    firstcarton = Column(Text)
    targflags = Column(Text)
    snr = Column(Float)
    starflag = Column(Integer)
    starflags = Column(Text)
    dateobs = Column(Text)
    jd = Column(Float(53))
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    v_apred = Column(Text)
    assigned = Column(SmallInteger)
    on_target = Column(SmallInteger)
    valid = Column(SmallInteger)
    cadence = Column(Text)
    program = Column(Text)
    category = Column(Text)
    exptime = Column(Float)
    nframes = Column(Integer)


class VisitLatest(Base):
    __tablename__ = 'visit_latest'
    __table_args__ = (
        UniqueConstraint('apred_vers', 'telescope', 'plate', 'mjd', 'fiberid'),
        {'schema': 'apogee_drp'}
    )

    apogee_id = Column('apogee_id', Text)
    target_id = Column('target_id', Text)
    catalogid = Column('catalogid', BigInteger, primary_key=True)
    apred_vers = Column('apred_vers', Text, primary_key=True)
    v_apred = Column('v_apred', Text)
    file = Column('file', Text, primary_key=True)
    uri = Column('uri', Text)
    fiberid = Column('fiberid', SmallInteger)
    plate = Column('plate', Text)
    exptime = Column('exptime', Float)
    nframes = Column('nframes', Integer)
    mjd = Column('mjd', Integer, )
    telescope = Column('telescope', Text)
    survey = Column('survey', Text)
    field = Column('field', Text)
    programname = Column('programname', Text)
    ra = Column('ra', Float(53))
    dec = Column('dec', Float(53))
    glon = Column('glon', Float(53))
    glat = Column('glat', Float(53))
    jmag = Column('jmag', Float)
    jerr = Column('jerr', Float)
    hmag = Column('hmag', Float)
    herr = Column('herr', Float)
    kmag = Column('kmag', Float)
    kerr = Column('kerr', Float)
    src_h = Column('src_h', Text)
    pmra = Column('pmra', Float)
    pmdec = Column('pmdec', Float)
    pm_src = Column('pm_src', Text)
    apogee_target1 = Column('apogee_target1', Integer)
    apogee_target2 = Column('apogee_target2', Integer)
    apogee_target3 = Column('apogee_target3', Integer)
    apogee_target4 = Column('apogee_target4', Integer)
    sdssv_apogee_target0 = Column('sdssv_apogee_target0', Integer)
    firstcarton = Column('firstcarton', Text)
    cadence = Column('cadence', Text)
    program = Column('program', Text)
    category = Column('category', Text)
    targflags = Column('targflags', Text)
    gaiadr2_plx = Column('gaiadr2_plx', Float)
    gaiadr2_plx_error = Column('gaiadr2_plx_error', Float)
    gaiadr2_pmra = Column('gaiadr2_pmra', Float)
    gaiadr2_pmra_error = Column('gaiadr2_pmra_error', Float)
    gaiadr2_pmdec = Column('gaiadr2_pmdec', Float)
    gaiadr2_pmdec_error = Column('gaiadr2_pmdec_error', Float)
    gaiadr2_gmag = Column('gaiadr2_gmag', Float)
    gaiadr2_gerr = Column('gaiadr2_gerr', Float)
    gaiadr2_bpmag = Column('gaiadr2_bpmag', Float)
    gaiadr2_bperr = Column('gaiadr2_bperr', Float)
    gaiadr2_rpmag = Column('gaiadr2_rpmag', Float)
    gaiadr2_rperr = Column('gaiadr2_rperr', Float)
    snr = Column('snr', Float)
    starflag = Column('starflag', Integer)
    starflags = Column('starflags', Text)
    dateobs = Column('dateobs', Text)
    jd = Column('jd', Float(53))
    starver = Column('starver', Text)
    bc = Column('bc', Float)
    vtype = Column('vtype', SmallInteger)
    vrel = Column('vrel', Float)
    vrelerr = Column('vrelerr', Float)
    vrad = Column('vrad', Float)
    chisq = Column('chisq', Float)
    rv_teff = Column('rv_teff', Float)
    rv_feh = Column('rv_feh', Float)
    rv_logg = Column('rv_logg', Float)
    xcorr_vrel = Column('xcorr_vrel', Float)
    xcorr_vrelerr = Column('xcorr_vrelerr', Float)
    xcorr_vrad = Column('xcorr_vrad', Float)
    n_components = Column('n_components', Integer)
    rv_components = Column('rv_components', ARRAY(Float()))


class VisitStatus(Base):
    __tablename__ = 'visit_status'

    pk = Column(Integer, primary_key=True, server_default=text("nextval('apogee_drp.visit_status_pk_seq'::regclass)"))
    planfile = Column(Text)
    logfile = Column(Text)
    errfile = Column(Text)
    apred_vers = Column(Text)
    instrument = Column(Text, index=True)
    telescope = Column(Text, index=True)
    platetype = Column(Text)
    mjd = Column(Integer, index=True)
    plate = Column(Integer, index=True)
    nobj = Column(Integer)
    pbskey = Column(Text)
    checktime = Column(DateTime)
    ap3d_success = Column(Boolean)
    ap3d_nexp_success = Column(Integer)
    ap2d_success = Column(Boolean)
    ap2d_nexp_success = Column(Integer)
    apcframe_success = Column(Boolean)
    apcframe_nexp_success = Column(Integer)
    applate_success = Column(Boolean)
    apvisit_success = Column(Boolean)
    apvisit_nobj_success = Column(Integer)
    apvisitsum_success = Column(Boolean)
    success = Column(Boolean)
    created = Column(DateTime(True), nullable=False, server_default=text("now()"))
    v_apred = Column(Text)
    configid = Column(Text)
    designid = Column(Text)
    fieldid = Column(Text)


def define_relations():
    """ leaving this empty as relations were autogenerated """
    pass


# prepare the base
database.add_base(Base)

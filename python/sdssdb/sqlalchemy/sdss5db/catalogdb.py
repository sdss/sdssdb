# !usr/bin/env python
# -*- coding: utf-8 -*-
#

# this file was autogenerated with sqlacodegen and then adapted for sdssdb
# flake8: noqa=E501,E741

from sqlalchemy import (ARRAY, BigInteger, Boolean, CHAR, Column, Date, Float,
                        ForeignKey, ForeignKeyConstraint, Index, Integer, Numeric,
                        SmallInteger, String, Text, text)
from sqlalchemy.orm import relationship
from sqlalchemy.ext.declarative import AbstractConcreteBase, declared_attr

from sdssdb.sqlalchemy.sdss5db import SDSS5dbBase, database


SCHEMA = 'catalogdb'


class Base(AbstractConcreteBase, SDSS5dbBase):
    __abstract__ = True
    _schema = SCHEMA
    _relations = 'define_relations'

    @declared_attr
    def __table_args__(cls):
        return {'schema': cls._schema}


class BailerJonesEDR3(Base):
    __tablename__ = 'bailer_jones_edr3'

    source_id = Column(BigInteger, primary_key=True)
    r_med_geo = Column(Float(53), index=True)
    r_lo_geo = Column(Float(53), index=True)
    r_hi_geo = Column(Float(53), index=True)
    r_med_photogeo = Column(Float(53), index=True)
    r_lo_photogeo = Column(Float(53), index=True)
    r_hi_photogeo = Column(Float(53), index=True)
    flag = Column(Text, index=True)


class BHM_CSC(Base):
    __tablename__ = 'bhm_csc'

    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".csc_id_seq'::regclass)"))
    csc_version = Column(Text)
    cxo_name = Column(Text)
    oir_ra = Column(Float(53))
    oir_dec = Column(Float(53))
    mag_g = Column(Float, index=True)
    mag_r = Column(Float, index=True)
    mag_i = Column(Float, index=True)
    mag_z = Column(Float, index=True)
    mag_h = Column(Float, index=True)
    spectrograph = Column(Text)


class BHM_CSC_v2(Base):
    __tablename__ = 'bhm_csc_v2'

    cxoid = Column(Text, index=True)
    xra = Column(Float(53))
    xdec = Column(Float(53))
    pri = Column(SmallInteger)
    ocat = Column(Text, index=True)
    oid = Column(BigInteger, index=True)
    ora = Column(Float(53))
    odec = Column(Float(53))
    omag = Column(Float, index=True)
    omatchtype = Column(SmallInteger)
    irid = Column(Text)
    ra2m = Column(Float(53))
    dec2m = Column(Float(53))
    hmag = Column(Float, index=True)
    irmatchtype = Column(SmallInteger)
    lgal = Column(Float(53))
    bgal = Column(Float(53))
    logfx = Column(Float)
    xband = Column(Text)
    xsn = Column(Float(53))
    xflags = Column(Integer)
    designation2m = Column(Text, index=True)
    idg2 = Column(BigInteger, index=True)
    idps = Column(BigInteger, index=True)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_csc_v2_pk_seq'::regclass)"))


class BHM_eFEDS_Veto(Base):
    __tablename__ = 'bhm_efeds_veto'

    programname = Column(String(5))
    chunk = Column(String(7))
    platesn2 = Column(Float)
    plate = Column(Integer)
    tile = Column(Integer)
    mjd = Column(Integer)
    fiberid = Column(Integer)
    run2d = Column(String(7))
    run1d = Column(String(7))
    plug_ra = Column(Float(53))
    plug_dec = Column(Float(53))
    z_err = Column(Float)
    rchi2 = Column(Float)
    dof = Column(Integer)
    rchi2diff = Column(Float)
    wavemin = Column(Float)
    wavemax = Column(Float)
    wcoverage = Column(Float)
    zwarning = Column(Integer)
    sn_median = Column(ARRAY(Float()))
    sn_median_all = Column(Float)
    spectroflux = Column(ARRAY(Float()))
    spectroflux_ivar = Column(ARRAY(Float()))
    anyandmask = Column(Integer)
    anyormask = Column(Integer)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_efeds_veto_pk_seq'::regclass)"))


class BHM_RM_Tweaks(Base):
    __tablename__ = 'bhm_rm_tweaks'

    rm_field_name = Column(CHAR(12), nullable=False, index=True)
    plate = Column(Integer, index=True)
    fiberid = Column(Integer, index=True)
    mjd = Column(Integer, index=True)
    catalogid = Column(BigInteger, nullable=False, index=True)
    ra = Column(Float(53), nullable=False)
    dec = Column(Float(53))
    rm_suitability = Column(Integer, index=True)
    in_plate = Column(Boolean, index=True)
    firstcarton = Column(CHAR(17), index=True)
    mag = Column(ARRAY(Float()), index=True)
    gaia_g = Column(Float, index=True)
    date_set = Column(CHAR(11), index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_rm_tweaks_pkey_seq1'::regclass)"))


class BlackCAT(Base):
    __tablename__ = 'blackcat'

    name = Column(Text)
    rastr = Column(Text)
    decstr = Column(Text)
    radeg = Column(Float(53))
    decdeg = Column(Float(53))
    ngaia = Column(Float)
    gaia_name = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_gmag = Column(Float)
    gaia_dist = Column(Float)
    gaia_source_id = Column(BigInteger, primary_key=True)


class CantatGaudinTable1(Base):
    __tablename__ = 'cantat_gaudin_table1'

    cluster = Column(CHAR(17), unique=True)
    radeg = Column(Float(53))
    dedeg = Column(Float(53))
    glon = Column(Float(53), index=True)
    glat = Column(Float(53), index=True)
    r50 = Column(Float(53), index=True)
    nbstars07 = Column(Integer, index=True)
    pmra = Column(Float(53))
    e_pmra = Column(Float(53))
    pmde = Column(Float(53))
    e_pmde = Column(Float(53))
    plx = Column(Float(53), index=True)
    e_plx = Column(Float(53))
    flag = Column(CHAR(14), index=True)
    agenn = Column(Float(53))
    avnn = Column(Float(53))
    dmnn = Column(Float(53))
    distpc = Column(Float(53), index=True)
    x = Column(Float(53))
    y = Column(Float(53))
    z = Column(Float(53))
    rgc = Column(Float(53), index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".cantat_gaudin_table1_pkey_seq'::regclass)"))


class Catalog(Base):
    __tablename__ = 'catalog'

    catalogid = Column(BigInteger, primary_key=True)
    iauname = Column(Text)
    ra = Column(Float(53), nullable=False)
    dec = Column(Float(53), nullable=False)
    pmra = Column(Float)
    pmdec = Column(Float)
    parallax = Column(Float)
    lead = Column(Text, nullable=False)
    version_id = Column(Integer, nullable=False, index=True)


class CatalogFromSDSS_DR19p_Speclite(Base):
    __tablename__ = 'catalog_from_sdss_dr19p_speclite'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToAllWise(Base):
    __tablename__ = 'catalog_to_allwise'
    __table_args__ = (
        Index('catalog_to_allwise_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToBHM_CSC(Base):
    __tablename__ = 'catalog_to_bhm_csc'
    __table_args__ = (
        Index('catalog_to_bhm_csc_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToBHM_eFEDS_Veto(Base):
    __tablename__ = 'catalog_to_bhm_efeds_veto'
    __table_args__ = (
        Index('catalog_to_bhm_efeds_veto_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToBHM_RM_v0(Base):
    __tablename__ = 'catalog_to_bhm_rm_v0'
    __table_args__ = (
        Index('catalog_to_bhm_rm_v0_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToBHM_RM_v0_2(Base):
    __tablename__ = 'catalog_to_bhm_rm_v0_2'
    __table_args__ = (
        Index('catalog_to_bhm_rm_v0_2_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToCatWISE(Base):
    __tablename__ = 'catalog_to_catwise'
    __table_args__ = (
        Index('catalog_to_catwise_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(String(25), primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToCatWISE2020(Base):
    __tablename__ = 'catalog_to_catwise2020'
    __table_args__ = (
        Index('catalog_to_catwise2020_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(String(25), primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToGaia_DR2(Base):
    __tablename__ = 'catalog_to_gaia_dr2_source'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToGaia_DR2_WD_SDSS(Base):
    __tablename__ = 'catalog_to_gaia_dr2_wd_sdss'
    __table_args__ = (
        Index('catalog_to_gaia_dr2_wd_sdss_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(Integer, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToGaia_DR3(Base):
    __tablename__ = 'catalog_to_gaia_dr3_source'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToGaiaQSO(Base):
    __tablename__ = 'catalog_to_gaia_qso'
    __table_args__ = (
        Index('catalog_to_gaia_qso_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToGaia_unWISE_AGN(Base):
    __tablename__ = 'catalog_to_gaia_unwise_agn'
    __table_args__ = (
        Index('catalog_to_gaia_unwise_agn_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToGLIMPSE(Base):
    __tablename__ = 'catalog_to_glimpse'
    __table_args__ = (
        Index('catalog_to_glimpse_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToGLIMPSE360(Base):
    __tablename__ = 'catalog_to_glimpse360'
    __table_args__ = (
        Index('catalog_to_glimpse360_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToGUVCat(Base):
    __tablename__ = 'catalog_to_guvcat'
    __table_args__ = (
        Index('catalog_to_guvcat_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToKeplerInput_DR10(Base):
    __tablename__ = 'catalog_to_kepler_input_10'
    __table_args__ = (
        Index('catalog_to_kepler_input_10_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToLegacy_Survey_DR10(Base):
    __tablename__ = 'catalog_to_legacy_survey_dr10'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToLegacy_Survey_DR10a(Base):
    __tablename__ = 'catalog_to_legacy_survey_dr10a'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToLegacy_Survey_DR8(Base):
    __tablename__ = 'catalog_to_legacy_survey_dr8'
    __table_args__ = (
        Index('catalog_to_legacy_survey_dr8_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToMILLIQUAS_7_7(Base):
    __tablename__ = 'catalog_to_milliquas_7_7'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToPanstarrs1(Base):
    __tablename__ = 'catalog_to_panstarrs1'
    __table_args__ = (
        Index('catalog_to_panstarrs1_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToPS1_g18(Base):
    __tablename__ = 'catalog_to_ps1_g18'
    __table_args__ = (
        Index('catalog_to_ps1_g18_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSDSS_DR13_PhotoObj(Base):
    __tablename__ = 'catalog_to_sdss_dr13_photoobj'
    __table_args__ = (
        Index('catalog_to_sdss_dr13_photoobj_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSDSS_DR13_PhotoObj_Primary(Base):
    __tablename__ = 'catalog_to_sdss_dr13_photoobj_primary'
    __table_args__ = (
        Index('catalog_to_sdss_dr13_photoobj_pr_version_id_target_id_best_idx1', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSDSS_DR16_APOGEE_Star(Base):
    __tablename__ = 'catalog_to_sdss_dr16_apogeestar'
    __table_args__ = (
        Index('catalog_to_sdss_dr16_apogeestar_n_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(Text, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSDSS_DR16_SpecObj(Base):
    __tablename__ = 'catalog_to_sdss_dr16_specobj'
    __table_args__ = (
        Index('catalog_to_sdss_dr16_specobj_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(Numeric(20, 0), primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSDSS_DR19p_Speclite(Base):
    __tablename__ = 'catalog_to_sdss_dr19p_speclite'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToSkies_v1(Base):
    __tablename__ = 'catalog_to_skies_v1'
    __table_args__ = (
        Index('catalog_to_skies_v1_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSkies_v2(Base):
    __tablename__ = 'catalog_to_skies_v2'
    __table_args__ = (
        Index('catalog_to_skies_v2_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSkyMapper_DR1_1(Base):
    __tablename__ = 'catalog_to_skymapper_dr1_1'
    __table_args__ = (
        Index('catalog_to_skymapper_dr1_1_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSkyMapper_DR2(Base):
    __tablename__ = 'catalog_to_skymapper_dr2'
    __table_args__ = (
        Index('catalog_to_skymapper_dr2_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToSuperCosmos(Base):
    __tablename__ = 'catalog_to_supercosmos'
    __table_args__ = (
        Index('catalog_to_supercosmos_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToTIC_v8(Base):
    __tablename__ = 'catalog_to_tic_v8'
    __table_args__ = (
        Index('catalog_to_tic_v8_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToTIC_v8_Extended(Base):
    __tablename__ = 'catalog_to_tic_v8_extended'
    __table_args__ = (
        Index('catalog_to_tic_v8_extended_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToTwoMassPSC(Base):
    __tablename__ = 'catalog_to_twomass_psc'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class CatalogToTwoqz_sixqz(Base):
    __tablename__ = 'catalog_to_twoqz_sixqz'
    __table_args__ = (
        Index('catalog_to_twoqz_sixqz_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToTycho2(Base):
    __tablename__ = 'catalog_to_tycho2'
    __table_args__ = (
        Index('catalog_to_tycho2_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(Text, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogTounWISE(Base):
    __tablename__ = 'catalog_to_unwise'
    __table_args__ = (
        Index('catalog_to_unwise_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(Text, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToUVOT_SSC_1(Base):
    __tablename__ = 'catalog_to_uvotssc1'
    __table_args__ = (
        Index('catalog_to_uvotssc1_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToXMM_OM_SUSS_4_1(Base):
    __tablename__ = 'catalog_to_xmm_om_suss_4_1'
    __table_args__ = (
        Index('catalog_to_xmm_om_suss_4_1_new_version_id_target_id_best_idx', 'version_id', 'target_id', 'best'),
        {'schema': 'catalogdb'}
    )

    catalogid = Column(BigInteger, primary_key=True, nullable=False, index=True)
    target_id = Column(BigInteger, primary_key=True, nullable=False, index=True)
    version_id = Column(SmallInteger, primary_key=True, nullable=False, index=True)
    distance = Column(Float(53))
    best = Column(Boolean, nullable=False, index=True)


class CatalogToXMM_OM_SUSS_5_0(Base):
    __tablename__ = 'catalog_to_xmm_om_suss_5_0'

    catalogid = Column('catalogid', BigInteger, index=True, primary_key=True, nullable=False)
    target_id = Column('target_id', BigInteger, index=True, primary_key=True, nullable=False)
    version_id = Column('version_id', Integer, index=True, primary_key=True, nullable=False)
    distance = Column('distance', Float(53))
    best = Column('best', Boolean, index=True)


class Catalog_ver25_to_ver31_full_all(Base):
    __tablename__ = 'catalog_ver25_to_ver31_full_all'

    id = Column(BigInteger, primary_key=True)
    match_table = Column(Text, index=True)
    catalogid1 = Column(BigInteger, index=True)
    catalogid2 = Column(BigInteger, index=True)
    catalog_version_id1 = Column(Integer)
    catalog_version_id2 = Column(Integer)


class Catalog_ver25_to_ver31_full_unique(Base):
    __tablename__ = 'catalog_ver25_to_ver31_full_unique'

    id = Column(BigInteger, primary_key=True)
    catalogid1 = Column(BigInteger, index=True)
    catalogid2 = Column(BigInteger, index=True)
    match_tables = Column(ARRAY(Text()))
    n_tables = Column(SmallInteger)
    catalog_version_id1 = Column(Integer)
    catalog_version_id2 = Column(Integer)


class CatWISE(Base):
    __tablename__ = 'catwise'
    __table_args__ = {'schema': 'catalogdb', 'comment': 'prelim'}

    source_name = Column(String(21))
    source_id = Column(String(25), primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    sigra = Column(Float)
    sigdec = Column(Float)
    sigradec = Column(Float)
    wx = Column(Float)
    wy = Column(Float)
    w1sky = Column(Float)
    w1sigsk = Column(Float)
    w1conf = Column(Float)
    w2sky = Column(Float)
    w2sigsk = Column(Float)
    w2conf = Column(Float)
    w1fitr = Column(Float)
    w2fitr = Column(Float)
    w1snr = Column(Float)
    w2snr = Column(Float)
    w1flux = Column(Float(53))
    w1sigflux = Column(Float(53))
    w2flux = Column(Float(53))
    w2sigflux = Column(Float(53))
    w1mpro = Column(Float)
    w1sigmpro = Column(Float(53))
    w1rchi2 = Column(Float(53))
    w2mpro = Column(Float)
    w2sigmpro = Column(Float(53))
    w2rchi2 = Column(Float(53))
    rchi2 = Column(Float(53))
    nb = Column(SmallInteger)
    na = Column(SmallInteger)
    w1sat = Column(Float(53))
    w2sat = Column(Float(53))
    w1mag = Column(Float)
    w1sigm = Column(Float)
    w1flg = Column(Integer)
    w1cov = Column(Float)
    w2mag = Column(Float)
    w2sigm = Column(Float)
    w2flg = Column(Integer)
    w2cov = Column(Float)
    w1mag_1 = Column(Float)
    w1sigm_1 = Column(Float)
    w1flg_1 = Column(BigInteger)
    w2mag_1 = Column(Float)
    w2sigm_1 = Column(Float)
    w2flg_1 = Column(BigInteger)
    w1mag_2 = Column(Float)
    w1sigm_2 = Column(Float)
    w1flg_2 = Column(BigInteger)
    w2mag_2 = Column(Float)
    w2sigm_2 = Column(Float)
    w2flg_2 = Column(BigInteger)
    w1mag_3 = Column(Float)
    w1sigm_3 = Column(Float)
    w1flg_3 = Column(BigInteger)
    w2mag_3 = Column(Float)
    w2sigm_3 = Column(Float)
    w2flg_3 = Column(BigInteger)
    w1mag_4 = Column(Float)
    w1sigm_4 = Column(Float)
    w1flg_4 = Column(BigInteger)
    w2mag_4 = Column(Float)
    w2sigm_4 = Column(Float)
    w2flg_4 = Column(BigInteger)
    w1mag_5 = Column(Float)
    w1sigm_5 = Column(Float)
    w1flg_5 = Column(BigInteger)
    w2mag_5 = Column(Float)
    w2sigm_5 = Column(Float)
    w2flg_5 = Column(BigInteger)
    w1mag_6 = Column(Float)
    w1sigm_6 = Column(Float)
    w1flg_6 = Column(BigInteger)
    w2mag_6 = Column(Float)
    w2sigm_6 = Column(Float)
    w2flg_6 = Column(BigInteger)
    w1mag_7 = Column(Float)
    w1sigm_7 = Column(Float)
    w1flg_7 = Column(BigInteger)
    w2mag_7 = Column(Float)
    w2sigm_7 = Column(Float)
    w2flg_7 = Column(BigInteger)
    w1mag_8 = Column(Float)
    w1sigm_8 = Column(Float)
    w1flg_8 = Column(BigInteger)
    w2mag_8 = Column(Float)
    w2sigm_8 = Column(Float)
    w2flg_8 = Column(BigInteger)
    w1nm = Column(BigInteger)
    w1m = Column(Integer)
    w1magp = Column(Float)
    w1sigp1 = Column(Float)
    w1sigp2 = Column(Float)
    w1k = Column(Float)
    w1ndf = Column(Integer)
    w1mlq = Column(Float)
    w1mjdmin = Column(Float(53))
    w1mjdmax = Column(Float(53))
    w1mjdmean = Column(Float(53))
    w2nm = Column(BigInteger)
    w2m = Column(Integer)
    w2magp = Column(Float)
    w2sigp1 = Column(Float)
    w2sigp2 = Column(Float)
    w2k = Column(Float)
    w2ndf = Column(Integer)
    w2mlq = Column(Float)
    w2mjdmin = Column(Float(53))
    w2mjdmax = Column(Float(53))
    w2mjdmean = Column(Float(53))
    rho12 = Column(SmallInteger)
    q12 = Column(SmallInteger)
    niters = Column(BigInteger)
    nsteps = Column(BigInteger)
    mdetid = Column(BigInteger)
    p1 = Column(Float(53))
    p2 = Column(Float(53))
    meanobsmjd = Column(Float(53))
    ra_pm = Column(Float(53))
    dec_pm = Column(Float(53))
    sigra_pm = Column(Float)
    sigdec_pm = Column(Float)
    sigradec_pm = Column(Float)
    pmra = Column(Float)
    pmdec = Column(Float)
    sigpmra = Column(Float)
    sigpmdec = Column(Float)
    w1snr_pm = Column(Float)
    w2snr_pm = Column(Float)
    w1flux_pm = Column(Float(53))
    w1sigflux_pm = Column(Float(53))
    w2flux_pm = Column(Float(53))
    w2sigflux_pm = Column(Float(53))
    w1mpro_pm = Column(Float)
    w1sigmpro_pm = Column(Float)
    w1rchi2_pm = Column(Float(53))
    w2mpro_pm = Column(Float)
    w2sigmpro_pm = Column(Float)
    w2rchi2_pm = Column(Float(53))
    rchi2_pm = Column(Float(53))
    pmcode = Column(String(5))
    niters_pm = Column(BigInteger)
    nsteps_pm = Column(BigInteger)
    dist = Column(Float)
    dw1mag = Column(Float)
    rch2w1 = Column(Float)
    dw2mag = Column(Float)
    rch2w2 = Column(Float)
    elon_avg = Column(Float(53))
    elonsig = Column(Float)
    elat_avg = Column(Float(53))
    elatsig = Column(Float)
    delon = Column(Float)
    delonsig = Column(Float)
    delat = Column(Float)
    delatsig = Column(Float)
    delonsnr = Column(Float)
    delatsnr = Column(Float)
    chi2pmra = Column(Float(53))
    chi2pmdec = Column(Float(53))
    ka = Column(Integer)
    k1 = Column(Integer)
    k2 = Column(Integer)
    km = Column(Integer)
    par_pm = Column(Float)
    par_pmsig = Column(Float)
    par_stat = Column(Float)
    par_sigma = Column(Float)
    dist_x = Column(Float(53))
    cc_flags = Column(String(16))
    w1cc_map = Column(BigInteger)
    w1cc_map_str = Column(String(20))
    w2cc_map = Column(BigInteger)
    w2cc_map_str = Column(String(20))
    n_aw = Column(Integer)
    ab_flags = Column(String(9))
    w1ab_map = Column(BigInteger)
    w1ab_map_str = Column(String(13))
    w2ab_map = Column(BigInteger)
    w2ab_map_str = Column(String(13))
    glon = Column(Float(53))
    glat = Column(Float(53))
    elon = Column(Float(53))
    elat = Column(Float(53))


class CatWISE2020(Base):
    __tablename__ = 'catwise2020'

    source_name = Column(CHAR(21), index=True)
    source_id = Column(CHAR(25), primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    sigra = Column(Float)
    sigdec = Column(Float)
    sigradec = Column(Float)
    wx = Column(Float)
    wy = Column(Float)
    w1sky = Column(Float)
    w1sigsk = Column(Float)
    w1conf = Column(Float)
    w2sky = Column(Float)
    w2sigsk = Column(Float)
    w2conf = Column(Float)
    w1fitr = Column(Float)
    w2fitr = Column(Float)
    w1snr = Column(Float)
    w2snr = Column(Float)
    w1flux = Column(Float)
    w1sigflux = Column(Float)
    w2flux = Column(Float)
    w2sigflux = Column(Float)
    w1mpro = Column(Float, index=True)
    w1sigmpro = Column(Float, index=True)
    w1rchi2 = Column(Float)
    w2mpro = Column(Float, index=True)
    w2sigmpro = Column(Float, index=True)
    w2rchi2 = Column(Float)
    rchi2 = Column(Float)
    nb = Column(Integer)
    na = Column(Integer)
    w1sat = Column(Float)
    w2sat = Column(Float)
    w1mag = Column(Float)
    w1sigm = Column(Float)
    w1flg = Column(Integer)
    w1cov = Column(Float)
    w2mag = Column(Float)
    w2sigm = Column(Float)
    w2flg = Column(Integer)
    w2cov = Column(Float)
    w1mag_1 = Column(Float)
    w1sigm_1 = Column(Float)
    w1flg_1 = Column(Integer)
    w2mag_1 = Column(Float)
    w2sigm_1 = Column(Float)
    w2flg_1 = Column(Integer)
    w1mag_2 = Column(Float)
    w1sigm_2 = Column(Float)
    w1flg_2 = Column(Integer)
    w2mag_2 = Column(Float)
    w2sigm_2 = Column(Float)
    w2flg_2 = Column(Integer)
    w1mag_3 = Column(Float)
    w1sigm_3 = Column(Float)
    w1flg_3 = Column(Integer)
    w2mag_3 = Column(Float)
    w2sigm_3 = Column(Float)
    w2flg_3 = Column(Integer)
    w1mag_4 = Column(Float)
    w1sigm_4 = Column(Float)
    w1flg_4 = Column(Integer)
    w2mag_4 = Column(Float)
    w2sigm_4 = Column(Float)
    w2flg_4 = Column(Integer)
    w1mag_5 = Column(Float)
    w1sigm_5 = Column(Float)
    w1flg_5 = Column(Integer)
    w2mag_5 = Column(Float)
    w2sigm_5 = Column(Float)
    w2flg_5 = Column(Integer)
    w1mag_6 = Column(Float)
    w1sigm_6 = Column(Float)
    w1flg_6 = Column(Integer)
    w2mag_6 = Column(Float)
    w2sigm_6 = Column(Float)
    w2flg_6 = Column(Integer)
    w1mag_7 = Column(Float)
    w1sigm_7 = Column(Float)
    w1flg_7 = Column(Integer)
    w2mag_7 = Column(Float)
    w2sigm_7 = Column(Float)
    w2flg_7 = Column(Integer)
    w1mag_8 = Column(Float)
    w1sigm_8 = Column(Float)
    w1flg_8 = Column(Integer)
    w2mag_8 = Column(Float)
    w2sigm_8 = Column(Float)
    w2flg_8 = Column(Integer)
    w1nm = Column(Integer)
    w1m = Column(Integer)
    w1magp = Column(Float)
    w1sigp1 = Column(Float)
    w1sigp2 = Column(Float)
    w1k = Column(Float)
    w1ndf = Column(Integer)
    w1mlq = Column(Float)
    w1mjdmin = Column(Float(53))
    w1mjdmax = Column(Float(53))
    w1mjdmean = Column(Float(53))
    w2nm = Column(Integer)
    w2m = Column(Integer)
    w2magp = Column(Float)
    w2sigp1 = Column(Float)
    w2sigp2 = Column(Float)
    w2k = Column(Float)
    w2ndf = Column(Integer)
    w2mlq = Column(Float)
    w2mjdmin = Column(Float(53))
    w2mjdmax = Column(Float(53))
    w2mjdmean = Column(Float(53))
    rho12 = Column(Integer)
    q12 = Column(Integer)
    niters = Column(Integer)
    nsteps = Column(Integer)
    mdetid = Column(Integer)
    p1 = Column(Float)
    p2 = Column(Float)
    meanobsmjd = Column(Float(53))
    ra_pm = Column(Float(53))
    dec_pm = Column(Float(53))
    sigra_pm = Column(Float)
    sigdec_pm = Column(Float)
    sigradec_pm = Column(Float)
    pmra = Column(Float)
    pmdec = Column(Float)
    sigpmra = Column(Float)
    sigpmdec = Column(Float)
    w1snr_pm = Column(Float)
    w2snr_pm = Column(Float)
    w1flux_pm = Column(Float)
    w1sigflux_pm = Column(Float)
    w2flux_pm = Column(Float)
    w2sigflux_pm = Column(Float)
    w1mpro_pm = Column(Float)
    w1sigmpro_pm = Column(Float)
    w1rchi2_pm = Column(Float)
    w2mpro_pm = Column(Float)
    w2sigmpro_pm = Column(Float)
    w2rchi2_pm = Column(Float)
    rchi2_pm = Column(Float)
    pmcode = Column(CHAR(7))
    niters_pm = Column(Integer)
    nsteps_pm = Column(Integer)
    dist = Column(Float)
    dw1mag = Column(Float)
    rch2w1 = Column(Float)
    dw2mag = Column(Float)
    rch2w2 = Column(Float)
    elon_avg = Column(Float(53))
    elonsig = Column(Float)
    elat_avg = Column(Float(53))
    elatsig = Column(Float)
    delon = Column(Float)
    delonsig = Column(Float)
    delat = Column(Float)
    delatsig = Column(Float)
    delonsnr = Column(Float)
    delatsnr = Column(Float)
    chi2pmra = Column(Float)
    chi2pmdec = Column(Float)
    ka = Column(Integer)
    k1 = Column(Integer)
    k2 = Column(Integer)
    km = Column(Integer)
    par_pm = Column(Float)
    par_pmsig = Column(Float)
    par_stat = Column(Float)
    par_sigma = Column(Float)
    dist_x = Column(Float)
    cc_flags = Column(CHAR(16))
    w1cc_map = Column(Integer)
    w1cc_map_str = Column(CHAR(20))
    w2cc_map = Column(Integer)
    w2cc_map_str = Column(CHAR(20))
    n_aw = Column(Integer)
    ab_flags = Column(CHAR(9))
    w1ab_map = Column(Integer)
    w1ab_map_str = Column(CHAR(13))
    w2ab_map = Column(Integer)
    w2ab_map_str = Column(CHAR(13))
    glon = Column(Float(53))
    glat = Column(Float(53))
    elon = Column(Float(53))
    elat = Column(Float(53))
    unwise_objid = Column(CHAR(20))


class CatWISEReject(Base):
    __tablename__ = 'catwise_reject'
    __table_args__ = {'schema': 'catalogdb', 'comment': 'prelim'}

    source_name = Column(String(21))
    source_id = Column(String(25), primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    sigra = Column(Float)
    sigdec = Column(Float)
    sigradec = Column(Float)
    wx = Column(Float)
    wy = Column(Float)
    w1sky = Column(Float)
    w1sigsk = Column(Float)
    w1conf = Column(Float)
    w2sky = Column(Float)
    w2sigsk = Column(Float)
    w2conf = Column(Float)
    w1fitr = Column(Float)
    w2fitr = Column(Float)
    w1snr = Column(Float)
    w2snr = Column(Float)
    w1flux = Column(Float(53))
    w1sigflux = Column(Float(53))
    w2flux = Column(Float(53))
    w2sigflux = Column(Float(53))
    w1mpro = Column(Float)
    w1sigmpro = Column(Float(53))
    w1rchi2 = Column(Float(53))
    w2mpro = Column(Float)
    w2sigmpro = Column(Float(53))
    w2rchi2 = Column(Float(53))
    rchi2 = Column(Float(53))
    nb = Column(SmallInteger)
    na = Column(SmallInteger)
    w1sat = Column(Float(53))
    w2sat = Column(Float(53))
    w1mag = Column(Float)
    w1sigm = Column(Float)
    w1flg = Column(Integer)
    w1cov = Column(Float)
    w2mag = Column(Float)
    w2sigm = Column(Float)
    w2flg = Column(Integer)
    w2cov = Column(Float)
    w1mag_1 = Column(Float)
    w1sigm_1 = Column(Float)
    w1flg_1 = Column(BigInteger)
    w2mag_1 = Column(Float)
    w2sigm_1 = Column(Float)
    w2flg_1 = Column(BigInteger)
    w1mag_2 = Column(Float)
    w1sigm_2 = Column(Float)
    w1flg_2 = Column(BigInteger)
    w2mag_2 = Column(Float)
    w2sigm_2 = Column(Float)
    w2flg_2 = Column(BigInteger)
    w1mag_3 = Column(Float)
    w1sigm_3 = Column(Float)
    w1flg_3 = Column(BigInteger)
    w2mag_3 = Column(Float)
    w2sigm_3 = Column(Float)
    w2flg_3 = Column(BigInteger)
    w1mag_4 = Column(Float)
    w1sigm_4 = Column(Float)
    w1flg_4 = Column(BigInteger)
    w2mag_4 = Column(Float)
    w2sigm_4 = Column(Float)
    w2flg_4 = Column(BigInteger)
    w1mag_5 = Column(Float)
    w1sigm_5 = Column(Float)
    w1flg_5 = Column(BigInteger)
    w2mag_5 = Column(Float)
    w2sigm_5 = Column(Float)
    w2flg_5 = Column(BigInteger)
    w1mag_6 = Column(Float)
    w1sigm_6 = Column(Float)
    w1flg_6 = Column(BigInteger)
    w2mag_6 = Column(Float)
    w2sigm_6 = Column(Float)
    w2flg_6 = Column(BigInteger)
    w1mag_7 = Column(Float)
    w1sigm_7 = Column(Float)
    w1flg_7 = Column(BigInteger)
    w2mag_7 = Column(Float)
    w2sigm_7 = Column(Float)
    w2flg_7 = Column(BigInteger)
    w1mag_8 = Column(Float)
    w1sigm_8 = Column(Float)
    w1flg_8 = Column(BigInteger)
    w2mag_8 = Column(Float)
    w2sigm_8 = Column(Float)
    w2flg_8 = Column(BigInteger)
    w1nm = Column(BigInteger)
    w1m = Column(Integer)
    w1magp = Column(Float)
    w1sigp1 = Column(Float)
    w1sigp2 = Column(Float)
    w1k = Column(Float)
    w1ndf = Column(Integer)
    w1mlq = Column(Float)
    w1mjdmin = Column(Float(53))
    w1mjdmax = Column(Float(53))
    w1mjdmean = Column(Float(53))
    w2nm = Column(BigInteger)
    w2m = Column(Integer)
    w2magp = Column(Float)
    w2sigp1 = Column(Float)
    w2sigp2 = Column(Float)
    w2k = Column(Float)
    w2ndf = Column(Integer)
    w2mlq = Column(Float)
    w2mjdmin = Column(Float(53))
    w2mjdmax = Column(Float(53))
    w2mjdmean = Column(Float(53))
    rho12 = Column(SmallInteger)
    q12 = Column(SmallInteger)
    niters = Column(BigInteger)
    nsteps = Column(BigInteger)
    mdetid = Column(BigInteger)
    p1 = Column(Float(53))
    p2 = Column(Float(53))
    meanobsmjd = Column(Float(53))
    ra_pm = Column(Float(53))
    dec_pm = Column(Float(53))
    sigra_pm = Column(Float)
    sigdec_pm = Column(Float)
    sigradec_pm = Column(Float)
    pmra = Column(Float)
    pmdec = Column(Float)
    sigpmra = Column(Float)
    sigpmdec = Column(Float)
    w1snr_pm = Column(Float)
    w2snr_pm = Column(Float)
    w1flux_pm = Column(Float(53))
    w1sigflux_pm = Column(Float(53))
    w2flux_pm = Column(Float(53))
    w2sigflux_pm = Column(Float(53))
    w1mpro_pm = Column(Float)
    w1sigmpro_pm = Column(Float)
    w1rchi2_pm = Column(Float(53))
    w2mpro_pm = Column(Float)
    w2sigmpro_pm = Column(Float)
    w2rchi2_pm = Column(Float(53))
    rchi2_pm = Column(Float(53))
    pmcode = Column(String(5))
    niters_pm = Column(BigInteger)
    nsteps_pm = Column(BigInteger)
    dist = Column(Float)
    dw1mag = Column(Float)
    rch2w1 = Column(Float)
    dw2mag = Column(Float)
    rch2w2 = Column(Float)
    elon_avg = Column(Float(53))
    elonsig = Column(Float)
    elat_avg = Column(Float(53))
    elatsig = Column(Float)
    delon = Column(Float)
    delonsig = Column(Float)
    delat = Column(Float)
    delatsig = Column(Float)
    delonsnr = Column(Float)
    delatsnr = Column(Float)
    chi2pmra = Column(Float(53))
    chi2pmdec = Column(Float(53))
    ka = Column(Integer)
    k1 = Column(Integer)
    k2 = Column(Integer)
    km = Column(Integer)
    par_pm = Column(Float)
    par_pmsig = Column(Float)
    par_stat = Column(Float)
    par_sigma = Column(Float)
    dist_x = Column(Float(53))
    cc_flags = Column(String(16))
    w1cc_map = Column(BigInteger)
    w1cc_map_str = Column(String(20))
    w2cc_map = Column(BigInteger)
    w2cc_map_str = Column(String(20))
    n_aw = Column(Integer)
    ab_flags = Column(String(9))
    w1ab_map = Column(BigInteger)
    w1ab_map_str = Column(String(13))
    w2ab_map = Column(BigInteger)
    w2ab_map_str = Column(String(13))
    glon = Column(Float(53))
    glat = Column(Float(53))
    elon = Column(Float(53))
    elat = Column(Float(53))
    p = Column(Boolean)


class EROSITASupersetAGN(Base):
    __tablename__ = 'erosita_superset_agn'
    __table_args__ = (
        Index('erosita_superset_agn_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(CHAR(24), index=True)
    ero_detuid = Column(CHAR(32), index=True)
    ero_flux = Column(Float, index=True)
    ero_morph = Column(CHAR(9))
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(CHAR(24))
    xmatch_version = Column(CHAR(24))
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger)
    target_class = Column(CHAR(12))
    target_priority = Column(Integer)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(CHAR(12), index=True)
    ls_id = Column(BigInteger, index=True)
    ps1_dr2_id = Column(BigInteger, index=True)
    gaia_dr2_id = Column(BigInteger, index=True)
    catwise2020_id = Column(CHAR(25), index=True)
    skymapper_dr2_id = Column(BigInteger, index=True)
    supercosmos_id = Column(BigInteger, index=True)
    tycho2_id = Column(CHAR(12))
    sdss_dr13_id = Column(BigInteger)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_agn_pkey_seq'::regclass)"))


class EROSITASupersetClusters(Base):
    __tablename__ = 'erosita_superset_clusters'
    __table_args__ = (
        Index('erosita_superset_clusters_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(CHAR(24), index=True)
    ero_detuid = Column(CHAR(32), index=True)
    ero_flux = Column(Float, index=True)
    ero_morph = Column(CHAR(9))
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(CHAR(24))
    xmatch_version = Column(CHAR(24))
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger)
    target_class = Column(CHAR(12))
    target_priority = Column(Integer)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(CHAR(12), index=True)
    ls_id = Column(BigInteger, index=True)
    ps1_dr2_id = Column(BigInteger, index=True)
    gaia_dr2_id = Column(BigInteger, index=True)
    catwise2020_id = Column(CHAR(25), index=True)
    skymapper_dr2_id = Column(BigInteger, index=True)
    supercosmos_id = Column(BigInteger, index=True)
    tycho2_id = Column(CHAR(12))
    sdss_dr13_id = Column(BigInteger)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_clusters_pkey_seq'::regclass)"))


class EROSITASupersetCompactobjects(Base):
    __tablename__ = 'erosita_superset_compactobjects'
    __table_args__ = (
        Index('erosita_superset_compactobject_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(CHAR(24), index=True)
    ero_detuid = Column(CHAR(32), index=True)
    ero_flux = Column(Float, index=True)
    ero_morph = Column(CHAR(9))
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(CHAR(24))
    xmatch_version = Column(CHAR(24))
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger)
    target_class = Column(CHAR(12))
    target_priority = Column(Integer)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(CHAR(12), index=True)
    ls_id = Column(BigInteger, index=True)
    ps1_dr2_id = Column(BigInteger, index=True)
    gaia_dr2_id = Column(BigInteger, index=True)
    catwise2020_id = Column(CHAR(25), index=True)
    skymapper_dr2_id = Column(BigInteger, index=True)
    supercosmos_id = Column(BigInteger, index=True)
    tycho2_id = Column(CHAR(12))
    sdss_dr13_id = Column(BigInteger)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_compactobjects_pkey_seq'::regclass)"))


class EROSITASupersetStars(Base):
    __tablename__ = 'erosita_superset_stars'
    __table_args__ = (
        Index('erosita_superset_stars_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(CHAR(24), index=True)
    ero_detuid = Column(CHAR(32), index=True)
    ero_flux = Column(Float, index=True)
    ero_morph = Column(CHAR(9))
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(CHAR(24))
    xmatch_version = Column(CHAR(24))
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger)
    target_class = Column(CHAR(12))
    target_priority = Column(Integer)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(CHAR(12), index=True)
    ls_id = Column(BigInteger, index=True)
    ps1_dr2_id = Column(BigInteger, index=True)
    gaia_dr2_id = Column(BigInteger, index=True)
    catwise2020_id = Column(CHAR(25), index=True)
    skymapper_dr2_id = Column(BigInteger, index=True)
    supercosmos_id = Column(BigInteger, index=True)
    tycho2_id = Column(CHAR(12))
    sdss_dr13_id = Column(BigInteger)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_stars_pkey_seq'::regclass)"))


class Gaia_DR2_RUWE(Base):
    __tablename__ = 'gaia_dr2_ruwe'

    source_id = Column(BigInteger, primary_key=True)
    ruwe = Column(Float, index=True)


class Gaia_DR2(Base):
    __tablename__ = 'gaia_dr2_source'

    solution_id = Column(BigInteger)
    designation = Column(Text)
    source_id = Column(BigInteger, primary_key=True)
    random_index = Column(BigInteger)
    ref_epoch = Column(Float(53))
    ra = Column(Float(53))
    ra_error = Column(Float(53))
    dec = Column(Float(53))
    dec_error = Column(Float(53))
    parallax = Column(Float(53), index=True)
    parallax_error = Column(Float(53))
    parallax_over_error = Column(Float)
    pmra = Column(Float(53))
    pmra_error = Column(Float(53))
    pmdec = Column(Float(53))
    pmdec_error = Column(Float(53))
    ra_dec_corr = Column(Float)
    ra_parallax_corr = Column(Float)
    ra_pmra_corr = Column(Float)
    ra_pmdec_corr = Column(Float)
    dec_parallax_corr = Column(Float)
    dec_pmra_corr = Column(Float)
    dec_pmdec_corr = Column(Float)
    parallax_pmra_corr = Column(Float)
    parallax_pmdec_corr = Column(Float)
    pmra_pmdec_corr = Column(Float)
    astrometric_n_obs_al = Column(Integer)
    astrometric_n_obs_ac = Column(Integer)
    astrometric_n_good_obs_al = Column(Integer)
    astrometric_n_bad_obs_al = Column(Integer)
    astrometric_gof_al = Column(Float)
    astrometric_chi2_al = Column(Float, index=True)
    astrometric_excess_noise = Column(Float(53), index=True)
    astrometric_excess_noise_sig = Column(Float(53))
    astrometric_params_solved = Column(Integer)
    astrometric_primary_flag = Column(Boolean)
    astrometric_weight_al = Column(Float)
    astrometric_pseudo_colour = Column(Float(53))
    astrometric_pseudo_colour_error = Column(Float(53))
    mean_varpi_factor_al = Column(Float)
    astrometric_matched_observations = Column(SmallInteger)
    visibility_periods_used = Column(SmallInteger)
    astrometric_sigma5d_max = Column(Float)
    frame_rotator_object_type = Column(Integer)
    matched_observations = Column(SmallInteger)
    duplicated_source = Column(Boolean)
    phot_g_n_obs = Column(Integer)
    phot_g_mean_flux = Column(Float(53), index=True)
    phot_g_mean_flux_error = Column(Float(53))
    phot_g_mean_flux_over_error = Column(Float)
    phot_g_mean_mag = Column(Float, index=True)
    phot_bp_n_obs = Column(Integer)
    phot_bp_mean_flux = Column(Float(53))
    phot_bp_mean_flux_error = Column(Float(53))
    phot_bp_mean_flux_over_error = Column(Float, index=True)
    phot_bp_mean_mag = Column(Float, index=True)
    phot_rp_n_obs = Column(Integer)
    phot_rp_mean_flux = Column(Float(53))
    phot_rp_mean_flux_error = Column(Float(53))
    phot_rp_mean_flux_over_error = Column(Float)
    phot_rp_mean_mag = Column(Float, index=True)
    phot_bp_rp_excess_factor = Column(Float)
    phot_proc_mode = Column(Integer)
    bp_rp = Column(Float, index=True)
    bp_g = Column(Float)
    g_rp = Column(Float)
    radial_velocity = Column(Float(53))
    radial_velocity_error = Column(Float(53))
    rv_nb_transits = Column(Integer)
    rv_template_teff = Column(Float)
    rv_template_logg = Column(Float)
    rv_template_fe_h = Column(Float)
    phot_variable_flag = Column(Text)
    l = Column(Float(53))
    b = Column(Float(53))
    ecl_lon = Column(Float(53))
    ecl_lat = Column(Float(53))
    priam_flags = Column(BigInteger)
    teff_val = Column(Float)
    teff_percentile_lower = Column(Float)
    teff_percentile_upper = Column(Float)
    a_g_val = Column(Float)
    a_g_percentile_lower = Column(Float)
    a_g_percentile_upper = Column(Float)
    e_bp_min_rp_val = Column(Float)
    e_bp_min_rp_percentile_lower = Column(Float)
    e_bp_min_rp_percentile_upper = Column(Float)
    flame_flags = Column(BigInteger)
    radius_val = Column(Float)
    radius_percentile_lower = Column(Float)
    radius_percentile_upper = Column(Float)
    lum_val = Column(Float)
    lum_percentile_lower = Column(Float)
    lum_percentile_upper = Column(Float)


class GAIA_ASSAS_SN_Cepheids(Base):
    __tablename__ = 'gaia_assas_sn_cepheids'

    source = Column(Text)
    ref = Column(Text)
    star = Column(Text)
    period = Column(Float(53))
    amp_v = Column(Float(53))
    mean_v = Column(Float(53))
    a1_v = Column(Float(53))
    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), primary_key=True)
    random_index = Column(Integer)
    ref_epoch = Column(Float)
    ra = Column(Float(53))
    ra_error = Column(Float(53))
    dec = Column(Float(53))
    dec_error = Column(Float(53))
    parallax = Column(Float(53))
    parallax_error = Column(Float(53))
    parallax_over_error = Column(Float(53))
    pmra = Column(Float(53))
    pmra_error = Column(Float(53))
    pmdec = Column(Float(53))
    pmdec_error = Column(Float(53))
    ra_dec_corr = Column(Float(53))
    ra_parallax_corr = Column(Float(53))
    ra_pmra_corr = Column(Float(53))
    ra_pmdec_corr = Column(Float(53))
    dec_parallax_corr = Column(Float(53))
    dec_pmra_corr = Column(Float(53))
    dec_pmdec_corr = Column(Float(53))
    parallax_pmra_corr = Column(Float(53))
    parallax_pmdec_corr = Column(Float(53))
    pmra_pmdec_corr = Column(Float(53))
    phot_g_n_obs = Column(SmallInteger)
    phot_g_mean_flux = Column(Float(53))
    phot_g_mean_flux_error = Column(Float(53))
    phot_g_mean_flux_over_error = Column(Float(53))
    phot_g_mean_mag = Column(Float(53))
    phot_bp_n_obs = Column(SmallInteger)
    phot_bp_mean_flux = Column(Float(53))
    phot_bp_mean_flux_error = Column(Float(53))
    phot_bp_mean_flux_over_error = Column(Float(53))
    phot_bp_mean_mag = Column(Float(53))
    phot_rp_n_obs = Column(SmallInteger)
    phot_rp_mean_flux = Column(Float(53))
    phot_rp_mean_flux_error = Column(Float(53))
    phot_rp_mean_flux_over_error = Column(Float(53))
    phot_rp_mean_mag = Column(Float(53))
    phot_bp_rp_excess_factor = Column(Float(53))
    phot_proc_mode = Column(SmallInteger)
    bp_rp = Column(Float(53))
    bp_g = Column(Float(53))
    g_rp = Column(Float(53))
    radial_velocity = Column(Float(53))
    radial_velocity_error = Column(Float(53))
    a_g_val = Column(Float(53))
    a_g_percentile_lower = Column(Float(53))
    a_g_percentile_upper = Column(Float(53))
    e_bp_min_rp_val = Column(Float(53))
    e_bp_min_rp_percentile_lower = Column(Float(53))
    e_bp_min_rp_percentile_upper = Column(Float(53))
    variability = Column(Float(53))
    type = Column(Text)
    twomass = Column(Text)
    raj2000 = Column(Float(53))
    dej2000 = Column(Float(53))
    errhalfmaj = Column(Float)
    errhalfmin = Column(Float)
    errposang = Column(Float)
    jmag = Column(Float)
    hmag = Column(Float)
    kmag = Column(Float)
    e_jmag = Column(Float)
    e_hmag = Column(Float)
    e_kmag = Column(Float)
    qfl = Column(Text)
    rfl = Column(SmallInteger)
    x = Column(SmallInteger)
    measurejd = Column(Float(53))
    angdist = Column(Float(53))


class Gaia_DR2_Clean(Base):
    __tablename__ = 'gaia_dr2_clean'

    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), primary_key=True)


class Gaia_DR2_WD(Base):
    __tablename__ = 'gaia_dr2_wd'

    wd = Column(Text, unique=True)
    dr2name = Column(Text)
    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), primary_key=True)
    source = Column(Integer)
    ra = Column(Float(53))
    e_ra = Column(Float(53))
    dec = Column(Float(53))
    e_dec = Column(Float(53))
    plx = Column(Float)
    e_plx = Column(Float)
    pmra = Column(Float(53))
    e_pmra = Column(Float(53))
    pmdec = Column(Float(53))
    e_pmdec = Column(Float(53))
    epsi = Column(Float)
    amax = Column(Float)
    fg_gaia = Column(Float)
    e_fg_gaia = Column(Float)
    g_gaia_mag = Column(Float)
    fbp = Column(Float)
    e_fbp = Column(Float)
    bpmag = Column(Float)
    frp = Column(Float)
    e_frp = Column(Float)
    rpmag = Column(Float)
    e_br_rp = Column(Float)
    glon = Column(Float(53))
    glat = Column(Float(53))
    density = Column(Float)
    ag = Column(Float)
    sdss = Column(Text)
    umag = Column(Float)
    e_umag = Column(Float)
    gmag = Column(Float, index=True)
    e_gmag = Column(Float)
    rmag = Column(Float)
    e_rmag = Column(Float)
    imag = Column(Float)
    e_imag = Column(Float)
    zmag = Column(Float)
    e_zmag = Column(Float)
    pwd = Column(Float, index=True)
    f_pwd = Column(Integer)
    teffh = Column(Float)
    e_teffh = Column(Float)
    loggh = Column(Float)
    e_loggh = Column(Float)
    massh = Column(Float)
    e_massh = Column(Float)
    chi2h = Column(Float)
    teffhe = Column(Float)
    e_teffhe = Column(Float)
    logghe = Column(Float)
    e_logghe = Column(Float)
    masshe = Column(Float)
    e_masshe = Column(Float)
    chisqhe = Column(Float)


class Gaia_unWISE_AGN(Base):
    __tablename__ = 'gaia_unwise_agn'

    ra = Column(Float(53))
    dec = Column(Float(53))
    gaia_sourceid = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', deferrable=True, initially='DEFERRED'), primary_key=True)
    unwise_objid = Column(ForeignKey('catalogdb.unwise.unwise_objid', deferrable=True, initially='DEFERRED'), index=True)
    plx = Column(Float(53))
    plx_err = Column(Float(53))
    pmra = Column(Float(53))
    pmra_err = Column(Float(53))
    pmdec = Column(Float(53))
    pmdec_err = Column(Float(53))
    plxsig = Column(Float(53))
    pmsig = Column(Float(53))
    ebv = Column(Float(53))
    n_obs = Column(Integer)
    g = Column(Float(53), index=True)
    bp = Column(Float(53))
    rp = Column(Float(53))
    w1 = Column(Float(53))
    w2 = Column(Float(53))
    bp_g = Column(Float(53))
    bp_rp = Column(Float(53))
    g_rp = Column(Float(53))
    g_w1 = Column(Float(53))
    gw_sep = Column(Float(53))
    w1_w2 = Column(Float(53))
    g_var = Column(Float(53))
    bprp_ef = Column(Float(53))
    aen = Column(Float(53))
    gof = Column(Float(53))
    cnt1 = Column(Integer)
    cnt2 = Column(Integer)
    cnt4 = Column(Integer)
    cnt8 = Column(Integer)
    cnt16 = Column(Integer)
    cnt32 = Column(Integer)
    phot_z = Column(Float(53))
    prob_rf = Column(Float(53), index=True)

    unwise = relationship('Unwise')


class Gaia_DR2_TwoMass_Best_Neighbour(Base):
    __tablename__ = 'gaiadr2_tmass_best_neighbour'

    tmass_oid = Column(BigInteger, index=True)
    number_of_neighbours = Column(Integer)
    number_of_mates = Column(Integer)
    best_neighbour_multiplicity = Column(Integer)
    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', ondelete='CASCADE', onupdate='CASCADE'), primary_key=True, index=True)
    original_ext_source_id = Column(CHAR(17), index=True)
    angular_distance = Column(Float(53), index=True)
    gaia_astrometric_params = Column(Integer)
    tmass_pts_key = Column(ForeignKey('catalogdb.twomass_psc.pts_key', ondelete='CASCADE', onupdate='CASCADE'), index=True)

    twomass_psc = relationship('TwomassPsc')


class GeometricDistances_Gaia_DR2(Base):
    __tablename__ = 'geometric_distances_gaia_dr2'

    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), primary_key=True)
    r_est = Column(Float, index=True)
    r_lo = Column(Float, index=True)
    r_hi = Column(Float, index=True)
    r_len = Column(Float, index=True)
    result_flag = Column(CHAR(1))
    modality_flag = Column(SmallInteger)


class MWM_TESS_OB(Base):
    __tablename__ = 'mwm_tess_ob'

    gaia_dr2_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    h_mag = Column(Float(53), index=True)
    instrument = Column(String)
    cadence = Column(String)


class Sagitta(Base):
    __tablename__ = 'sagitta'

    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    av = Column(Float, index=True)
    yso = Column(Float, index=True)
    yso_std = Column(Float, index=True)
    age = Column(Float)
    age_std = Column(Float)


class TransitionalMillisecondPulsars(Base):
    __tablename__ = 'transitional_msps'

    name = Column(Text)
    rastr = Column(Text)
    decstr = Column(Text)
    radeg = Column(Float(53))
    decdeg = Column(Float(53))
    ngaia = Column(Float)
    gaia_name = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_gmag = Column(Float)
    gaia_dist = Column(Float)
    gaia_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', ondelete='CASCADE', onupdate='CASCADE'), primary_key=True)


class YSO_Clustering(Base):
    __tablename__ = 'yso_clustering'

    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), primary_key=True)
    twomass = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    parallax = Column(Float)
    id = Column(Integer)
    g = Column(Float(53))
    bp = Column(Float(53))
    rp = Column(Float(53))
    j = Column(Float)
    h = Column(Float)
    k = Column(Float)
    age = Column(Float(53))
    eage = Column(Float(53))
    av = Column(Float(53))
    eav = Column(Float(53))
    dist = Column(Float(53))
    edist = Column(Float(53))


class Gaia_DR3(Base):
    __tablename__ = 'gaia_dr3_source'

    solution_id = Column(BigInteger, index=True)
    designation = Column(Text)
    source_id = Column(BigInteger, primary_key=True)
    random_index = Column(BigInteger)
    ref_epoch = Column(Float(53))
    ra = Column(Float(53))
    ra_error = Column(Float)
    dec = Column(Float(53))
    dec_error = Column(Float)
    parallax = Column(Float(53), index=True)
    parallax_error = Column(Float)
    parallax_over_error = Column(Float, index=True)
    pm = Column(Float)
    pmra = Column(Float(53))
    pmra_error = Column(Float)
    pmdec = Column(Float(53))
    pmdec_error = Column(Float)
    ra_dec_corr = Column(Float)
    ra_parallax_corr = Column(Float)
    ra_pmra_corr = Column(Float)
    ra_pmdec_corr = Column(Float)
    dec_parallax_corr = Column(Float)
    dec_pmra_corr = Column(Float)
    dec_pmdec_corr = Column(Float)
    parallax_pmra_corr = Column(Float)
    parallax_pmdec_corr = Column(Float)
    pmra_pmdec_corr = Column(Float)
    astrometric_n_obs_al = Column(SmallInteger)
    astrometric_n_obs_ac = Column(SmallInteger)
    astrometric_n_good_obs_al = Column(SmallInteger)
    astrometric_n_bad_obs_al = Column(SmallInteger)
    astrometric_gof_al = Column(Float)
    astrometric_chi2_al = Column(Float, index=True)
    astrometric_excess_noise = Column(Float, index=True)
    astrometric_excess_noise_sig = Column(Float)
    astrometric_params_solved = Column(SmallInteger)
    astrometric_primary_flag = Column(Boolean)
    nu_eff_used_in_astrometry = Column(Float)
    pseudocolour = Column(Float)
    pseudocolour_error = Column(Float)
    ra_pseudocolour_corr = Column(Float)
    dec_pseudocolour_corr = Column(Float)
    parallax_pseudocolour_corr = Column(Float)
    pmra_pseudocolour_corr = Column(Float)
    pmdec_pseudocolour_corr = Column(Float)
    astrometric_matched_transits = Column(SmallInteger)
    visibility_periods_used = Column(SmallInteger)
    astrometric_sigma5d_max = Column(Float)
    matched_transits = Column(SmallInteger)
    new_matched_transits = Column(SmallInteger)
    matched_transits_removed = Column(SmallInteger)
    ipd_gof_harmonic_amplitude = Column(Float)
    ipd_gof_harmonic_phase = Column(Float)
    ipd_frac_multi_peak = Column(SmallInteger)
    ipd_frac_odd_win = Column(SmallInteger)
    ruwe = Column(Float, index=True)
    scan_direction_strength_k1 = Column(Float)
    scan_direction_strength_k2 = Column(Float)
    scan_direction_strength_k3 = Column(Float)
    scan_direction_strength_k4 = Column(Float)
    scan_direction_mean_k1 = Column(Float)
    scan_direction_mean_k2 = Column(Float)
    scan_direction_mean_k3 = Column(Float)
    scan_direction_mean_k4 = Column(Float)
    duplicated_source = Column(Boolean)
    phot_g_n_obs = Column(SmallInteger)
    phot_g_mean_flux = Column(Float(53), index=True)
    phot_g_mean_flux_error = Column(Float)
    phot_g_mean_flux_over_error = Column(Float, index=True)
    phot_g_mean_mag = Column(Float, index=True)
    phot_bp_n_obs = Column(SmallInteger)
    phot_bp_mean_flux = Column(Float(53), index=True)
    phot_bp_mean_flux_error = Column(Float)
    phot_bp_mean_flux_over_error = Column(Float, index=True)
    phot_bp_mean_mag = Column(Float, index=True)
    phot_rp_n_obs = Column(SmallInteger)
    phot_rp_mean_flux = Column(Float(53), index=True)
    phot_rp_mean_flux_error = Column(Float)
    phot_rp_mean_flux_over_error = Column(Float, index=True)
    phot_rp_mean_mag = Column(Float, index=True)
    phot_bp_rp_excess_factor = Column(Float)
    phot_bp_n_contaminated_transits = Column(SmallInteger)
    phot_bp_n_blended_transits = Column(SmallInteger)
    phot_rp_n_contaminated_transits = Column(SmallInteger)
    phot_rp_n_blended_transits = Column(SmallInteger)
    phot_proc_mode = Column(SmallInteger)
    bp_rp = Column(Float, index=True)
    bp_g = Column(Float, index=True)
    g_rp = Column(Float, index=True)
    radial_velocity = Column(Float)
    radial_velocity_error = Column(Float)
    rv_method_used = Column(SmallInteger)
    rv_nb_transits = Column(SmallInteger)
    rv_nb_deblended_transits = Column(SmallInteger)
    rv_visibility_periods_used = Column(SmallInteger)
    rv_expected_sig_to_noise = Column(Float)
    rv_renormalised_gof = Column(Float)
    rv_chisq_pvalue = Column(Float)
    rv_time_duration = Column(Float)
    rv_amplitude_robust = Column(Float)
    rv_template_teff = Column(Float)
    rv_template_logg = Column(Float)
    rv_template_fe_h = Column(Float)
    rv_atm_param_origin = Column(SmallInteger)
    vbroad = Column(Float)
    vbroad_error = Column(Float)
    vbroad_nb_transits = Column(SmallInteger)
    grvs_mag = Column(Float)
    grvs_mag_error = Column(Float)
    grvs_mag_nb_transits = Column(SmallInteger)
    rvs_spec_sig_to_noise = Column(Float)
    phot_variable_flag = Column(Text)
    l = Column(Float(53))
    b = Column(Float(53))
    ecl_lon = Column(Float(53))
    ecl_lat = Column(Float(53))
    in_qso_candidates = Column(Boolean)
    in_galaxy_candidates = Column(Boolean)
    non_single_star = Column(SmallInteger)
    has_xp_continuous = Column(Boolean)
    has_xp_sampled = Column(Boolean)
    has_rvs = Column(Boolean)
    has_epoch_photometry = Column(Boolean)
    has_epoch_rv = Column(Boolean)
    has_mcmc_gspphot = Column(Boolean)
    has_mcmc_msc = Column(Boolean)
    in_andromeda_survey = Column(Boolean)
    classprob_dsc_combmod_quasar = Column(Float(53))
    classprob_dsc_combmod_galaxy = Column(Float(53))
    classprob_dsc_combmod_star = Column(Float(53))
    teff_gspphot = Column(Float(53))
    teff_gspphot_lower = Column(Float(53))
    teff_gspphot_upper = Column(Float(53))
    logg_gspphot = Column(Float(53))
    logg_gspphot_lower = Column(Float(53))
    logg_gspphot_upper = Column(Float(53))
    mh_gspphot = Column(Float(53))
    mh_gspphot_lower = Column(Float(53))
    mh_gspphot_upper = Column(Float(53))
    distance_gspphot = Column(Float(53))
    distance_gspphot_lower = Column(Float(53))
    distance_gspphot_upper = Column(Float(53))
    azero_gspphot = Column(Float(53))
    azero_gspphot_lower = Column(Float(53))
    azero_gspphot_upper = Column(Float(53))
    ag_gspphot = Column(Float(53))
    ag_gspphot_lower = Column(Float(53))
    ag_gspphot_upper = Column(Float(53))
    ebpminrp_gspphot = Column(Float(53))
    ebpminrp_gspphot_lower = Column(Float(53))
    ebpminrp_gspphot_upper = Column(Float(53))
    libname_gspphot = Column(Text)


class Gaia_dr3_astrophysical_parameters(Base):
    __tablename__ = 'gaia_dr3_astrophysical_parameters'

    solution_id = Column(BigInteger)
    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    classprob_dsc_combmod_quasar = Column(Float, index=True)
    classprob_dsc_combmod_galaxy = Column(Float, index=True)
    classprob_dsc_combmod_star = Column(Float, index=True)
    classprob_dsc_combmod_whitedwarf = Column(Float, index=True)
    classprob_dsc_combmod_binarystar = Column(Float, index=True)
    classprob_dsc_specmod_quasar = Column(Float)
    classprob_dsc_specmod_galaxy = Column(Float)
    classprob_dsc_specmod_star = Column(Float)
    classprob_dsc_specmod_whitedwarf = Column(Float)
    classprob_dsc_specmod_binarystar = Column(Float)
    classprob_dsc_allosmod_quasar = Column(Float)
    classprob_dsc_allosmod_galaxy = Column(Float)
    classprob_dsc_allosmod_star = Column(Float)
    teff_gspphot = Column(Float, index=True)
    teff_gspphot_lower = Column(Float)
    teff_gspphot_upper = Column(Float)
    logg_gspphot = Column(Float, index=True)
    logg_gspphot_lower = Column(Float)
    logg_gspphot_upper = Column(Float)
    mh_gspphot = Column(Float, index=True)
    mh_gspphot_lower = Column(Float)
    mh_gspphot_upper = Column(Float)
    distance_gspphot = Column(Float)
    distance_gspphot_lower = Column(Float)
    distance_gspphot_upper = Column(Float)
    azero_gspphot = Column(Float)
    azero_gspphot_lower = Column(Float)
    azero_gspphot_upper = Column(Float)
    ag_gspphot = Column(Float)
    ag_gspphot_lower = Column(Float)
    ag_gspphot_upper = Column(Float)
    abp_gspphot = Column(Float)
    abp_gspphot_lower = Column(Float)
    abp_gspphot_upper = Column(Float)
    arp_gspphot = Column(Float)
    arp_gspphot_lower = Column(Float)
    arp_gspphot_upper = Column(Float)
    ebpminrp_gspphot = Column(Float)
    ebpminrp_gspphot_lower = Column(Float)
    ebpminrp_gspphot_upper = Column(Float)
    mg_gspphot = Column(Float)
    mg_gspphot_lower = Column(Float)
    mg_gspphot_upper = Column(Float)
    radius_gspphot = Column(Float)
    radius_gspphot_lower = Column(Float)
    radius_gspphot_upper = Column(Float)
    logposterior_gspphot = Column(Float)
    mcmcaccept_gspphot = Column(Float)
    libname_gspphot = Column(Text)
    teff_gspspec = Column(Float)
    teff_gspspec_lower = Column(Float)
    teff_gspspec_upper = Column(Float)
    logg_gspspec = Column(Float)
    logg_gspspec_lower = Column(Float)
    logg_gspspec_upper = Column(Float)
    mh_gspspec = Column(Float)
    mh_gspspec_lower = Column(Float)
    mh_gspspec_upper = Column(Float)
    alphafe_gspspec = Column(Float)
    alphafe_gspspec_lower = Column(Float)
    alphafe_gspspec_upper = Column(Float)
    fem_gspspec = Column(Float)
    fem_gspspec_lower = Column(Float)
    fem_gspspec_upper = Column(Float)
    fem_gspspec_nlines = Column(Integer)
    fem_gspspec_linescatter = Column(Float)
    sife_gspspec = Column(Float)
    sife_gspspec_lower = Column(Float)
    sife_gspspec_upper = Column(Float)
    sife_gspspec_nlines = Column(Integer)
    sife_gspspec_linescatter = Column(Float)
    cafe_gspspec = Column(Float)
    cafe_gspspec_lower = Column(Float)
    cafe_gspspec_upper = Column(Float)
    cafe_gspspec_nlines = Column(Integer)
    cafe_gspspec_linescatter = Column(Float)
    tife_gspspec = Column(Float)
    tife_gspspec_lower = Column(Float)
    tife_gspspec_upper = Column(Float)
    tife_gspspec_nlines = Column(Integer)
    tife_gspspec_linescatter = Column(Float)
    mgfe_gspspec = Column(Float)
    mgfe_gspspec_lower = Column(Float)
    mgfe_gspspec_upper = Column(Float)
    mgfe_gspspec_nlines = Column(Integer)
    mgfe_gspspec_linescatter = Column(Float)
    ndfe_gspspec = Column(Float)
    ndfe_gspspec_lower = Column(Float)
    ndfe_gspspec_upper = Column(Float)
    ndfe_gspspec_nlines = Column(Integer)
    ndfe_gspspec_linescatter = Column(Float)
    feiim_gspspec = Column(Float)
    feiim_gspspec_lower = Column(Float)
    feiim_gspspec_upper = Column(Float)
    feiim_gspspec_nlines = Column(Integer)
    feiim_gspspec_linescatter = Column(Float)
    sfe_gspspec = Column(Float)
    sfe_gspspec_lower = Column(Float)
    sfe_gspspec_upper = Column(Float)
    sfe_gspspec_nlines = Column(Integer)
    sfe_gspspec_linescatter = Column(Float)
    zrfe_gspspec = Column(Float)
    zrfe_gspspec_lower = Column(Float)
    zrfe_gspspec_upper = Column(Float)
    zrfe_gspspec_nlines = Column(Integer)
    zrfe_gspspec_linescatter = Column(Float)
    nfe_gspspec = Column(Float)
    nfe_gspspec_lower = Column(Float)
    nfe_gspspec_upper = Column(Float)
    nfe_gspspec_nlines = Column(Integer)
    nfe_gspspec_linescatter = Column(Float)
    crfe_gspspec = Column(Float)
    crfe_gspspec_lower = Column(Float)
    crfe_gspspec_upper = Column(Float)
    crfe_gspspec_nlines = Column(Integer)
    crfe_gspspec_linescatter = Column(Float)
    cefe_gspspec = Column(Float)
    cefe_gspspec_lower = Column(Float)
    cefe_gspspec_upper = Column(Float)
    cefe_gspspec_nlines = Column(Integer)
    cefe_gspspec_linescatter = Column(Float)
    nife_gspspec = Column(Float)
    nife_gspspec_lower = Column(Float)
    nife_gspspec_upper = Column(Float)
    nife_gspspec_nlines = Column(Integer)
    nife_gspspec_linescatter = Column(Float)
    cn0ew_gspspec = Column(Float)
    cn0ew_gspspec_uncertainty = Column(Float)
    cn0_gspspec_centralline = Column(Float)
    cn0_gspspec_width = Column(Float)
    dib_gspspec_lambda = Column(Float)
    dib_gspspec_lambda_uncertainty = Column(Float)
    dibew_gspspec = Column(Float)
    dibew_gspspec_uncertainty = Column(Float)
    dibewnoise_gspspec_uncertainty = Column(Float)
    dibp0_gspspec = Column(Float)
    dibp2_gspspec = Column(Float)
    dibp2_gspspec_uncertainty = Column(Float)
    dibqf_gspspec = Column(Integer)
    flags_gspspec = Column(Text)
    logchisq_gspspec = Column(Float)
    ew_espels_halpha = Column(Float)
    ew_espels_halpha_uncertainty = Column(Float)
    ew_espels_halpha_flag = Column(Text)
    ew_espels_halpha_model = Column(Float)
    classlabel_espels = Column(Text)
    classlabel_espels_flag = Column(Text)
    classprob_espels_wcstar = Column(Float)
    classprob_espels_wnstar = Column(Float)
    classprob_espels_bestar = Column(Float)
    classprob_espels_ttauristar = Column(Float)
    classprob_espels_herbigstar = Column(Float)
    classprob_espels_dmestar = Column(Float)
    classprob_espels_pne = Column(Float)
    azero_esphs = Column(Float)
    azero_esphs_uncertainty = Column(Float)
    ag_esphs = Column(Float)
    ag_esphs_uncertainty = Column(Float)
    ebpminrp_esphs = Column(Float)
    ebpminrp_esphs_uncertainty = Column(Float)
    teff_esphs = Column(Float, index=True)
    teff_esphs_uncertainty = Column(Float, index=True)
    logg_esphs = Column(Float, index=True)
    logg_esphs_uncertainty = Column(Float, index=True)
    vsini_esphs = Column(Float, index=True)
    vsini_esphs_uncertainty = Column(Float, index=True)
    flags_esphs = Column(Text)
    spectraltype_esphs = Column(Text)
    activityindex_espcs = Column(Float)
    activityindex_espcs_uncertainty = Column(Float)
    activityindex_espcs_input = Column(Text)
    teff_espucd = Column(Float)
    teff_espucd_uncertainty = Column(Float)
    flags_espucd = Column(Text)
    radius_flame = Column(Float)
    radius_flame_lower = Column(Float)
    radius_flame_upper = Column(Float)
    lum_flame = Column(Float)
    lum_flame_lower = Column(Float)
    lum_flame_upper = Column(Float)
    mass_flame = Column(Float)
    mass_flame_lower = Column(Float)
    mass_flame_upper = Column(Float)
    age_flame = Column(Float)
    age_flame_lower = Column(Float)
    age_flame_upper = Column(Float)
    flags_flame = Column(Text)
    evolstage_flame = Column(Integer)
    gravredshift_flame = Column(Float)
    gravredshift_flame_lower = Column(Float)
    gravredshift_flame_upper = Column(Float)
    bc_flame = Column(Float)
    mh_msc = Column(Float)
    mh_msc_upper = Column(Float)
    mh_msc_lower = Column(Float)
    azero_msc = Column(Float)
    azero_msc_upper = Column(Float)
    azero_msc_lower = Column(Float)
    distance_msc = Column(Float)
    distance_msc_upper = Column(Float)
    distance_msc_lower = Column(Float)
    teff_msc1 = Column(Float)
    teff_msc1_upper = Column(Float)
    teff_msc1_lower = Column(Float)
    teff_msc2 = Column(Float)
    teff_msc2_upper = Column(Float)
    teff_msc2_lower = Column(Float)
    logg_msc1 = Column(Float)
    logg_msc1_upper = Column(Float)
    logg_msc1_lower = Column(Float)
    logg_msc2 = Column(Float)
    logg_msc2_upper = Column(Float)
    logg_msc2_lower = Column(Float)
    ag_msc = Column(Float)
    ag_msc_upper = Column(Float)
    ag_msc_lower = Column(Float)
    logposterior_msc = Column(Float)
    mcmcaccept_msc = Column(Float)
    mcmcdrift_msc = Column(Float)
    flags_msc = Column(Text)
    neuron_oa_id = Column(BigInteger)
    neuron_oa_dist = Column(Float(53))
    neuron_oa_dist_percentile_rank = Column(Integer)
    flags_oa = Column(Text)


class Gaia_dr3_galaxy_candidates(Base):
    __tablename__ = 'gaia_dr3_galaxy_candidates'

    solution_id = Column(BigInteger)
    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    vari_best_class_name = Column(Text)
    vari_best_class_score = Column(Float)
    classprob_dsc_combmod_galaxy = Column(Float, index=True)
    classprob_dsc_combmod_quasar = Column(Float, index=True)
    classlabel_dsc = Column(Text, index=True)
    classlabel_dsc_joint = Column(Text)
    classlabel_oa = Column(Text)
    redshift_ugc = Column(Float, index=True)
    redshift_ugc_lower = Column(Float)
    redshift_ugc_upper = Column(Float)
    n_transits = Column(Integer)
    posangle_sersic = Column(Float(53))
    posangle_sersic_error = Column(Float(53))
    intensity_sersic = Column(Float(53))
    intensity_sersic_error = Column(Float(53))
    radius_sersic = Column(Float(53))
    radius_sersic_error = Column(Float(53))
    ellipticity_sersic = Column(Float(53))
    ellipticity_sersic_error = Column(Float(53))
    n_sersic = Column(Float)
    n_sersic_error = Column(Float)
    l2_sersic = Column(Float(53))
    morph_params_corr_vec_sersic = Column(Text)
    flags_sersic = Column(SmallInteger)
    posangle_de_vaucouleurs = Column(Float(53))
    posangle_de_vaucouleurs_error = Column(Float(53))
    intensity_de_vaucouleurs = Column(Float(53))
    intensity_de_vaucouleurs_error = Column(Float(53))
    radius_de_vaucouleurs = Column(Float(53))
    radius_de_vaucouleurs_error = Column(Float(53))
    ellipticity_de_vaucouleurs = Column(Float(53))
    ellipticity_de_vaucouleurs_error = Column(Float(53))
    l2_de_vaucouleurs = Column(Float(53))
    morph_params_corr_vec_de_vaucouleurs = Column(Text)
    flags_de_vaucouleurs = Column(SmallInteger)
    source_selection_flags = Column(Integer)


class Gaia_dr3_nss_acceleration_astro(Base):
    __tablename__ = 'gaia_dr3_nss_acceleration_astro'

    solution_id = Column(BigInteger)
    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    nss_solution_type = Column(Text)
    ra = Column(Float(53))
    ra_error = Column(Float)
    dec = Column(Float(53))
    dec_error = Column(Float)
    parallax = Column(Float(53))
    parallax_error = Column(Float)
    pmra = Column(Float(53))
    pmra_error = Column(Float)
    pmdec = Column(Float(53))
    pmdec_error = Column(Float)
    accel_ra = Column(Float(53))
    accel_ra_error = Column(Float)
    accel_dec = Column(Float(53))
    accel_dec_error = Column(Float)
    deriv_accel_ra = Column(Float(53))
    deriv_accel_ra_error = Column(Float)
    deriv_accel_dec = Column(Float(53))
    deriv_accel_dec_error = Column(Float)
    astrometric_n_obs_al = Column(Integer)
    astrometric_n_good_obs_al = Column(Integer)
    bit_index = Column(BigInteger)
    corr_vec = Column(Text)
    obj_func = Column(Float)
    goodness_of_fit = Column(Float)
    significance = Column(Float)
    flags = Column(BigInteger)


class Gaia_dr3_nss_non_linear_spectro(Base):
    __tablename__ = 'gaia_dr3_nss_non_linear_spectro'

    solution_id = Column(BigInteger)
    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    nss_solution_type = Column(Text)
    mean_velocity = Column(Float(53), index=True)
    mean_velocity_error = Column(Float)
    first_deriv_velocity = Column(Float(53))
    first_deriv_velocity_error = Column(Float)
    second_deriv_velocity = Column(Float(53))
    second_deriv_velocity_error = Column(Float(53))
    rv_n_obs_primary = Column(Integer)
    rv_n_good_obs_primary = Column(Integer)
    bit_index = Column(BigInteger)
    corr_vec = Column(Text)
    obj_func = Column(Float)
    goodness_of_fit = Column(Float)
    flags = Column(BigInteger)


class Gaia_dr3_qso_candidates(Base):
    __tablename__ = 'gaia_dr3_qso_candidates'

    solution_id = Column(BigInteger)
    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    astrometric_selection_flag = Column(Boolean)
    gaia_crf_source = Column(Boolean)
    vari_best_class_name = Column(Text)
    vari_best_class_score = Column(Float)
    fractional_variability_g = Column(Float)
    structure_function_index = Column(Float)
    structure_function_index_scatter = Column(Float(53))
    qso_variability = Column(Float)
    non_qso_variability = Column(Float)
    vari_agn_membership_score = Column(Float(53))
    classprob_dsc_combmod_quasar = Column(Float, index=True)
    classprob_dsc_combmod_galaxy = Column(Float, index=True)
    classlabel_dsc = Column(Text, index=True)
    classlabel_dsc_joint = Column(Text)
    classlabel_oa = Column(Text)
    redshift_qsoc = Column(Float, index=True)
    redshift_qsoc_lower = Column(Float)
    redshift_qsoc_upper = Column(Float)
    ccfratio_qsoc = Column(Float)
    zscore_qsoc = Column(Float)
    flags_qsoc = Column(BigInteger)
    n_transits = Column(Integer)
    intensity_quasar = Column(Float(53))
    intensity_quasar_error = Column(Float(53))
    intensity_hostgalaxy = Column(Float(53))
    intensity_hostgalaxy_error = Column(Float(53))
    radius_hostgalaxy = Column(Float(53))
    radius_hostgalaxy_error = Column(Float(53))
    sersic_index = Column(Float)
    sersic_index_error = Column(Float)
    ellipticity_hostgalaxy = Column(Float(53))
    ellipticity_hostgalaxy_error = Column(Float(53))
    posangle_hostgalaxy = Column(Float(53))
    posangle_hostgalaxy_error = Column(Float(53))
    host_galaxy_detected = Column(Boolean)
    l2_norm = Column(Float(53))
    morph_params_corr_vec = Column(Text)
    host_galaxy_flag = Column(SmallInteger)
    source_selection_flags = Column(Integer)


class Gaia_dr3_ravedr6_best_neighbour(Base):
    __tablename__ = 'gaia_dr3_ravedr6_best_neighbour'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    original_ext_source_id = Column(Text, index=True)
    angular_distance = Column(Float, index=True)
    xm_flag = Column(SmallInteger, index=True)
    ravedr6_oid = Column(Integer, index=True)
    number_of_neighbours = Column(SmallInteger, index=True)


class Gaia_dr3_ravedr6_neighbourhood(Base):
    __tablename__ = 'gaia_dr3_ravedr6_neighbourhood'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    original_ext_source_id = Column(Text, index=True)
    angular_distance = Column(Float, index=True)
    score = Column(Float(53), index=True)
    xm_flag = Column(SmallInteger, index=True)
    ravedr6_oid = Column(Integer, index=True)


class Gaia_dr3_synthetic_photometry_gspc(Base):
    __tablename__ = 'gaia_dr3_synthetic_photometry_gspc'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    c_star = Column(Float)
    u_jkc_flux = Column(Float)
    u_jkc_flux_error = Column(Float)
    u_jkc_mag = Column(Float)
    u_jkc_flag = Column(SmallInteger)
    b_jkc_flux = Column(Float)
    b_jkc_flux_error = Column(Float)
    b_jkc_mag = Column(Float(53))
    b_jkc_flag = Column(SmallInteger)
    v_jkc_flux = Column(Float)
    v_jkc_flux_error = Column(Float)
    v_jkc_mag = Column(Float)
    v_jkc_flag = Column(SmallInteger)
    r_jkc_flux = Column(Float)
    r_jkc_flux_error = Column(Float)
    r_jkc_mag = Column(Float)
    r_jkc_flag = Column(SmallInteger)
    i_jkc_flux = Column(Float)
    i_jkc_flux_error = Column(Float)
    i_jkc_mag = Column(Float)
    i_jkc_flag = Column(SmallInteger)
    u_sdss_flux = Column(Float)
    u_sdss_flux_error = Column(Float)
    u_sdss_mag = Column(Float)
    u_sdss_flag = Column(SmallInteger)
    g_sdss_flux = Column(Float)
    g_sdss_flux_error = Column(Float)
    g_sdss_mag = Column(Float, index=True)
    g_sdss_flag = Column(SmallInteger, index=True)
    r_sdss_flux = Column(Float)
    r_sdss_flux_error = Column(Float)
    r_sdss_mag = Column(Float, index=True)
    r_sdss_flag = Column(SmallInteger, index=True)
    i_sdss_flux = Column(Float)
    i_sdss_flux_error = Column(Float)
    i_sdss_mag = Column(Float, index=True)
    i_sdss_flag = Column(SmallInteger, index=True)
    z_sdss_flux = Column(Float)
    z_sdss_flux_error = Column(Float)
    z_sdss_mag = Column(Float)
    z_sdss_flag = Column(SmallInteger)
    y_ps1_flux = Column(Float)
    y_ps1_flux_error = Column(Float)
    y_ps1_mag = Column(Float)
    y_ps1_flag = Column(SmallInteger)
    f606w_acswfc_flux = Column(Float)
    f606w_acswfc_flux_error = Column(Float)
    f606w_acswfc_mag = Column(Float)
    f606w_acswfc_flag = Column(SmallInteger)
    f814w_acswfc_flux = Column(Float)
    f814w_acswfc_flux_error = Column(Float)
    f814w_acswfc_mag = Column(Float)
    f814w_acswfc_flag = Column(SmallInteger)


class Gaia_dr3_vari_agn(Base):
    __tablename__ = 'gaia_dr3_vari_agn'

    solution_id = Column(BigInteger)
    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    fractional_variability_g = Column(Float, index=True)
    structure_function_index = Column(Float)
    structure_function_index_scatter = Column(Float)
    qso_variability = Column(Float, index=True)
    non_qso_variability = Column(Float)


class Gaia_dr3_vari_rrlyrae(Base):
    __tablename__ = 'gaia_dr3_vari_rrlyrae'

    solution_id = Column(BigInteger, index=True)
    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    pf = Column(Float(53))
    pf_error = Column(Float)
    p1_o = Column(Float(53))
    p1_o_error = Column(Float)
    epoch_g = Column(Float(53))
    epoch_g_error = Column(Float(53))
    epoch_bp = Column(Float(53))
    epoch_bp_error = Column(Float)
    epoch_rp = Column(Float(53))
    epoch_rp_error = Column(Float)
    epoch_rv = Column(Float(53))
    epoch_rv_error = Column(Float)
    int_average_g = Column(Float)
    int_average_g_error = Column(Float)
    int_average_bp = Column(Float)
    int_average_bp_error = Column(Float)
    int_average_rp = Column(Float)
    int_average_rp_error = Column(Float)
    average_rv = Column(Float)
    average_rv_error = Column(Float)
    peak_to_peak_g = Column(Float)
    peak_to_peak_g_error = Column(Float)
    peak_to_peak_bp = Column(Float)
    peak_to_peak_bp_error = Column(Float)
    peak_to_peak_rp = Column(Float)
    peak_to_peak_rp_error = Column(Float)
    peak_to_peak_rv = Column(Float(53))
    peak_to_peak_rv_error = Column(Float(53))
    metallicity = Column(Float)
    metallicity_error = Column(Float)
    r21_g = Column(Float)
    r21_g_error = Column(Float)
    r31_g = Column(Float)
    r31_g_error = Column(Float)
    phi21_g = Column(Float)
    phi21_g_error = Column(Float)
    phi31_g = Column(Float)
    phi31_g_error = Column(Float)
    num_clean_epochs_g = Column(SmallInteger)
    num_clean_epochs_bp = Column(SmallInteger)
    num_clean_epochs_rp = Column(SmallInteger)
    num_clean_epochs_rv = Column(SmallInteger)
    zp_mag_g = Column(Float)
    zp_mag_bp = Column(Float)
    zp_mag_rp = Column(Float)
    num_harmonics_for_p1_g = Column(SmallInteger)
    num_harmonics_for_p1_bp = Column(SmallInteger)
    num_harmonics_for_p1_rp = Column(SmallInteger)
    num_harmonics_for_p1_rv = Column(SmallInteger)
    reference_time_g = Column(Float(53))
    reference_time_bp = Column(Float(53))
    reference_time_rp = Column(Float(53))
    reference_time_rv = Column(Float(53))
    fund_freq1 = Column(Float(53))
    fund_freq1_error = Column(Float)
    fund_freq2 = Column(Float(53))
    fund_freq2_error = Column(Float)
    fund_freq1_harmonic_ampl_g = Column(Text)
    fund_freq1_harmonic_ampl_g_error = Column(Text)
    fund_freq1_harmonic_phase_g = Column(Text)
    fund_freq1_harmonic_phase_g_error = Column(Text)
    fund_freq1_harmonic_ampl_bp = Column(Text)
    fund_freq1_harmonic_ampl_bp_error = Column(Text)
    fund_freq1_harmonic_phase_bp = Column(Text)
    fund_freq1_harmonic_phase_bp_error = Column(Text)
    fund_freq1_harmonic_ampl_rp = Column(Text)
    fund_freq1_harmonic_ampl_rp_error = Column(Text)
    fund_freq1_harmonic_phase_rp = Column(Text)
    fund_freq1_harmonic_phase_rp_error = Column(Text)
    fund_freq1_harmonic_ampl_rv = Column(Text)
    fund_freq1_harmonic_ampl_rv_error = Column(Text)
    fund_freq1_harmonic_phase_rv = Column(Text)
    fund_freq1_harmonic_phase_rv_error = Column(Text)
    best_classification = Column(Text)
    g_absorption = Column(Float)
    g_absorption_error = Column(Float)


class Gaia_dr3_xp_sampled_mean_spectrum(Base):
    __tablename__ = 'gaia_dr3_xp_sampled_mean_spectrum'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    solution_id = Column(BigInteger)
    ra = Column(Float(53))
    dec = Column(Float(53))
    flux = Column(Text)
    flux_error = Column(Text)


class Gaia_dr3_xp_summary(Base):
    __tablename__ = 'gaia_dr3_xp_summary'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    solution_id = Column(BigInteger)
    bp_n_relevant_bases = Column(SmallInteger)
    bp_relative_shrinking = Column(Float)
    bp_n_measurements = Column(SmallInteger)
    bp_n_rejected_measurements = Column(SmallInteger)
    bp_standard_deviation = Column(Float)
    bp_chi_squared = Column(Float)
    bp_n_transits = Column(SmallInteger, index=True)
    bp_n_contaminated_transits = Column(SmallInteger, index=True)
    bp_n_blended_transits = Column(SmallInteger, index=True)
    rp_n_relevant_bases = Column(SmallInteger)
    rp_relative_shrinking = Column(Float)
    rp_n_measurements = Column(SmallInteger)
    rp_n_rejected_measurements = Column(SmallInteger)
    rp_standard_deviation = Column(Float)
    rp_chi_squared = Column(Float)
    rp_n_transits = Column(SmallInteger, index=True)
    rp_n_contaminated_transits = Column(SmallInteger, index=True)
    rp_n_blended_transits = Column(SmallInteger, index=True)


class Gaia_edr3_panstarrs1_best_neighbour(Base):
    __tablename__ = 'gaia_edr3_panstarrs1_best_neighbour'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    clean_panstarrs1_oid = Column(BigInteger, index=True)
    original_ext_source_id = Column(BigInteger, index=True)
    angular_distance = Column(Float, index=True)
    number_of_neighbours = Column(SmallInteger, index=True)
    number_of_mates = Column(SmallInteger, index=True)
    xm_flag = Column(SmallInteger, index=True)


class Gaia_edr3_sdssdr13_best_neighbour(Base):
    __tablename__ = 'gaia_edr3_sdssdr13_best_neighbour'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    clean_sdssdr13_oid = Column(BigInteger, index=True)
    original_ext_source_id = Column(ForeignKey('catalogdb.sdss_dr13_photoobj.objid'), index=True)
    angular_distance = Column(Float, index=True)
    number_of_neighbours = Column(SmallInteger, index=True)
    number_of_mates = Column(SmallInteger, index=True)
    xm_flag = Column(SmallInteger, index=True)

    original_ext_source = relationship('SdssDr13Photoobj')


class Gaia_edr3_tmass_psc_xsc_best_neighbour(Base):
    __tablename__ = 'gaia_edr3_tmass_psc_xsc_best_neighbour'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    original_ext_source_id = Column(Text, index=True)
    angular_distance = Column(Float, index=True)
    xm_flag = Column(SmallInteger, index=True)
    clean_tmass_psc_xsc_oid = Column(BigInteger, index=True)
    number_of_neighbours = Column(SmallInteger, index=True)
    number_of_mates = Column(SmallInteger, index=True)


class Gaia_edr3_tmass_psc_xsc_best_neighbour2(Base):
    __tablename__ = 'gaia_edr3_tmass_psc_xsc_best_neighbour2'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    original_ext_source_id = Column(ForeignKey('catalogdb.twomass_psc.designation'), index=True)
    angular_distance = Column(Float, index=True)
    xm_flag = Column(SmallInteger, index=True)
    clean_tmass_psc_xsc_oid = Column(BigInteger, index=True)
    number_of_neighbours = Column(SmallInteger, index=True)
    number_of_mates = Column(SmallInteger, index=True)

    original_ext_source = relationship('TwomassPsc')


class LvmMagnitude(Base):
    __tablename__ = 'lvm_magnitude'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    lflux = Column(Float)
    lmag_ab = Column(Float, index=True)
    lmag_vega = Column(Float, index=True)


class Visual_binary_gaia_dr3(Base):
    __tablename__ = 'visual_binary_gaia_dr3'

    solution_id1 = Column(BigInteger)
    solution_id2 = Column(BigInteger)
    source_id1 = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    source_id2 = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'))
    random_index1 = Column(BigInteger)
    random_index2 = Column(BigInteger)
    ref_epoch1 = Column(Float(53))
    ref_epoch2 = Column(Float(53))
    ra1 = Column(Float(53))
    ra2 = Column(Float(53))
    ra_error1 = Column(Float)
    ra_error2 = Column(Float)
    dec1 = Column(Float(53))
    dec2 = Column(Float(53))
    dec_error1 = Column(Float)
    dec_error2 = Column(Float)
    parallax1 = Column(Float(53))
    parallax2 = Column(Float(53))
    parallax_error1 = Column(Float)
    parallax_error2 = Column(Float)
    parallax_over_error1 = Column(Float)
    parallax_over_error2 = Column(Float)
    pm1 = Column(Float)
    pm2 = Column(Float)
    pmra1 = Column(Float(53))
    pmra2 = Column(Float(53))
    pmra_error1 = Column(Float)
    pmra_error2 = Column(Float)
    pmdec1 = Column(Float(53))
    pmdec2 = Column(Float(53))
    pmdec_error1 = Column(Float)
    pmdec_error2 = Column(Float)
    ra_dec_corr1 = Column(Float)
    ra_dec_corr2 = Column(Float)
    ra_parallax_corr1 = Column(Float)
    ra_parallax_corr2 = Column(Float)
    ra_pmra_corr1 = Column(Float)
    ra_pmra_corr2 = Column(Float)
    ra_pmdec_corr1 = Column(Float)
    ra_pmdec_corr2 = Column(Float)
    dec_parallax_corr1 = Column(Float)
    dec_parallax_corr2 = Column(Float)
    dec_pmra_corr1 = Column(Float)
    dec_pmra_corr2 = Column(Float)
    dec_pmdec_corr1 = Column(Float)
    dec_pmdec_corr2 = Column(Float)
    parallax_pmra_corr1 = Column(Float)
    parallax_pmra_corr2 = Column(Float)
    parallax_pmdec_corr1 = Column(Float)
    parallax_pmdec_corr2 = Column(Float)
    pmra_pmdec_corr1 = Column(Float)
    pmra_pmdec_corr2 = Column(Float)
    astrometric_n_obs_al1 = Column(SmallInteger)
    astrometric_n_obs_al2 = Column(SmallInteger)
    astrometric_n_obs_ac1 = Column(SmallInteger)
    astrometric_n_obs_ac2 = Column(SmallInteger)
    astrometric_n_good_obs_al1 = Column(SmallInteger)
    astrometric_n_good_obs_al2 = Column(SmallInteger)
    astrometric_n_bad_obs_al1 = Column(SmallInteger)
    astrometric_n_bad_obs_al2 = Column(SmallInteger)
    astrometric_gof_al1 = Column(Float)
    astrometric_gof_al2 = Column(Float)
    astrometric_chi2_al1 = Column(Float)
    astrometric_chi2_al2 = Column(Float)
    astrometric_excess_noise1 = Column(Float)
    astrometric_excess_noise2 = Column(Float)
    astrometric_excess_noise_sig1 = Column(Float)
    astrometric_excess_noise_sig2 = Column(Float)
    astrometric_params_solved1 = Column(SmallInteger)
    astrometric_params_solved2 = Column(SmallInteger)
    astrometric_primary_flag1 = Column(Boolean)
    astrometric_primary_flag2 = Column(Boolean)
    nu_eff_used_in_astrometry1 = Column(Float)
    nu_eff_used_in_astrometry2 = Column(Float)
    pseudocolour1 = Column(Float)
    pseudocolour2 = Column(Float)
    pseudocolour_error1 = Column(Float)
    pseudocolour_error2 = Column(Float)
    ra_pseudocolour_corr1 = Column(Float)
    ra_pseudocolour_corr2 = Column(Float)
    dec_pseudocolour_corr1 = Column(Float)
    dec_pseudocolour_corr2 = Column(Float)
    parallax_pseudocolour_corr1 = Column(Float)
    parallax_pseudocolour_corr2 = Column(Float)
    pmra_pseudocolour_corr1 = Column(Float)
    pmra_pseudocolour_corr2 = Column(Float)
    pmdec_pseudocolour_corr1 = Column(Float)
    pmdec_pseudocolour_corr2 = Column(Float)
    astrometric_matched_transits1 = Column(SmallInteger)
    astrometric_matched_transits2 = Column(SmallInteger)
    visibility_periods_used1 = Column(SmallInteger)
    visibility_periods_used2 = Column(SmallInteger)
    astrometric_sigma5d_max1 = Column(Float)
    astrometric_sigma5d_max2 = Column(Float)
    matched_transits1 = Column(SmallInteger)
    matched_transits2 = Column(SmallInteger)
    new_matched_transits1 = Column(SmallInteger)
    new_matched_transits2 = Column(SmallInteger)
    matched_transits_removed1 = Column(SmallInteger)
    matched_transits_removed2 = Column(SmallInteger)
    ipd_gof_harmonic_amplitude1 = Column(Float)
    ipd_gof_harmonic_amplitude2 = Column(Float)
    ipd_gof_harmonic_phase1 = Column(Float)
    ipd_gof_harmonic_phase2 = Column(Float)
    ipd_frac_multi_peak1 = Column(SmallInteger)
    ipd_frac_multi_peak2 = Column(SmallInteger)
    ipd_frac_odd_win1 = Column(SmallInteger)
    ipd_frac_odd_win2 = Column(SmallInteger)
    ruwe1 = Column(Float)
    ruwe2 = Column(Float)
    scan_direction_strength_k11 = Column(Float)
    scan_direction_strength_k12 = Column(Float)
    scan_direction_strength_k21 = Column(Float)
    scan_direction_strength_k22 = Column(Float)
    scan_direction_strength_k31 = Column(Float)
    scan_direction_strength_k32 = Column(Float)
    scan_direction_strength_k41 = Column(Float)
    scan_direction_strength_k42 = Column(Float)
    scan_direction_mean_k11 = Column(Float)
    scan_direction_mean_k12 = Column(Float)
    scan_direction_mean_k21 = Column(Float)
    scan_direction_mean_k22 = Column(Float)
    scan_direction_mean_k31 = Column(Float)
    scan_direction_mean_k32 = Column(Float)
    scan_direction_mean_k41 = Column(Float)
    scan_direction_mean_k42 = Column(Float)
    duplicated_source1 = Column(Boolean)
    duplicated_source2 = Column(Boolean)
    phot_g_n_obs1 = Column(SmallInteger)
    phot_g_n_obs2 = Column(SmallInteger)
    phot_g_mean_flux1 = Column(Float(53))
    phot_g_mean_flux2 = Column(Float(53))
    phot_g_mean_flux_error1 = Column(Float)
    phot_g_mean_flux_error2 = Column(Float)
    phot_g_mean_flux_over_error1 = Column(Float)
    phot_g_mean_flux_over_error2 = Column(Float)
    phot_g_mean_mag1 = Column(Float)
    phot_g_mean_mag2 = Column(Float)
    phot_bp_n_obs1 = Column(SmallInteger)
    phot_bp_n_obs2 = Column(SmallInteger)
    phot_bp_mean_flux1 = Column(Float(53))
    phot_bp_mean_flux2 = Column(Float(53))
    phot_bp_mean_flux_error1 = Column(Float)
    phot_bp_mean_flux_error2 = Column(Float)
    phot_bp_mean_flux_over_error1 = Column(Float)
    phot_bp_mean_flux_over_error2 = Column(Float)
    phot_bp_mean_mag1 = Column(Float)
    phot_bp_mean_mag2 = Column(Float)
    phot_rp_n_obs1 = Column(SmallInteger)
    phot_rp_n_obs2 = Column(SmallInteger)
    phot_rp_mean_flux1 = Column(Float(53))
    phot_rp_mean_flux2 = Column(Float(53))
    phot_rp_mean_flux_error1 = Column(Float)
    phot_rp_mean_flux_error2 = Column(Float)
    phot_rp_mean_flux_over_error1 = Column(Float)
    phot_rp_mean_flux_over_error2 = Column(Float)
    phot_rp_mean_mag1 = Column(Float)
    phot_rp_mean_mag2 = Column(Float)
    phot_bp_n_contaminated_transits1 = Column(SmallInteger)
    phot_bp_n_contaminated_transits2 = Column(SmallInteger)
    phot_bp_n_blended_transits1 = Column(SmallInteger)
    phot_bp_n_blended_transits2 = Column(SmallInteger)
    phot_rp_n_contaminated_transits1 = Column(SmallInteger)
    phot_rp_n_contaminated_transits2 = Column(SmallInteger)
    phot_rp_n_blended_transits1 = Column(SmallInteger)
    phot_rp_n_blended_transits2 = Column(SmallInteger)
    phot_proc_mode1 = Column(SmallInteger)
    phot_proc_mode2 = Column(SmallInteger)
    phot_bp_rp_excess_factor1 = Column(Float)
    phot_bp_rp_excess_factor2 = Column(Float)
    bp_rp1 = Column(Float)
    bp_rp2 = Column(Float)
    bp_g1 = Column(Float)
    bp_g2 = Column(Float)
    g_rp1 = Column(Float)
    g_rp2 = Column(Float)
    dr2_radial_velocity1 = Column(Float)
    dr2_radial_velocity2 = Column(Float)
    dr2_radial_velocity_error1 = Column(Float)
    dr2_radial_velocity_error2 = Column(Float)
    dr2_rv_nb_transits1 = Column(SmallInteger)
    dr2_rv_nb_transits2 = Column(SmallInteger)
    dr2_rv_template_teff1 = Column(Float)
    dr2_rv_template_teff2 = Column(Float)
    dr2_rv_template_logg1 = Column(Float)
    dr2_rv_template_logg2 = Column(Float)
    dr2_rv_template_fe_h1 = Column(Float)
    dr2_rv_template_fe_h2 = Column(Float)
    l1 = Column(Float(53))
    l2 = Column(Float(53))
    b1 = Column(Float(53))
    b2 = Column(Float(53))
    ecl_lon1 = Column(Float(53))
    ecl_lon2 = Column(Float(53))
    ecl_lat1 = Column(Float(53))
    ecl_lat2 = Column(Float(53))
    pairdistance = Column(Float(53))
    sep_au = Column(Float(53))
    binary_type = Column(Text)
    sigma18 = Column(Float(53))
    r_chance_align = Column(Float(53))
    dr2_source_id1 = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'))
    dr2_source_id2 = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'))
    dr2_parallax1 = Column(Float(53))
    dr2_parallax2 = Column(Float(53))
    dr2_parallax_error1 = Column(Float(53))
    dr2_parallax_error2 = Column(Float(53))
    dr2_pmra1 = Column(Float(53))
    dr2_pmra2 = Column(Float(53))
    dr2_pmdec1 = Column(Float(53))
    dr2_pmdec2 = Column(Float(53))
    dr2_pmra_error1 = Column(Float(53))
    dr2_pmra_error2 = Column(Float(53))
    dr2_pmdec_error1 = Column(Float(53))
    dr2_pmdec_error2 = Column(Float(53))
    dr2_ruwe1 = Column(Float(53))
    dr2_ruwe2 = Column(Float(53))

    gaia_dr2_source = relationship('GaiaDr2Source', primaryjoin='VisualBinaryGaiaDr3.dr2_source_id1 == GaiaDr2Source.source_id', foreign_keys=[dr2_source_id1])
    gaia_dr2_source2 = relationship('GaiaDr2Source', primaryjoin='VisualBinaryGaiaDr3.dr2_source_id2 == GaiaDr2Source.source_id', foreign_keys=[dr2_source_id2])
    gaia_dr3_source = relationship('GaiaDr3Source', primaryjoin='VisualBinaryGaiaDr3.source_id1 == GaiaDr3Source.source_id', foreign_keys=[source_id1])
    gaia_dr3_source2 = relationship('GaiaDr3Source', primaryjoin='VisualBinaryGaiaDr3.source_id2 == GaiaDr3Source.source_id', foreign_keys=[source_id2])


class WD_gaia_dr3(Base):
    __tablename__ = 'wd_gaia_dr3'

    wdjname = Column(Text)
    gaiaedr3 = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    gaiadr2 = Column(BigInteger, index=True)
    edr3name = Column(Text)
    radeg = Column(Float(53))
    e_radeg = Column(Float(53))
    dedeg = Column(Float(53))
    e_dedeg = Column(Float(53))
    plx = Column(Float(53))
    e_plx = Column(Float(53))
    rplx = Column(Float(53))
    zpcor = Column(Float(53))
    pwd = Column(Float(53))
    density = Column(BigInteger)
    solid = Column(BigInteger)
    randomi = Column(BigInteger)
    epoch = Column(BigInteger)
    pm = Column(Float(53))
    e_pm = Column(Float(53))
    pmra = Column(Float(53))
    e_pmra = Column(Float(53))
    pmde = Column(Float(53))
    e_pmde = Column(Float(53))
    radecor = Column(Float(53))
    raplxcor = Column(Float(53))
    rapmracor = Column(Float(53))
    rapmdecor = Column(Float(53))
    deplxcor = Column(Float(53))
    depmracor = Column(Float(53))
    depmdecor = Column(Float(53))
    plxpmracor = Column(Float(53))
    plxpmdecor = Column(Float(53))
    pmrapmdecor = Column(Float(53))
    nal = Column(BigInteger)
    nac = Column(BigInteger)
    ngal = Column(BigInteger)
    nbal = Column(BigInteger)
    gofal = Column(Float(53))
    chi2al = Column(Float(53))
    epsi = Column(Float(53))
    sepsi = Column(Float(53))
    solved = Column(BigInteger)
    apf = Column(BigInteger)
    nueff = Column(Float(53))
    pscol = Column(Float(53))
    e_pscol = Column(Float(53))
    rapscolcorr = Column(Float(53))
    depscolcorr = Column(Float(53))
    plxpscolcorr = Column(Float(53))
    pmrapscolcorr = Column(Float(53))
    pmdepscolcorr = Column(Float(53))
    matchobsa = Column(BigInteger)
    nper = Column(BigInteger)
    amax = Column(Float(53))
    matchobs = Column(BigInteger)
    newmatchobs = Column(BigInteger)
    matchobsrm = Column(BigInteger)
    ipdgofha = Column(Float(53))
    ipdgofhp = Column(Float(53))
    ipdfmp = Column(BigInteger)
    ipdfow = Column(BigInteger)
    ruwe = Column(Float(53))
    sdsk1 = Column(Float(53))
    sdsk2 = Column(Float(53))
    sdsk3 = Column(Float(53))
    sdsk4 = Column(Float(53))
    sdmk1 = Column(Float(53))
    sdmk2 = Column(Float(53))
    sdmk3 = Column(Float(53))
    sdmk4 = Column(Float(53))
    dup = Column(BigInteger)
    o_gmag = Column(BigInteger)
    fg = Column(Float(53))
    e_fg = Column(Float(53))
    rfg = Column(Float(53))
    gmag_vega = Column(Float(53))
    e_gmag = Column(Float(53))
    fgcorr = Column(Float(53))
    gmagcorr = Column(Float(53))
    e_gmagcorr = Column(Float(53))
    o_bpmag = Column(BigInteger)
    fbp = Column(Float(53))
    e_fbp = Column(Float(53))
    rfbp = Column(Float(53))
    bpmag = Column(Float(53))
    e_bpmag = Column(Float(53))
    o_rpmag = Column(BigInteger)
    frp = Column(Float(53))
    e_frp = Column(Float(53))
    rfrp = Column(Float(53))
    rpmag = Column(Float(53))
    e_rpmag = Column(Float(53))
    nbpcont = Column(BigInteger)
    nbpblend = Column(BigInteger)
    nrpcont = Column(BigInteger)
    nrpblend = Column(BigInteger)
    mode = Column(BigInteger)
    e_bp_rp = Column(Float(53))
    e_bp_rp_corr = Column(Float(53))
    gmag_abs = Column(Float(53))
    bp_rp = Column(Float(53))
    bp_g = Column(Float(53))
    g_rp = Column(Float(53))
    rv = Column(Float(53))
    e_rv = Column(Float(53))
    o_rv = Column(Float(53))
    teff = Column(Float(53))
    logg = Column(Float(53))
    fe_h = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    elon = Column(Float(53))
    elat = Column(Float(53))
    exfluxerr = Column(Float(53))
    brnflag = Column(BigInteger)
    meanav = Column(Float(53))
    minav = Column(Float(53))
    maxav = Column(Float(53))
    flagext = Column(BigInteger)
    teffh = Column(Float(53))
    e_teffh = Column(Float(53))
    loggh = Column(Float(53))
    e_loggh = Column(Float(53))
    massh = Column(Float(53))
    e_massh = Column(Float(53))
    chisqh = Column(Float(53))
    teffhe = Column(Float(53))
    e_teffhe = Column(Float(53))
    logghe = Column(Float(53))
    e_logghe = Column(Float(53))
    masshe = Column(Float(53))
    e_masshe = Column(Float(53))
    chisqhe = Column(Float(53))
    teffmix = Column(Float(53))
    e_teffmix = Column(Float(53))
    loggmix = Column(Float(53))
    e_loggmix = Column(Float(53))
    massmix = Column(Float(53))
    e_massmix = Column(Float(53))
    chisqmix = Column(Float(53))
    rgeo = Column(Float(53))
    b_rgeo1 = Column(Float(53))
    b_rgeo2 = Column(Float(53))
    rpgeo = Column(Float(53))
    b_rpgeo1 = Column(Float(53))
    b_rpgeo2 = Column(Float(53))
    fidel_v1 = Column(Float(53))
    sdss12 = Column(Text)
    sdssclean = Column(BigInteger)
    umag_sdss = Column(Float(53))
    e_umag_sdss = Column(Float(53))
    gmag_sdss = Column(Float(53))
    e_gmag_sdss = Column(Float(53))
    rmag_sdss = Column(Float(53))
    e_rmag_sdsss = Column(Float(53))
    imag_sdss = Column(Float(53))
    e_imag_sdss = Column(Float(53))
    zmag_sdss = Column(Float(53))
    e_zmag_sdss = Column(Float(53))
    sdsssep = Column(Float(53))
    sdssspec = Column(BigInteger)


class Xpfeh_gaia_dr3(Base):
    __tablename__ = 'xpfeh_gaia_dr3'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    in_training_sample = Column(Text, index=True)
    mh_xgboost = Column(Float(53), index=True)
    teff_xgboost = Column(Float(53), index=True)
    logg_xgboost = Column(Float(53), index=True)


class Gaia_edr3_allwise_best_neighbour(Base):
    __tablename__ = 'gaia_edr3_allwise_best_neighbour'

    source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), primary_key=True)
    original_ext_source_id = Column(ForeignKey('catalogdb.allwise.designation'), index=True)
    angular_distance = Column(Float, index=True)
    xm_flag = Column(SmallInteger, index=True)
    allwise_oid = Column(BigInteger, index=True)
    number_of_neighbours = Column(SmallInteger, index=True)
    number_of_mates = Column(SmallInteger, index=True)

    original_ext_source = relationship('Allwise')


class Gaia_edr3_allwise_neighbourhood(Base):
    __tablename__ = 'gaia_edr3_allwise_neighbourhood'

    source_id = Column('source_id', BigInteger, index=True, primary_key=True)
    original_ext_source_id = Column('original_ext_source_id', Text, index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    score = Column('score', Float(53), index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)
    allwise_oid = Column('allwise_oid', BigInteger, index=True)


class Gaia_edr3_panstarrs1_neighbourhood(Base):
    __tablename__ = 'gaia_edr3_panstarrs1_neighbourhood'

    source_id = Column('source_id', BigInteger, index=True, primary_key=True)
    clean_panstarrs1_oid = Column('clean_panstarrs1_oid', BigInteger, index=True)
    original_ext_source_id = Column('original_ext_source_id', BigInteger, index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    score = Column('score', Float(53), index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)


class Gaia_edr3_sdssdr13_neighbourhood(Base):
    __tablename__ = 'gaia_edr3_sdssdr13_neighbourhood'

    source_id = Column('source_id', BigInteger, index=True, primary_key=True)
    clean_sdssdr13_oid = Column('clean_sdssdr13_oid', BigInteger, index=True)
    original_ext_source_id = Column('original_ext_source_id', BigInteger, index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    score = Column('score', Float(53), index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)


class Gaia_edr3_skymapperdr2_best_neighbour(Base):
    __tablename__ = 'gaia_edr3_skymapperdr2_best_neighbour'

    source_id = Column(BigInteger, primary_key=True)
    original_ext_source_id = Column(BigInteger, index=True)
    angular_distance = Column(Float, index=True)
    number_of_neighbours = Column(SmallInteger, index=True)
    number_of_mates = Column(SmallInteger, index=True)
    xm_flag = Column(SmallInteger, index=True)


class Gaia_edr3_skymapperdr2_neighbourhood(Base):
    __tablename__ = 'gaia_edr3_skymapperdr2_neighbourhood'

    source_id = Column('source_id', BigInteger, index=True, primary_key=True)
    original_ext_source_id = Column('original_ext_source_id', BigInteger, index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    score = Column('score', Float(53), index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)


class Gaia_EDR3(Base):
    __tablename__ = 'gaia_edr3_source'

    solution_id = Column(BigInteger, index=True)
    designation = Column(Text)
    source_id = Column(BigInteger, primary_key=True)
    random_index = Column(BigInteger)
    ref_epoch = Column(Float(53))
    ra = Column(Float(53))
    ra_error = Column(Float)
    dec = Column(Float(53))
    dec_error = Column(Float)
    parallax = Column(Float(53), index=True)
    parallax_error = Column(Float)
    parallax_over_error = Column(Float)
    pm = Column(Float)
    pmra = Column(Float(53))
    pmra_error = Column(Float)
    pmdec = Column(Float(53))
    pmdec_error = Column(Float)
    ra_dec_corr = Column(Float)
    ra_parallax_corr = Column(Float)
    ra_pmra_corr = Column(Float)
    ra_pmdec_corr = Column(Float)
    dec_parallax_corr = Column(Float)
    dec_pmra_corr = Column(Float)
    dec_pmdec_corr = Column(Float)
    parallax_pmra_corr = Column(Float)
    parallax_pmdec_corr = Column(Float)
    pmra_pmdec_corr = Column(Float)
    astrometric_n_obs_al = Column(SmallInteger)
    astrometric_n_obs_ac = Column(SmallInteger)
    astrometric_n_good_obs_al = Column(SmallInteger)
    astrometric_n_bad_obs_al = Column(SmallInteger)
    astrometric_gof_al = Column(Float)
    astrometric_chi2_al = Column(Float, index=True)
    astrometric_excess_noise = Column(Float, index=True)
    astrometric_excess_noise_sig = Column(Float)
    astrometric_params_solved = Column(SmallInteger)
    astrometric_primary_flag = Column(Boolean)
    nu_eff_used_in_astrometry = Column(Float)
    pseudocolour = Column(Float)
    pseudocolour_error = Column(Float)
    ra_pseudocolour_corr = Column(Float)
    dec_pseudocolour_corr = Column(Float)
    parallax_pseudocolour_corr = Column(Float)
    pmra_pseudocolour_corr = Column(Float)
    pmdec_pseudocolour_corr = Column(Float)
    astrometric_matched_transits = Column(SmallInteger)
    visibility_periods_used = Column(SmallInteger)
    astrometric_sigma5d_max = Column(Float)
    matched_transits = Column(SmallInteger)
    new_matched_transits = Column(SmallInteger)
    matched_transits_removed = Column(SmallInteger)
    ipd_gof_harmonic_amplitude = Column(Float)
    ipd_gof_harmonic_phase = Column(Float)
    ipd_frac_multi_peak = Column(SmallInteger)
    ipd_frac_odd_win = Column(SmallInteger)
    ruwe = Column(Float)
    scan_direction_strength_k1 = Column(Float)
    scan_direction_strength_k2 = Column(Float)
    scan_direction_strength_k3 = Column(Float)
    scan_direction_strength_k4 = Column(Float)
    scan_direction_mean_k1 = Column(Float)
    scan_direction_mean_k2 = Column(Float)
    scan_direction_mean_k3 = Column(Float)
    scan_direction_mean_k4 = Column(Float)
    duplicated_source = Column(Boolean)
    phot_g_n_obs = Column(SmallInteger)
    phot_g_mean_flux = Column(Float(53), index=True)
    phot_g_mean_flux_error = Column(Float)
    phot_g_mean_flux_over_error = Column(Float, index=True)
    phot_g_mean_mag = Column(Float, index=True)
    phot_bp_n_obs = Column(SmallInteger)
    phot_bp_mean_flux = Column(Float(53), index=True)
    phot_bp_mean_flux_error = Column(Float)
    phot_bp_mean_flux_over_error = Column(Float, index=True)
    phot_bp_mean_mag = Column(Float, index=True)
    phot_rp_n_obs = Column(SmallInteger)
    phot_rp_mean_flux = Column(Float(53), index=True)
    phot_rp_mean_flux_error = Column(Float)
    phot_rp_mean_flux_over_error = Column(Float, index=True)
    phot_rp_mean_mag = Column(Float, index=True)
    phot_bp_n_contaminated_transits = Column(SmallInteger)
    phot_bp_n_blended_transits = Column(SmallInteger)
    phot_rp_n_contaminated_transits = Column(SmallInteger)
    phot_rp_n_blended_transits = Column(SmallInteger)
    phot_proc_mode = Column(SmallInteger)
    phot_bp_rp_excess_factor = Column(Float)
    bp_rp = Column(Float, index=True)
    bp_g = Column(Float, index=True)
    g_rp = Column(Float, index=True)
    dr2_radial_velocity = Column(Float)
    dr2_radial_velocity_error = Column(Float)
    dr2_rv_nb_transits = Column(SmallInteger)
    dr2_rv_template_teff = Column(Float)
    dr2_rv_template_logg = Column(Float)
    dr2_rv_template_fe_h = Column(Float)
    l = Column(Float(53))
    b = Column(Float(53))
    ecl_lon = Column(Float(53))
    ecl_lat = Column(Float(53))


class Gaia_edr3_tmass_psc_xsc_neighbourhood(Base):
    __tablename__ = 'gaia_edr3_tmass_psc_xsc_neighbourhood'

    source_id = Column('source_id', BigInteger, index=True, primary_key=True)
    original_ext_source_id = Column('original_ext_source_id', Text, index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    score = Column('score', Float(53), index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)
    clean_tmass_psc_xsc_oid = Column('clean_tmass_psc_xsc_oid', BigInteger, index=True)


class Gaia_edr3_tycho2tdsc_merge_neighbourhood(Base):
    __tablename__ = 'gaia_edr3_tycho2tdsc_merge_neighbourhood'

    source_id = Column('source_id', BigInteger, index=True, primary_key=True)
    original_ext_source_id = Column('original_ext_source_id', Text, index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    score = Column('score', Float(53), index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)
    tycho2tdsc_merge_oid = Column('tycho2tdsc_merge_oid', BigInteger, index=True)


class GaiaQSO(Base):
    __tablename__ = 'gaia_qso'

    name = Column(Text)
    raj2000 = Column(Float(53))
    dej2000 = Column(Float(53))
    e_raj2000 = Column(Float(53))
    e_dej2000 = Column(Float(53))
    z = Column(Float(53))
    umag = Column(Float, index=True)
    gmag = Column(Float, index=True)
    rmag = Column(Float, index=True)
    imag = Column(Float, index=True)
    zmag = Column(Float, index=True)
    ref = Column(Text)
    w1_w2 = Column(Float, index=True)
    w2_w3 = Column(Float, index=True)
    w1mag = Column(Float, index=True)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".gaia_qso_pk_seq'::regclass)"))


class Gaia_Stellar_Parameters(Base):
    __tablename__ = 'gaia_stellar_parameters'

    chi2_opt = Column(Float)
    dec = Column(Float(53))
    feh_confidence = Column(Float)
    gdr3_source_id = Column(BigInteger, primary_key=True)
    ln_prior = Column(Float)
    logg_confidence = Column(Float)
    quality_flags = Column(SmallInteger)
    ra = Column(Float(53))
    teff_confidence = Column(Float)
    stellar_params_est_teff = Column(Float, index=True)
    stellar_params_est_fe_h = Column(Float)
    stellar_params_est_logg = Column(Float)
    stellar_params_est_e = Column(Float)
    stellar_params_est_parallax = Column(Float)
    stellar_params_err_teff = Column(Float)
    stellar_params_err_fe_h = Column(Float)
    stellar_params_err_logg = Column(Float)
    stellar_params_err_e = Column(Float)
    stellar_params_err_parallax = Column(Float)


class Gaia_DR2_SDSS_DR9_Best_Neighbour(Base):
    __tablename__ = 'gaiadr2_sdssdr9_best_neighbour'

    sdssdr9_oid = Column(BigInteger, index=True)
    number_of_neighbours = Column(Integer)
    number_of_mates = Column(Integer)
    best_neighbour_multiplicity = Column(Integer)
    source_id = Column(BigInteger, primary_key=True)
    original_ext_source_id = Column(Text)
    angular_distance = Column(Float(53))
    gaia_astrometric_params = Column(Integer)


class GalacticMillisecondPulsars(Base):
    __tablename__ = 'galactic_millisecond_pulsars'

    name = Column(Text)
    rastr = Column(Text)
    decstr = Column(Text)
    radeg = Column(Float(53))
    decdeg = Column(Float(53))
    ngaia = Column(Float)
    gaia_name = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_gmag = Column(Float)
    gaia_dist = Column(Float)
    gaia_source_id = Column(BigInteger, primary_key=True)


class Galex_GR7_Gaia_DR3(Base):
    __tablename__ = 'galex_gr7_gaia_dr3'

    gaia_edr3_source_id = Column(BigInteger, index=True)
    galex_objid = Column(BigInteger, index=True)
    fuv_mag = Column(Float(53), index=True)
    fuv_magerr = Column(Float(53))
    nuv_mag = Column(Float(53), index=True)
    nuv_magerr = Column(Float(53), index=True)
    galex_separation = Column(Float(53), index=True)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".galex_gr7_gaia_dr3_pk_seq'::regclass)"))


class Gedr3spur_main(Base):
    __tablename__ = 'gedr3spur_main'

    source_id = Column(BigInteger, primary_key=True)
    fidelity_v2 = Column(Float, index=True)
    theta_arcsec_worst_source = Column(Float)
    norm_dg = Column(Float)
    dist_nearest_neighbor_at_least_m2_brighter = Column(Float)
    dist_nearest_neighbor_at_least_0_brighter = Column(Float)
    dist_nearest_neighbor_at_least_2_brighter = Column(Float)
    dist_nearest_neighbor_at_least_4_brighter = Column(Float)
    dist_nearest_neighbor_at_least_6_brighter = Column(Float)
    dist_nearest_neighbor_at_least_10_brighter = Column(Float)
    fidelity_v1 = Column(Float, index=True)


class GUVCat(Base):
    __tablename__ = 'guvcat'

    objid = Column(BigInteger, primary_key=True)
    photoextractid = Column(BigInteger)
    mpstype = Column(Text)
    avaspra = Column(Float(53))
    avaspdec = Column(Float(53))
    fexptime = Column(Float)
    nexptime = Column(Float)
    ra = Column(Float(53))
    dec = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    tilenum = Column(Integer)
    img = Column(Integer)
    subvisit = Column(Integer)
    fov_radius = Column(Float)
    type = Column(Integer)
    band = Column(Integer)
    e_bv = Column(Float)
    istherespectrum = Column(SmallInteger)
    chkobj_type = Column(SmallInteger)
    fuv_mag = Column(Float, index=True)
    fuv_magerr = Column(Float, index=True)
    nuv_mag = Column(Float, index=True)
    nuv_magerr = Column(Float, index=True)
    fuv_mag_auto = Column(Float)
    fuv_magerr_auto = Column(Float)
    nuv_mag_auto = Column(Float)
    nuv_magerr_auto = Column(Float)
    fuv_mag_aper_4 = Column(Float)
    fuv_magerr_aper_4 = Column(Float)
    nuv_mag_aper_4 = Column(Float)
    nuv_magerr_aper_4 = Column(Float)
    fuv_mag_aper_6 = Column(Float)
    fuv_magerr_aper_6 = Column(Float)
    nuv_mag_aper_6 = Column(Float)
    nuv_magerr_aper_6 = Column(Float)
    fuv_artifact = Column(SmallInteger)
    nuv_artifact = Column(SmallInteger)
    fuv_flags = Column(SmallInteger)
    nuv_flags = Column(SmallInteger)
    fuv_flux = Column(Float)
    fuv_fluxerr = Column(Float)
    nuv_flux = Column(Float)
    nuv_fluxerr = Column(Float)
    fuv_x_image = Column(Float)
    fuv_y_image = Column(Float)
    nuv_x_image = Column(Float)
    nuv_y_image = Column(Float)
    fuv_fwhm_image = Column(Float)
    nuv_fwhm_image = Column(Float)
    fuv_fwhm_world = Column(Float)
    nuv_fwhm_world = Column(Float)
    nuv_class_star = Column(Float)
    fuv_class_star = Column(Float)
    nuv_ellipticity = Column(Float)
    fuv_ellipticity = Column(Float)
    nuv_theta_j2000 = Column(Float)
    nuv_errtheta_j2000 = Column(Float)
    fuv_theta_j2000 = Column(Float)
    fuv_errtheta_j2000 = Column(Float)
    fuv_ncat_fwhm_image = Column(Float)
    fuv_ncat_flux_radius_3 = Column(Float)
    nuv_kron_radius = Column(Float)
    nuv_a_world = Column(Float)
    nuv_b_world = Column(Float)
    fuv_kron_radius = Column(Float)
    fuv_a_world = Column(Float)
    fuv_b_world = Column(Float)
    nuv_weight = Column(Float)
    fuv_weight = Column(Float)
    prob = Column(Float)
    sep = Column(Float)
    nuv_poserr = Column(Float)
    fuv_poserr = Column(Float)
    ib_poserr = Column(Float)
    nuv_pperr = Column(Float)
    fuv_pperr = Column(Float)
    corv = Column(Text)
    grank = Column(SmallInteger)
    ngrank = Column(SmallInteger)
    primgid = Column(BigInteger)
    groupgid = Column(Text)
    grankdist = Column(SmallInteger)
    ngrankdist = Column(BigInteger)
    primgiddist = Column(BigInteger)
    groupgiddist = Column(Text)
    groupgidtot = Column(Text)
    difffuv = Column(Float)
    diffnuv = Column(Float)
    difffuvdist = Column(Float)
    diffnuvdist = Column(Float)
    sepas = Column(Float)
    sepasdist = Column(Float)
    inlargeobj = Column(Text)
    largeobjsize = Column(Float)


class HECATE_1_1(Base):
    __tablename__ = 'hecate_1_1'

    pgc = Column(Integer, primary_key=True, index=True)
    objname = Column(Text, index=True)
    id_ned = Column(Text, index=True)
    id_nedd = Column(Text, index=True)
    id_iras = Column(Text, index=True)
    id_2mass = Column(Text, index=True)
    sdss_photid = Column(Text, index=True)
    sdss_specid = Column(Text, index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    f_astrom = Column(SmallInteger, index=True)
    r1 = Column(Float, index=True)
    r2 = Column(Float, index=True)
    pa = Column(Float, index=True)
    rsource = Column(Text, index=True)
    rflag = Column(SmallInteger, index=True)
    t = Column(Float)
    e_t = Column(Float)
    incl = Column(Float)
    v = Column(Float)
    e_v = Column(Float)
    v_vir = Column(Float)
    e_v_vir = Column(Float)
    ndist = Column(SmallInteger)
    edist = Column(SmallInteger)
    d = Column(Float(53))
    e_d = Column(Float)
    d_lo68 = Column(Float(53))
    d_hi68 = Column(Float(53))
    d_lo95 = Column(Float(53))
    d_hi95 = Column(Float(53))
    dmethod = Column(Text)
    ut = Column(Float)
    bt = Column(Float)
    vt = Column(Float)
    it = Column(Float)
    e_ut = Column(Float)
    e_bt = Column(Float)
    e_vt = Column(Float)
    e_it = Column(Float)
    ag = Column(Float)
    ai = Column(Float)
    s12 = Column(Float(53))
    s25 = Column(Float(53))
    s60 = Column(Float)
    s100 = Column(Float)
    q12 = Column(SmallInteger)
    q25 = Column(SmallInteger)
    q60 = Column(SmallInteger)
    q100 = Column(SmallInteger)
    wf1 = Column(Float(53))
    wf2 = Column(Float(53))
    wf3 = Column(Float(53))
    wf4 = Column(Float(53))
    e_wf1 = Column(Float(53))
    e_wf2 = Column(Float(53))
    e_wf3 = Column(Float(53))
    e_wf4 = Column(Float(53))
    wfpoint = Column(SmallInteger)
    wftreat = Column(SmallInteger)
    j = Column(Float)
    h = Column(Float)
    k = Column(Float)
    e_j = Column(Float)
    e_h = Column(Float)
    e_k = Column(Float)
    flag_2mass = Column(SmallInteger)
    u = Column(Float)
    g = Column(Float)
    r = Column(Float)
    i = Column(Float)
    z = Column(Float)
    e_u = Column(Float)
    e_g = Column(Float)
    e_r = Column(Float)
    e_i = Column(Float)
    e_z = Column(Float)
    logl_tir = Column(Float)
    logl_fir = Column(Float)
    logl_60u = Column(Float)
    logl_12u = Column(Float)
    logl_22u = Column(Float)
    logl_k = Column(Float)
    ml_ratio = Column(Float)
    logsfr_tir = Column(Float)
    logsfr_fir = Column(Float)
    logsfr_60u = Column(Float)
    logsfr_12u = Column(Float)
    logsfr_22u = Column(Float)
    logsfr_hec = Column(Float)
    flag_sfr_hec = Column(Text)
    logm_hec = Column(Float)
    logsfr_gsw = Column(Float)
    logm_gsw = Column(Float)
    min_snr = Column(Float)
    metal = Column(Float)
    flag_metal = Column(SmallInteger)
    class_sp = Column(SmallInteger)
    agn_s17 = Column(Text)
    agn_hec = Column(Text)


class KeplerInput_DR10(Base):
    __tablename__ = 'kepler_input_10'

    kic_ra = Column(Float(53))
    kic_dec = Column(Float(53))
    kic_pmra = Column(Float(53))
    kic_pmdec = Column(Float(53))
    kic_umag = Column(Float(53), index=True)
    kic_gmag = Column(Float(53), index=True)
    kic_rmag = Column(Float(53), index=True)
    kic_imag = Column(Float(53), index=True)
    kic_zmag = Column(Float(53), index=True)
    kic_gredmag = Column(Float(53))
    kic_d51mag = Column(Float(53))
    kic_jmag = Column(Float(53), index=True)
    kic_hmag = Column(Float(53), index=True)
    kic_kmag = Column(Float(53), index=True)
    kic_kepmag = Column(Float(53), index=True)
    kic_kepler_id = Column(BigInteger, primary_key=True)
    kic_tmid = Column(BigInteger)
    kic_scpid = Column(BigInteger)
    kic_altid = Column(BigInteger)
    kic_altsource = Column(BigInteger)
    kic_galaxy = Column(Integer)
    kic_blend = Column(Integer)
    kic_variable = Column(Integer)
    kic_teff = Column(Integer)
    kic_logg = Column(Float)
    kic_feh = Column(Float)
    kic_ebminusv = Column(Float)
    kic_av = Column(Float)
    kic_radius = Column(Float)
    kic_cq = Column(Text)
    kic_pq = Column(Text)
    kic_aq = Column(Integer)
    kic_catkey = Column(BigInteger)
    kic_scpkey = Column(BigInteger)
    kic_parallax = Column(Float)
    kic_glon = Column(Float(53))
    kic_glat = Column(Float(53))
    kic_pmtotal = Column(Float)
    kic_grcolor = Column(Float(53))
    kic_jkcolor = Column(Float(53))
    kic_gkcolor = Column(Float(53))
    kic_degree_ra = Column(Float(53))
    kic_fov_flag = Column(Integer)
    kic_tm_designation = Column(Text)
    kic_ra_deg = Column(Float(53))


class LowMassXRayBinaries(Base):
    __tablename__ = 'lmxb'

    name = Column(Text)
    rastr = Column(Text)
    decstr = Column(Text)
    radeg = Column(Float(53))
    decdeg = Column(Float(53))
    ngaia = Column(Float)
    gaia_name = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_gmag = Column(Float)
    gaia_dist = Column(Float)
    gaia_source_id = Column(BigInteger, primary_key=True)


class MILLIQUAS_7_7(Base):
    __tablename__ = 'milliquas_7_7'

    ra = Column(Float(53))
    dec = Column(Float(53))
    name = Column(Text, index=True)
    type = Column(Text, index=True)
    rmag = Column(Float, index=True)
    bmag = Column(Float, index=True)
    comment = Column(Text)
    r = Column(Text, index=True)
    b = Column(Text, index=True)
    z = Column(Float, index=True)
    cite = Column(Text)
    zcite = Column(Text)
    rxpct = Column(SmallInteger, index=True)
    qpct = Column(SmallInteger, index=True)
    xname = Column(Text, index=True)
    rname = Column(Text, index=True)
    lobe1 = Column(Text)
    lobe2 = Column(Text)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".milliquas_7_7_pk_seq'::regclass)"))


class MIPSGAL_Extra(Base):
    __tablename__ = 'mipsgal_extra'

    mipsgal = Column(Text, primary_key=True)
    raj2000 = Column(Float(53))
    dej2000 = Column(Float(53))
    s24 = Column(Float)
    m24 = Column(Float, index=True)
    jmag = Column(Float, index=True)
    hmag = Column(Float, index=True)
    kmag = Column(Float, index=True)
    m3_6 = Column(Float, index=True)
    m4_5 = Column(Float, index=True)
    m5_8 = Column(Float, index=True)
    m8_0 = Column(Float, index=True)
    dnn = Column(Float)
    fwhm = Column(Float)
    source_id = Column(BigInteger, index=True)
    parallax = Column(Float, index=True)
    parallax_error = Column(Float, index=True)
    phot_g_mean_flux = Column(Float)
    l = Column(Float(53), index=True)
    b = Column(Float(53), index=True)


class Panstarrs1(Base):
    __tablename__ = 'panstarrs1'
    __table_args__ = {'schema': 'catalogdb', 'comment': 'panstarrs1_dr2'}

    ra = Column(Float(53))
    dec = Column(Float(53))
    dra = Column(Float)
    ddec = Column(Float)
    tmean = Column(Float)
    trange = Column(Float)
    chisqpos = Column(Float)
    stargal = Column(Float, index=True)
    nmeas = Column(Integer)
    nwarp_ok = Column(Integer)
    flags = Column(Integer, index=True)
    objid = Column(Integer)
    catid = Column(Integer)
    extid_hi = Column(Integer)
    extid_lo = Column(Integer)
    g_chp_psf = Column(Float)
    g_chp_psf_err = Column(Float)
    g_chp_psf_nphot = Column(Integer)
    g_chp_aper = Column(Float)
    g_chp_aper_err = Column(Float)
    g_chp_aper_nphot = Column(Integer)
    g_chp_kron = Column(Float)
    g_chp_kron_err = Column(Float)
    g_chp_kron_nphot = Column(Integer)
    g_stk_psf_flux = Column(Float, index=True)
    g_stk_psf_fluxerr = Column(Float)
    g_stk_psf_nphot = Column(Integer)
    g_stk_aper_flux = Column(Float)
    g_stk_aper_fluxerr = Column(Float)
    g_stk_aper_nphot = Column(Integer)
    g_stk_kron_flux = Column(Float)
    g_stk_kron_fluxerr = Column(Float)
    g_stk_kron_nphot = Column(Integer)
    g_wrp_psf_flux = Column(Float)
    g_wrp_psf_fluxerr = Column(Float)
    g_wrp_psf_nphot = Column(Integer)
    g_wrp_aper_flux = Column(Float)
    g_wrp_aper_fluxerr = Column(Float)
    g_wrp_aper_nphot = Column(Integer)
    g_wrp_kron_flux = Column(Float)
    g_wrp_kron_fluxerr = Column(Float)
    g_wrp_kron_nphot = Column(Integer)
    g_flags = Column(Integer, index=True)
    g_ncode = Column(Integer)
    g_nwarp = Column(Integer)
    g_nwarp_good = Column(Integer)
    g_nstack = Column(Integer)
    g_nstack_det = Column(Integer)
    g_psfqf = Column(Float)
    g_psfqfperf = Column(Float)
    r_chp_psf = Column(Float, index=True)
    r_chp_psf_err = Column(Float)
    r_chp_psf_nphot = Column(Integer)
    r_chp_aper = Column(Float)
    r_chp_aper_err = Column(Float)
    r_chp_aper_nphot = Column(Integer)
    r_chp_kron = Column(Float)
    r_chp_kron_err = Column(Float)
    r_chp_kron_nphot = Column(Integer)
    r_stk_psf_flux = Column(Float, index=True)
    r_stk_psf_fluxerr = Column(Float)
    r_stk_psf_nphot = Column(Integer)
    r_stk_aper_flux = Column(Float)
    r_stk_aper_fluxerr = Column(Float)
    r_stk_aper_nphot = Column(Integer)
    r_stk_kron_flux = Column(Float)
    r_stk_kron_fluxerr = Column(Float)
    r_stk_kron_nphot = Column(Integer)
    r_wrp_psf_flux = Column(Float)
    r_wrp_psf_fluxerr = Column(Float)
    r_wrp_psf_nphot = Column(Integer)
    r_wrp_aper_flux = Column(Float)
    r_wrp_aper_fluxerr = Column(Float)
    r_wrp_aper_nphot = Column(Integer)
    r_wrp_kron_flux = Column(Float)
    r_wrp_kron_fluxerr = Column(Float)
    r_wrp_kron_nphot = Column(Integer)
    r_flags = Column(Integer, index=True)
    r_ncode = Column(Integer)
    r_nwarp = Column(Integer)
    r_nwarp_good = Column(Integer)
    r_nstack = Column(Integer)
    r_nstack_det = Column(Integer)
    r_psfqf = Column(Float)
    r_psfqfperf = Column(Float)
    i_chp_psf = Column(Float)
    i_chp_psf_err = Column(Float)
    i_chp_psf_nphot = Column(Integer)
    i_chp_aper = Column(Float)
    i_chp_aper_err = Column(Float)
    i_chp_aper_nphot = Column(Integer)
    i_chp_kron = Column(Float)
    i_chp_kron_err = Column(Float)
    i_chp_kron_nphot = Column(Integer)
    i_stk_psf_flux = Column(Float, index=True)
    i_stk_psf_fluxerr = Column(Float)
    i_stk_psf_nphot = Column(Integer)
    i_stk_aper_flux = Column(Float)
    i_stk_aper_fluxerr = Column(Float)
    i_stk_aper_nphot = Column(Integer)
    i_stk_kron_flux = Column(Float)
    i_stk_kron_fluxerr = Column(Float)
    i_stk_kron_nphot = Column(Integer)
    i_wrp_psf_flux = Column(Float)
    i_wrp_psf_fluxerr = Column(Float)
    i_wrp_psf_nphot = Column(Integer)
    i_wrp_aper_flux = Column(Float)
    i_wrp_aper_fluxerr = Column(Float)
    i_wrp_aper_nphot = Column(Integer)
    i_wrp_kron_flux = Column(Float)
    i_wrp_kron_fluxerr = Column(Float)
    i_wrp_kron_nphot = Column(Integer)
    i_flags = Column(Integer, index=True)
    i_ncode = Column(Integer)
    i_nwarp = Column(Integer)
    i_nwarp_good = Column(Integer)
    i_nstack = Column(Integer)
    i_nstack_det = Column(Integer)
    i_psfqf = Column(Float)
    i_psfqfperf = Column(Float)
    z_chp_psf = Column(Float)
    z_chp_psf_err = Column(Float)
    z_chp_psf_nphot = Column(Integer)
    z_chp_aper = Column(Float)
    z_chp_aper_err = Column(Float)
    z_chp_aper_nphot = Column(Integer)
    z_chp_kron = Column(Float)
    z_chp_kron_err = Column(Float)
    z_chp_kron_nphot = Column(Integer)
    z_stk_psf_flux = Column(Float, index=True)
    z_stk_psf_fluxerr = Column(Float)
    z_stk_psf_nphot = Column(Integer)
    z_stk_aper_flux = Column(Float)
    z_stk_aper_fluxerr = Column(Float)
    z_stk_aper_nphot = Column(Integer)
    z_stk_kron_flux = Column(Float)
    z_stk_kron_fluxerr = Column(Float)
    z_stk_kron_nphot = Column(Integer)
    z_wrp_psf_flux = Column(Float)
    z_wrp_psf_fluxerr = Column(Float)
    z_wrp_psf_nphot = Column(Integer)
    z_wrp_aper_flux = Column(Float)
    z_wrp_aper_fluxerr = Column(Float)
    z_wrp_aper_nphot = Column(Integer)
    z_wrp_kron_flux = Column(Float)
    z_wrp_kron_fluxerr = Column(Float)
    z_wrp_kron_nphot = Column(Integer)
    z_flags = Column(Integer, index=True)
    z_ncode = Column(Integer)
    z_nwarp = Column(Integer)
    z_nwarp_good = Column(Integer)
    z_nstack = Column(Integer)
    z_nstack_det = Column(Integer)
    z_psfqf = Column(Float)
    z_psfqfperf = Column(Float)
    y_chp_psf = Column(Float)
    y_chp_psf_err = Column(Float)
    y_chp_psf_nphot = Column(Integer)
    y_chp_aper = Column(Float)
    y_chp_aper_err = Column(Float)
    y_chp_aper_nphot = Column(Integer)
    y_chp_kron = Column(Float)
    y_chp_kron_err = Column(Float)
    y_chp_kron_nphot = Column(Integer)
    y_stk_psf_flux = Column(Float)
    y_stk_psf_fluxerr = Column(Float)
    y_stk_psf_nphot = Column(Integer)
    y_stk_aper_flux = Column(Float)
    y_stk_aper_fluxerr = Column(Float)
    y_stk_aper_nphot = Column(Integer)
    y_stk_kron_flux = Column(Float)
    y_stk_kron_fluxerr = Column(Float)
    y_stk_kron_nphot = Column(Integer)
    y_wrp_psf_flux = Column(Float)
    y_wrp_psf_fluxerr = Column(Float)
    y_wrp_psf_nphot = Column(Integer)
    y_wrp_aper_flux = Column(Float)
    y_wrp_aper_fluxerr = Column(Float)
    y_wrp_aper_nphot = Column(Integer)
    y_wrp_kron_flux = Column(Float)
    y_wrp_kron_fluxerr = Column(Float)
    y_wrp_kron_nphot = Column(Integer)
    y_flags = Column(Integer)
    y_ncode = Column(Integer)
    y_nwarp = Column(Integer)
    y_nwarp_good = Column(Integer)
    y_nstack = Column(Integer)
    y_nstack_det = Column(Integer)
    y_psfqf = Column(Float)
    y_psfqfperf = Column(Float)
    catid_objid = Column(BigInteger, primary_key=True)
    extid_hi_lo = Column(BigInteger, index=True)


class PS1_g18(Base):
    __tablename__ = 'ps1_g18'
    __table_args__ = {'schema': 'catalogdb', 'comment': 'ps1_dr1_g18'}

    objid = Column(BigInteger, primary_key=True)
    ndetections = Column(Integer)
    ramean = Column(Float(53))
    decmean = Column(Float(53))
    qualityflag = Column(Integer)
    gmeanpsfmag = Column(Float(53), index=True)
    gmeanpsfmagerr = Column(Float(53))
    gflags = Column(BigInteger)
    rmeanpsfmag = Column(Float(53), index=True)
    rmeanpsfmagerr = Column(Float(53))
    rflags = Column(BigInteger)
    imeanpsfmag = Column(Float(53), index=True)
    imeanpsfmagerr = Column(Float(53))
    iflags = Column(BigInteger)


class RAVE_DR6_Gauguin_Madera(Base):
    __tablename__ = 'rave_dr6_gauguin_madera'

    rave_obs_id = Column(Text, primary_key=True, index=True)
    fe_h_gauguin = Column(Float, index=True)
    fe_h_error_gauguin = Column(Float, index=True)
    fe_h_chisq_gauguin = Column(Float, index=True)
    fe_h_nl_gauguin = Column(SmallInteger, index=True)
    al_h_gauguin = Column(Float, index=True)
    al_h_error_gauguin = Column(Float, index=True)
    al_h_chisq_gauguin = Column(Float, index=True)
    al_h_nl_gauguin = Column(SmallInteger, index=True)
    ni_h_gauguin = Column(Float, index=True)
    ni_h_error_gauguin = Column(Float, index=True)
    ni_h_chisq_gauguin = Column(Float, index=True)
    ni_h_nl_gauguin = Column(SmallInteger, index=True)
    alpha_fe_gauguin = Column(Float, index=True)
    alpha_fe_error_gauguin = Column(Float, index=True)
    alpha_fe_chisq_gauguin = Column(Float, index=True)
    n_elements_gauguin = Column(SmallInteger, index=True)


class Sagitta_EDR3(Base):
    __tablename__ = 'sagitta_edr3'

    source_id = Column(BigInteger, primary_key=True)
    l = Column(Float(53))
    b = Column(Float(53))
    age = Column(Float, index=True)
    age_std = Column(Float(53), index=True)
    pms = Column(Float, index=True)
    pms_std = Column(Float(53), index=True)
    av = Column(Float, index=True)
    av_std = Column(Float(53), index=True)


class SDSS_APOGEE_AllStarMerge_r13(Base):
    __tablename__ = 'sdss_apogeeallstarmerge_r13'

    apogee_id = Column(Text, primary_key=True)
    nvisits = Column(SmallInteger)
    nentries = Column(Integer)
    ra = Column(Float(53))
    dec = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    pmra = Column(Float(53))
    pmdec = Column(Float(53))
    pm_src = Column(Text)
    j = Column(Float)
    j_err = Column(Float)
    h = Column(Float)
    h_err = Column(Float)
    k = Column(Float)
    k_err = Column(Float)
    ak = Column(Float)
    vhelio_avg = Column(Float)
    vhelio_err = Column(Float)
    vscatter = Column(Float)
    sig_rvvar = Column(Float)
    baseline = Column(Float)
    mean_fiber = Column(Float)
    sig_fiber = Column(Float)
    apstar_ids = Column(Text)
    nvisit_apstar = Column(ARRAY(SmallInteger()))
    weights = Column(ARRAY(Float()))
    visits = Column(Text)
    fields = Column(Text)
    surveys = Column(Text)
    telescopes = Column(Text)
    location_id = Column(ARRAY(SmallInteger()))
    commiss = Column(ARRAY(SmallInteger()))
    targflags = Column(Text)
    starflags = Column(Text)
    aspcapflags = Column(Text)
    teff = Column(Float)
    teff_err = Column(Float)
    logg = Column(Float)
    logg_err = Column(Float)
    feh = Column(Float)
    feh_err = Column(Float)
    param = Column(ARRAY(Float()))
    param_cov = Column(ARRAY(Float()))
    fparam = Column(ARRAY(Float()))
    fparam_cov = Column(ARRAY(Float()))
    param_symbol = Column(ARRAY(Text()))
    x_h = Column(ARRAY(Float()))
    x_h_err = Column(ARRAY(Float()))
    felem = Column(ARRAY(Float()))
    felem_err = Column(ARRAY(Float()))
    elem_symbol = Column(ARRAY(Text()))
    felemtoh = Column(ARRAY(SmallInteger()))
    startype = Column(Text)
    vjitter = Column(Float)
    dist = Column(Float)
    dist_err = Column(Float)
    dist_src = Column(Text)
    dist_srclist = Column(Text)
    mstar = Column(Float)
    mstar_err = Column(Float)
    rstar = Column(Float)
    rstar_err = Column(Float)
    mstar_src = Column(Text)
    jd = Column(ARRAY(Float(precision=53)))
    rv = Column(ARRAY(Float(precision=53)))
    rv_err = Column(ARRAY(Float(precision=53)))
    rv_src = Column(ARRAY(Text()))
    snr = Column(ARRAY(Float()))
    fiberid = Column(ARRAY(SmallInteger()))
    visit_pk = Column(ARRAY(Integer()))


class SDSS_DR13_PhotoObj(Base):
    __tablename__ = 'sdss_dr13_photoobj'

    objid = Column(BigInteger, primary_key=True)
    run = Column(SmallInteger)
    rerun = Column(SmallInteger)
    camcol = Column(SmallInteger)
    field = Column(SmallInteger)
    obj = Column(SmallInteger)
    type = Column(SmallInteger)
    flags = Column(BigInteger)
    rowc = Column(Float)
    rowcerr = Column(Float)
    colc = Column(Float)
    colcerr = Column(Float)
    rowv = Column(Float)
    rowverr = Column(Float)
    colv = Column(Float)
    colverr = Column(Float)
    sky_u = Column(Float)
    sky_g = Column(Float)
    sky_r = Column(Float)
    sky_i = Column(Float)
    sky_z = Column(Float)
    skyivar_u = Column(Float)
    skyivar_g = Column(Float)
    skyivar_r = Column(Float)
    skyivar_i = Column(Float)
    skyivar_z = Column(Float)
    psfmag_u = Column(Float, index=True)
    psfmag_g = Column(Float, index=True)
    psfmag_r = Column(Float, index=True)
    psfmag_i = Column(Float, index=True)
    psfmag_z = Column(Float, index=True)
    psfmagerr_u = Column(Float)
    psfmagerr_g = Column(Float)
    psfmagerr_r = Column(Float)
    psfmagerr_i = Column(Float)
    psfmagerr_z = Column(Float)
    fibermag_u = Column(Float)
    fibermag_g = Column(Float)
    fibermag_r = Column(Float)
    fibermag_i = Column(Float)
    fibermag_z = Column(Float)
    fibermagerr_u = Column(Float)
    fibermagerr_g = Column(Float)
    fibermagerr_r = Column(Float)
    fibermagerr_i = Column(Float)
    fibermagerr_z = Column(Float)
    fiber2mag_u = Column(Float)
    fiber2mag_g = Column(Float)
    fiber2mag_r = Column(Float)
    fiber2mag_i = Column(Float)
    fiber2mag_z = Column(Float)
    fiber2magerr_u = Column(Float)
    fiber2magerr_g = Column(Float)
    fiber2magerr_r = Column(Float)
    fiber2magerr_i = Column(Float)
    fiber2magerr_z = Column(Float)
    petromag_u = Column(Float)
    petromag_g = Column(Float)
    petromag_r = Column(Float)
    petromag_i = Column(Float)
    petromag_z = Column(Float)
    petromagerr_u = Column(Float)
    petromagerr_g = Column(Float)
    petromagerr_r = Column(Float)
    petromagerr_i = Column(Float)
    petromagerr_z = Column(Float)
    psfflux_u = Column(Float)
    psfflux_g = Column(Float)
    psfflux_r = Column(Float)
    psfflux_i = Column(Float)
    psfflux_z = Column(Float)
    psffluxivar_u = Column(Float)
    psffluxivar_g = Column(Float)
    psffluxivar_r = Column(Float)
    psffluxivar_i = Column(Float)
    psffluxivar_z = Column(Float)
    fiberflux_u = Column(Float)
    fiberflux_g = Column(Float)
    fiberflux_r = Column(Float)
    fiberflux_i = Column(Float)
    fiberflux_z = Column(Float)
    fiberfluxivar_u = Column(Float)
    fiberfluxivar_g = Column(Float)
    fiberfluxivar_r = Column(Float)
    fiberfluxivar_i = Column(Float)
    fiberfluxivar_z = Column(Float)
    fiber2flux_u = Column(Float)
    fiber2flux_g = Column(Float)
    fiber2flux_r = Column(Float)
    fiber2flux_i = Column(Float)
    fiber2flux_z = Column(Float)
    fiber2fluxivar_u = Column(Float)
    fiber2fluxivar_g = Column(Float)
    fiber2fluxivar_r = Column(Float)
    fiber2fluxivar_i = Column(Float)
    fiber2fluxivar_z = Column(Float)
    petroflux_u = Column(Float)
    petroflux_g = Column(Float)
    petroflux_r = Column(Float)
    petroflux_i = Column(Float)
    petroflux_z = Column(Float)
    petrofluxivar_u = Column(Float)
    petrofluxivar_g = Column(Float)
    petrofluxivar_r = Column(Float)
    petrofluxivar_i = Column(Float)
    petrofluxivar_z = Column(Float)
    petrorad_u = Column(Float)
    petrorad_g = Column(Float)
    petrorad_r = Column(Float)
    petrorad_i = Column(Float)
    petrorad_z = Column(Float)
    petroraderr_u = Column(Float)
    petroraderr_g = Column(Float)
    petroraderr_r = Column(Float)
    petroraderr_i = Column(Float)
    petroraderr_z = Column(Float)
    petror50_u = Column(Float)
    petror50_g = Column(Float)
    petror50_r = Column(Float)
    petror50_i = Column(Float)
    petror50_z = Column(Float)
    petror50err_u = Column(Float)
    petror50err_g = Column(Float)
    petror50err_r = Column(Float)
    petror50err_i = Column(Float)
    petror50err_z = Column(Float)
    petror90_u = Column(Float)
    petror90_g = Column(Float)
    petror90_r = Column(Float)
    petror90_i = Column(Float)
    petror90_z = Column(Float)
    petror90err_u = Column(Float)
    petror90err_g = Column(Float)
    petror90err_r = Column(Float)
    petror90err_i = Column(Float)
    petror90err_z = Column(Float)
    mrrcc_u = Column(Float)
    mrrcc_g = Column(Float)
    mrrcc_r = Column(Float)
    mrrcc_i = Column(Float)
    mrrcc_z = Column(Float)
    devflux_u = Column(Float)
    devflux_g = Column(Float)
    devflux_r = Column(Float)
    devflux_i = Column(Float)
    devflux_z = Column(Float)
    devfluxivar_u = Column(Float)
    devfluxivar_g = Column(Float)
    devfluxivar_r = Column(Float)
    devfluxivar_i = Column(Float)
    devfluxivar_z = Column(Float)
    extinction_u = Column(Float)
    extinction_g = Column(Float)
    extinction_r = Column(Float)
    extinction_i = Column(Float)
    extinction_z = Column(Float)
    lnldev_u = Column(Float)
    lnldev_g = Column(Float)
    lnldev_r = Column(Float)
    lnldev_i = Column(Float)
    lnldev_z = Column(Float)
    expflux_u = Column(Float)
    expflux_g = Column(Float)
    expflux_r = Column(Float)
    expflux_i = Column(Float)
    expflux_z = Column(Float)
    expfluxivar_u = Column(Float)
    expfluxivar_g = Column(Float)
    expfluxivar_r = Column(Float)
    expfluxivar_i = Column(Float)
    expfluxivar_z = Column(Float)
    aperflux7_u = Column(Float)
    aperflux7_g = Column(Float)
    aperflux7_r = Column(Float)
    aperflux7_i = Column(Float)
    aperflux7_z = Column(Float)
    calibstatus_u = Column(Integer)
    calibstatus_g = Column(Integer)
    calibstatus_r = Column(Integer)
    calibstatus_i = Column(Integer)
    calibstatus_z = Column(Integer)
    nmgypercount_u = Column(Float)
    nmgypercount_g = Column(Float)
    nmgypercount_r = Column(Float)
    nmgypercount_i = Column(Float)
    nmgypercount_z = Column(Float)
    resolvestatus = Column(Integer)
    thingid = Column(Integer)
    fieldid = Column(BigInteger)
    balkanid = Column(Integer)
    ndetect = Column(Integer)
    psffwhm_u = Column(Float)
    psffwhm_g = Column(Float)
    psffwhm_r = Column(Float)
    psffwhm_i = Column(Float)
    psffwhm_z = Column(Float)
    htmid = Column(BigInteger)
    parentid = Column(BigInteger)
    specobjid = Column(Numeric(20, 0))
    lnlstar_u = Column(Float)
    lnlstar_g = Column(Float)
    lnlstar_r = Column(Float)
    lnlstar_i = Column(Float)
    lnlstar_z = Column(Float)
    lnlexp_u = Column(Float)
    lnlexp_g = Column(Float)
    lnlexp_r = Column(Float)
    lnlexp_i = Column(Float)
    lnlexp_z = Column(Float)
    ra = Column(Float(53))
    dec = Column(Float(53))
    b = Column(Float(53))
    l = Column(Float(53))


class SDSS_DR13_PhotoObj_Primary(Base):
    __tablename__ = 'sdss_dr13_photoobj_primary'

    objid = Column('objid', BigInteger, unique=True, primary_key=True)
    ra = Column('ra', Float(53))
    dec = Column('dec', Float(53))


class SDSS_DR14_QSO(Base):
    __tablename__ = 'sdss_dr14_qso'
    __table_args__ = (
        Index('sdss_dr14_qso_mjd_plate_fiberid_idx', 'mjd', 'plate', 'fiberid'),
        {'schema': 'catalogdb'}
    )

    sdss_name = Column(String(18))
    ra = Column(Float(53))
    dec = Column(Float(53))
    thing_id = Column(Integer)
    plate = Column(SmallInteger, index=True)
    mjd = Column(Integer, index=True)
    fiberid = Column(SmallInteger, index=True)
    spectro = Column(String(4))
    z = Column(Float(53))
    z_err = Column(Float(53))
    source_z = Column(String(4))
    z_vi = Column(Float(53))
    z_pipe = Column(Float(53))
    z_pipe_err = Column(Float(53))
    zwarning = Column(SmallInteger)
    z_pca = Column(Float(53))
    z_pca_er = Column(Float(53))
    z_mgii = Column(Float(53))
    boss_target1 = Column(BigInteger)
    ancillary_target1 = Column(BigInteger)
    ancillary_target2 = Column(BigInteger)
    eboss_target0 = Column(BigInteger)
    eboss_target1 = Column(BigInteger)
    eboss_target2 = Column(BigInteger)
    n_spec_sdss = Column(SmallInteger)
    n_spec_boss = Column(SmallInteger)
    n_spec = Column(SmallInteger)
    plate_duplicate = Column(ARRAY(Integer()))
    mjd_duplicate = Column(ARRAY(Integer()))
    fiberid_duplicate = Column(ARRAY(Integer()))
    spectro_duplicate = Column(ARRAY(String(length=1)))
    bi_civ = Column(Float(53))
    err_bi_civ = Column(Float(53))
    run_number = Column(SmallInteger)
    rerun_number = Column(String(1))
    col_number = Column(SmallInteger)
    field_number = Column(SmallInteger)
    obj_id = Column(String(1))
    psfflux = Column(ARRAY(Float(precision=53)))
    ivar_psfflux = Column(ARRAY(Float(precision=53)))
    psfmag = Column(ARRAY(Float(precision=53)))
    err_psfmag = Column(ARRAY(Float(precision=53)))
    mi = Column(Float(53))
    gal_ext = Column(ARRAY(Float(precision=53)))
    rass_counts = Column(Float(53))
    rass_counts_snr = Column(Float(53))
    sdss2rosat_sep = Column(Float(53))
    flux_0_2_2_0kev = Column('flux_0.2_2.0kev', Float(53))
    flux_0_2_2_0kev_err = Column('flux_0.2_2.0kev_err', Float(53))
    flux_2_0_12_0kev = Column('flux_2.0_12.0kev', Float(53))
    flux_2_0_12_0kev_err = Column('flux_2.0_12.0kev_err', Float(53))
    flux_0_2_12_0kev = Column('flux_0.2_12.0kev', Float(53))
    flux_0_2_12_0kev_err = Column('flux_0.2_12.0kev_err', Float(53))
    lum_0_2_12_0kev = Column('lum_0.2_12.0kev', Float(53))
    sdss2xmm_sep = Column(Float(53))
    galex_matched = Column(Float)
    fuv = Column(Float(53))
    fuv_ivar = Column(Float(53))
    nuv = Column(Float(53))
    nuv_ivar = Column(Float(53))
    jmag = Column(Float(53))
    err_jmag = Column(Float(53))
    jsnr = Column(Float)
    jrdflag = Column(SmallInteger)
    hmag = Column(Float(53))
    err_hmag = Column(Float(53))
    hsnr = Column(Float)
    hrdflag = Column(SmallInteger)
    kmag = Column(Float(53))
    err_kmag = Column(Float(53))
    ksnr = Column(Float)
    krdflag = Column(SmallInteger)
    sdss2mass_sep = Column(Float(53))
    w1mag = Column(Float(53))
    err_w1mag = Column(Float(53))
    w1snr = Column(Float(53))
    w1chi2 = Column(Float(53))
    w2mag = Column(Float(53))
    err_w2mag = Column(Float(53))
    w2snr = Column(Float(53))
    w2chi2 = Column(Float(53))
    w3mag = Column(Float(53))
    err_w3mag = Column(Float(53))
    w3snr = Column(Float(53))
    w3chi2 = Column(Float(53))
    w4mag = Column(Float(53))
    err_w4mag = Column(Float(53))
    w4snr = Column(Float(53))
    w4chi2 = Column(Float(53))
    cc_flags = Column(String(4))
    ph_flags = Column(String(4))
    sdss2wise_sep = Column(Float(53))
    ukidss_matched = Column(Float)
    yflux = Column(Float(53))
    yflux_err = Column(Float(53))
    jflux = Column(Float(53))
    jflux_err = Column(Float(53))
    hflux = Column(Float(53))
    hflux_err = Column(Float(53))
    kflux = Column(Float(53))
    kflux_err = Column(Float(53))
    first_matched = Column(SmallInteger)
    first_flux = Column(Float(53))
    first_snr = Column(Float(53))
    sdss2first_sep = Column(Float(53))
    pk = Column(Integer, primary_key=True, server_default=text("nextval('\"catalogdb\".sdss_dr14_qso_pk_seq'::regclass)"))


class SDSS_DR14_SpecObj(Base):
    __tablename__ = 'sdss_dr14_specobj'
    __table_args__ = (
        Index('sdss_dr14_specobj_mjd_plate_fiberid_run2d_idx', 'mjd', 'plate', 'fiberid', 'run2d'),
        Index('sdss_dr14_specobj_mjd_plate_fiberid_idx', 'mjd', 'plate', 'fiberid'),
        {'schema': 'catalogdb'}
    )

    specobjid = Column(Numeric(20, 0), primary_key=True)
    bestobjid = Column(BigInteger, index=True)
    fluxobjid = Column(BigInteger, index=True)
    targetobjid = Column(BigInteger, index=True)
    plateid = Column(Numeric(20, 0))
    scienceprimary = Column(SmallInteger)
    sdssprimary = Column(SmallInteger)
    legacyprimary = Column(SmallInteger)
    segueprimary = Column(SmallInteger)
    segue1primary = Column(SmallInteger)
    segue2primary = Column(SmallInteger)
    bossprimary = Column(SmallInteger)
    bossspecobjid = Column(Integer)
    firstrelease = Column(String(32))
    survey = Column(String(32))
    instrument = Column(String(32))
    programname = Column(String(32))
    chunk = Column(String(32))
    platerun = Column(String(32))
    mjd = Column(Integer)
    plate = Column(SmallInteger)
    fiberid = Column(SmallInteger)
    run1d = Column(String(32))
    run2d = Column(String(32))
    tile = Column(Integer)
    designid = Column(Integer)
    legacy_target1 = Column(BigInteger)
    legacy_target2 = Column(BigInteger)
    special_target1 = Column(BigInteger)
    special_target2 = Column(BigInteger)
    segue1_target1 = Column(BigInteger)
    segue1_target2 = Column(BigInteger)
    segue2_target1 = Column(BigInteger)
    segue2_target2 = Column(BigInteger)
    boss_target1 = Column(BigInteger)
    eboss_target0 = Column(BigInteger)
    eboss_target1 = Column(BigInteger)
    eboss_target2 = Column(BigInteger)
    eboss_target_id = Column(BigInteger)
    ancillary_target1 = Column(BigInteger)
    ancillary_target2 = Column(BigInteger)
    thing_id_targeting = Column(BigInteger)
    thing_id = Column(Integer)
    primtarget = Column(BigInteger)
    sectarget = Column(BigInteger)
    spectrographid = Column(SmallInteger)
    sourcetype = Column(String(128))
    targettype = Column(String(128))
    ra = Column(Float(53))
    dec = Column(Float(53))
    cx = Column(Float(53))
    cy = Column(Float(53))
    cz = Column(Float(53))
    xfocal = Column(Float)
    yfocal = Column(Float)
    lambdaeff = Column(Float)
    bluefiber = Column(Integer)
    zoffset = Column(Float)
    z = Column(Float)
    zerr = Column(Float)
    zwarning = Column(Integer)
    _class = Column('class', String(32))
    subclass = Column(String(32))
    rchi2 = Column(Float)
    dof = Column(Float)
    rchi2diff = Column(Float)
    z_noqso = Column(Float)
    zerr_noqso = Column(Float)
    zwarning_noqso = Column(Integer)
    class_noqso = Column(String(32))
    subclass_noqso = Column(String(32))
    rchi2diff_noqso = Column(Float)
    z_person = Column(Float)
    class_person = Column(String(32))
    comments_person = Column(String(200))
    tfile = Column(String(32))
    tcolumn_0 = Column(SmallInteger)
    tcolumn_1 = Column(SmallInteger)
    tcolumn_2 = Column(SmallInteger)
    tcolumn_3 = Column(SmallInteger)
    tcolumn_4 = Column(SmallInteger)
    tcolumn_5 = Column(SmallInteger)
    tcolumn_6 = Column(SmallInteger)
    tcolumn_7 = Column(SmallInteger)
    tcolumn_8 = Column(SmallInteger)
    tcolumn_9 = Column(SmallInteger)
    npoly = Column(Float)
    theta_0 = Column(Float)
    theta_1 = Column(Float)
    theta_2 = Column(Float)
    theta_3 = Column(Float)
    theta_4 = Column(Float)
    theta_5 = Column(Float)
    theta_6 = Column(Float)
    theta_7 = Column(Float)
    theta_8 = Column(Float)
    theta_9 = Column(Float)
    veldisp = Column(Float)
    veldisperr = Column(Float)
    veldispz = Column(Float)
    veldispzerr = Column(Float)
    veldispchi2 = Column(Float)
    veldispnpix = Column(Integer)
    veldispdof = Column(Integer)
    wavemin = Column(Float)
    wavemax = Column(Float)
    wcoverage = Column(Float)
    snmedian_u = Column(Float)
    snmedian_g = Column(Float)
    snmedian_r = Column(Float)
    snmedian_i = Column(Float)
    snmedian_z = Column(Float)
    snmedian = Column(Float)
    chi68p = Column(Float)
    fracnsigma_1 = Column(Float)
    fracnsigma_2 = Column(Float)
    fracnsigma_3 = Column(Float)
    fracnsigma_4 = Column(Float)
    fracnsigma_5 = Column(Float)
    fracnsigma_6 = Column(Float)
    fracnsigma_7 = Column(Float)
    fracnsigma_8 = Column(Float)
    fracnsigma_9 = Column(Float)
    fracnsigma_10 = Column(Float)
    fracnsighi_1 = Column(Float)
    fracnsighi_2 = Column(Float)
    fracnsighi_3 = Column(Float)
    fracnsighi_4 = Column(Float)
    fracnsighi_5 = Column(Float)
    fracnsighi_6 = Column(Float)
    fracnsighi_7 = Column(Float)
    fracnsighi_8 = Column(Float)
    fracnsighi_9 = Column(Float)
    fracnsighi_10 = Column(Float)
    fracnsiglo_1 = Column(Float)
    fracnsiglo_2 = Column(Float)
    fracnsiglo_3 = Column(Float)
    fracnsiglo_4 = Column(Float)
    fracnsiglo_5 = Column(Float)
    fracnsiglo_6 = Column(Float)
    fracnsiglo_7 = Column(Float)
    fracnsiglo_8 = Column(Float)
    fracnsiglo_9 = Column(Float)
    fracnsiglo_10 = Column(Float)
    spectroflux_u = Column(Float)
    spectroflux_g = Column(Float)
    spectroflux_r = Column(Float)
    spectroflux_i = Column(Float)
    spectroflux_z = Column(Float)
    spectrosynflux_u = Column(Float)
    spectrosynflux_g = Column(Float)
    spectrosynflux_r = Column(Float)
    spectrosynflux_i = Column(Float)
    spectrosynflux_z = Column(Float)
    spectrofluxivar_u = Column(Float)
    spectrofluxivar_g = Column(Float)
    spectrofluxivar_r = Column(Float)
    spectrofluxivar_i = Column(Float)
    spectrofluxivar_z = Column(Float)
    spectrosynfluxivar_u = Column(Float)
    spectrosynfluxivar_g = Column(Float)
    spectrosynfluxivar_r = Column(Float)
    spectrosynfluxivar_i = Column(Float)
    spectrosynfluxivar_z = Column(Float)
    spectroskyflux_u = Column(Float)
    spectroskyflux_g = Column(Float)
    spectroskyflux_r = Column(Float)
    spectroskyflux_i = Column(Float)
    spectroskyflux_z = Column(Float)
    anyandmask = Column(Integer)
    anyormask = Column(Integer)
    platesn2 = Column(Float)
    deredsn2 = Column(Float)
    snturnoff = Column(Float)
    sn1_g = Column(Float)
    sn1_r = Column(Float)
    sn1_i = Column(Float)
    sn2_g = Column(Float)
    sn2_r = Column(Float)
    sn2_i = Column(Float)
    elodiefilename = Column(String(32))
    elodieobject = Column(String(32))
    elodiesptype = Column(String(32))
    elodiebv = Column(Float)
    elodieteff = Column(Float)
    elodielogg = Column(Float)
    elodiefeh = Column(Float)
    elodiez = Column(Float)
    elodiezerr = Column(Float)
    elodiezmodelerr = Column(Float)
    elodierchi2 = Column(Float)
    elodiedof = Column(Float)
    htmid = Column(BigInteger)
    loadversion = Column(Integer)


class SDSS_DR16_APOGEE_Star_AllVisit(Base):
    __tablename__ = 'sdss_dr16_apogeestarallvisit'

    visit_id = Column(String(64), index=True)
    apstar_id = Column(String(64), index=True)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".sdss_dr16_apogeestarallvisit_pk_seq'::regclass)"))


class SDSS_DR16_APOGEE_Visit(Base):
    __tablename__ = 'sdss_dr16_apogeevisit'

    visit_id = Column(Text, primary_key=True)
    apred_version = Column(Text)
    apogee_id = Column(Text)
    target_id = Column(Text)
    reduction_id = Column(Text)
    file = Column(Text)
    fiberid = Column(BigInteger)
    plate = Column(Text)
    mjd = Column(BigInteger)
    telescope = Column(Text)
    location_id = Column(BigInteger)
    ra = Column(Float(53), index=True)
    dec = Column(Float(53), index=True)
    glon = Column(Float(53), index=True)
    glat = Column(Float(53), index=True)
    apogee_target1 = Column(BigInteger)
    apogee_target2 = Column(BigInteger)
    apogee_target3 = Column(BigInteger)
    apogee2_target1 = Column(BigInteger)
    apogee2_target2 = Column(BigInteger)
    apogee2_target3 = Column(BigInteger)
    min_h = Column(Float)
    max_h = Column(Float)
    min_jk = Column(Float)
    max_jk = Column(Float)
    survey = Column(Text)
    extratarg = Column(BigInteger)
    snr = Column(Float)
    starflag = Column(BigInteger)
    dateobs = Column(Text)
    jd = Column(Float(53))
    bc = Column(Float)
    vtype = Column(Float)
    vrel = Column(Float)
    vrelerr = Column(Float)
    vhelio = Column(Float)
    chisq = Column(Float)
    rv_feh = Column(Float)
    rv_teff = Column(Float)
    rv_logg = Column(Float)
    rv_alpha = Column(Float)
    rv_carb = Column(Float)
    synthfile = Column(Text)
    estvtype = Column(BigInteger)
    estvrel = Column(Float)
    estvrelerr = Column(Float)
    estvhelio = Column(Float)
    synthvrel = Column(Float)
    synthvrelerr = Column(Float)
    synthvhelio = Column(Float)


class SDSS_DR16_QSO(Base):
    __tablename__ = 'sdss_dr16_qso'
    __table_args__ = (
        Index('sdss_dr16_qso_mjd_plate_fiberid_idx', 'mjd', 'plate', 'fiberid'),
        {'schema': 'catalogdb'}
    )

    sdss_name = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    plate = Column(Integer, index=True)
    mjd = Column(Integer, index=True)
    fiberid = Column(Integer, index=True)
    autoclass_pqn = Column(Text)
    autoclass_dr14q = Column(Text)
    is_qso_qn = Column(Integer)
    z_qn = Column(Float(53))
    random_select = Column(Integer)
    z_10k = Column(Float(53))
    z_conf_10k = Column(Integer)
    pipe_corr_10k = Column(Integer)
    is_qso_10k = Column(Integer)
    thing_id = Column(BigInteger)
    z_vi = Column(Float(53))
    z_conf = Column(Integer)
    class_person = Column(Integer)
    z_dr12q = Column(Float(53))
    is_qso_dr12q = Column(Integer)
    z_dr7q_sch = Column(Float(53))
    is_qso_dr7q = Column(Integer)
    z_dr6q_hw = Column(Float(53))
    z_dr7q_hw = Column(Float(53))
    is_qso_final = Column(Integer)
    z = Column(Float(53))
    source_z = Column(Text)
    z_pipe = Column(Float(53))
    zwarning = Column(Integer)
    objid = Column(Text)
    z_pca = Column(Float(53))
    zwarn_pca = Column(BigInteger)
    deltachi2_pca = Column(Float(53))
    z_halpha = Column(Float(53))
    zwarn_halpha = Column(BigInteger)
    deltachi2_halpha = Column(Float(53))
    z_hbeta = Column(Float(53))
    zwarn_hbeta = Column(BigInteger)
    deltachi2_hbeta = Column(Float(53))
    z_mgii = Column(Float(53))
    zwarn_mgii = Column(BigInteger)
    deltachi2_mgii = Column(Float(53))
    z_ciii = Column(Float(53))
    zwarn_ciii = Column(BigInteger)
    deltachi2_ciii = Column(Float(53))
    z_civ = Column(Float(53))
    zwarn_civ = Column(BigInteger)
    deltachi2_civ = Column(Float(53))
    z_lya = Column(Float(53))
    zwarn_lya = Column(BigInteger)
    deltachi2_lya = Column(Float(53))
    z_lyawg = Column(Float)
    z_dla = Column(ARRAY(Float(precision=53)))
    nhi_dla = Column(ARRAY(Float(precision=53)))
    conf_dla = Column(ARRAY(Float(precision=53)))
    bal_prob = Column(Float)
    bi_civ = Column(Float(53))
    err_bi_civ = Column(Float(53))
    ai_civ = Column(Float(53))
    err_ai_civ = Column(Float(53))
    bi_siiv = Column(Float(53))
    err_bi_siiv = Column(Float(53))
    ai_siiv = Column(Float(53))
    err_ai_siiv = Column(Float(53))
    boss_target1 = Column(BigInteger)
    eboss_target0 = Column(BigInteger)
    eboss_target1 = Column(BigInteger)
    eboss_target2 = Column(BigInteger)
    ancillary_target1 = Column(BigInteger)
    ancillary_target2 = Column(BigInteger)
    nspec_sdss = Column(Integer)
    nspec_boss = Column(Integer)
    nspec = Column(Integer)
    plate_duplicate = Column(ARRAY(Integer()))
    mjd_duplicate = Column(ARRAY(Integer()))
    fiberid_duplicate = Column(ARRAY(Integer()))
    spectro_duplicate = Column(ARRAY(Integer()))
    skyversion = Column(Integer)
    run_number = Column(Integer)
    rerun_number = Column(Text)
    camcol_number = Column(Integer)
    field_number = Column(Integer)
    id_number = Column(Integer)
    lambda_eff = Column(Float(53))
    zoffset = Column(Float(53))
    xfocal = Column(Float(53))
    yfocal = Column(Float(53))
    chunk = Column(Text)
    tile = Column(Integer)
    platesn2 = Column(Float(53))
    psfflux = Column(ARRAY(Float()))
    psfflux_ivar = Column(ARRAY(Float(precision=53)))
    psfmag = Column(ARRAY(Float()), index=True)
    psfmagerr = Column(ARRAY(Float(precision=53)))
    extinction = Column(ARRAY(Float()))
    m_i = Column(Float(53))
    sn_median_all = Column(Float(53))
    galex_matched = Column(Integer)
    fuv = Column(Float(53))
    fuv_ivar = Column(Float(53))
    nuv = Column(Float(53))
    nuv_ivar = Column(Float(53))
    ukidss_matched = Column(Integer)
    yflux = Column(Float(53))
    yflux_err = Column(Float(53))
    jflux = Column(Float(53))
    jflux_err = Column(Float(53))
    hflux = Column(Float(53))
    hflux_err = Column(Float(53))
    kflux = Column(Float(53))
    kflux_err = Column(Float(53))
    w1_flux = Column(Float)
    w1_flux_ivar = Column(Float)
    w1_mag = Column(Float)
    w1_mag_err = Column(Float)
    w1_chi2 = Column(Float)
    w1_flux_snr = Column(Float)
    w1_src_frac = Column(Float)
    w1_ext_flux = Column(Float)
    w1_ext_frac = Column(Float)
    w1_npix = Column(Integer)
    w2_flux = Column(Float)
    w2_flux_ivar = Column(Float)
    w2_mag = Column(Float)
    w2_mag_err = Column(Float)
    w2_chi2 = Column(Float)
    w2_flux_snr = Column(Float)
    w2_src_frac = Column(Float)
    w2_ext_flux = Column(Float)
    w2_ext_frac = Column(Float)
    w2_npix = Column(Integer)
    first_matched = Column(Integer)
    first_flux = Column(Float(53))
    first_snr = Column(Float(53))
    sdss2first_sep = Column(Float(53))
    jmag = Column(Float(53))
    jmag_err = Column(Float(53))
    jsnr = Column(Float(53))
    jrdflag = Column(Integer)
    hmag = Column(Float(53))
    hmag_err = Column(Float(53))
    hsnr = Column(Float(53))
    hrdflag = Column(Integer)
    kmag = Column(Float(53))
    kmag_err = Column(Float(53))
    ksnr = Column(Float(53))
    krdflag = Column(Integer)
    sdss2mass_sep = Column(Float(53))
    rass2rxs_id = Column(Text)
    rass2rxs_ra = Column(Float(53))
    rass2rxs_dec = Column(Float(53))
    rass2rxs_src_flux = Column(Float)
    rass2rxs_src_flux_err = Column(Float)
    sdss2rosat_sep = Column(Float(53))
    xmm_src_id = Column(BigInteger)
    xmm_ra = Column(Float(53))
    xmm_dec = Column(Float(53))
    xmm_soft_flux = Column(Float)
    xmm_soft_flux_err = Column(Float)
    xmm_hard_flux = Column(Float)
    xmm_hard_flux_err = Column(Float)
    xmm_total_flux = Column(Float)
    xmm_total_flux_err = Column(Float)
    xmm_total_lum = Column(Float)
    sdss2xmm_sep = Column(Float(53))
    gaia_matched = Column(Integer)
    gaia_designation = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_parallax = Column(Float(53))
    gaia_parallax_err = Column(Float(53))
    gaia_pm_ra = Column(Float(53))
    gaia_pm_ra_err = Column(Float(53))
    gaia_pm_dec = Column(Float(53))
    gaia_pm_dec_err = Column(Float(53))
    gaia_g_mag = Column(Float(53))
    gaia_g_flux_snr = Column(Float(53))
    gaia_bp_mag = Column(Float(53))
    gaia_bp_flux_snr = Column(Float(53))
    gaia_rp_mag = Column(Float(53))
    gaia_rp_flux_snr = Column(Float(53))
    sdss2gaia_sep = Column(Float(53))
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".sdss_dr16_qso_pk_seq'::regclass)"))


class SDSS_DR16_SpecObj(Base):
    __tablename__ = 'sdss_dr16_specobj'
    __table_args__ = (
        Index('sdss_dr16_specobj_mjd_plate_fiberid_run2d_idx', 'mjd', 'plate', 'fiberid', 'run2d'),
        Index('sdss_dr16_specobj_mjd_plate_fiberid_idx', 'mjd', 'plate', 'fiberid'),
        {'schema': 'catalogdb'}
    )

    specobjid = Column(Numeric(20, 0), primary_key=True)
    bestobjid = Column(BigInteger, index=True)
    fluxobjid = Column(BigInteger, index=True)
    targetobjid = Column(BigInteger, index=True)
    plateid = Column(Numeric(20, 0))
    scienceprimary = Column(SmallInteger, index=True)
    sdssprimary = Column(SmallInteger)
    legacyprimary = Column(SmallInteger)
    segueprimary = Column(SmallInteger)
    segue1primary = Column(SmallInteger)
    segue2primary = Column(SmallInteger)
    bossprimary = Column(SmallInteger)
    bossspecobjid = Column(Integer)
    firstrelease = Column(String(32))
    survey = Column(String(32))
    instrument = Column(String(32))
    programname = Column(String(32))
    chunk = Column(String(32))
    platerun = Column(String(32))
    mjd = Column(Integer)
    plate = Column(SmallInteger)
    fiberid = Column(SmallInteger)
    run1d = Column(String(32))
    run2d = Column(String(32))
    tile = Column(Integer)
    designid = Column(Integer)
    legacy_target1 = Column(BigInteger)
    legacy_target2 = Column(BigInteger)
    special_target1 = Column(BigInteger)
    special_target2 = Column(BigInteger)
    segue1_target1 = Column(BigInteger)
    segue1_target2 = Column(BigInteger)
    segue2_target1 = Column(BigInteger)
    segue2_target2 = Column(BigInteger)
    boss_target1 = Column(BigInteger)
    eboss_target0 = Column(BigInteger)
    eboss_target1 = Column(BigInteger)
    eboss_target2 = Column(BigInteger)
    eboss_target_id = Column(BigInteger)
    ancillary_target1 = Column(BigInteger)
    ancillary_target2 = Column(BigInteger)
    thing_id_targeting = Column(BigInteger)
    thing_id = Column(Integer)
    primtarget = Column(BigInteger)
    sectarget = Column(BigInteger)
    spectrographid = Column(SmallInteger)
    sourcetype = Column(String(128))
    targettype = Column(String(128))
    ra = Column(Float(53))
    dec = Column(Float(53))
    cx = Column(Float(53))
    cy = Column(Float(53))
    cz = Column(Float(53))
    xfocal = Column(Float)
    yfocal = Column(Float)
    lambdaeff = Column(Float)
    bluefiber = Column(Integer)
    zoffset = Column(Float)
    z = Column(Float, index=True)
    zerr = Column(Float, index=True)
    zwarning = Column(Integer, index=True)
    _class = Column('class', String(32))
    subclass = Column(String(32))
    rchi2 = Column(Float)
    dof = Column(Float)
    rchi2diff = Column(Float)
    z_noqso = Column(Float)
    zerr_noqso = Column(Float)
    zwarning_noqso = Column(Integer)
    class_noqso = Column(String(32))
    subclass_noqso = Column(String(32))
    rchi2diff_noqso = Column(Float)
    z_person = Column(Float)
    class_person = Column(String(32))
    comments_person = Column(String(200))
    tfile = Column(String(32))
    tcolumn_0 = Column(SmallInteger)
    tcolumn_1 = Column(SmallInteger)
    tcolumn_2 = Column(SmallInteger)
    tcolumn_3 = Column(SmallInteger)
    tcolumn_4 = Column(SmallInteger)
    tcolumn_5 = Column(SmallInteger)
    tcolumn_6 = Column(SmallInteger)
    tcolumn_7 = Column(SmallInteger)
    tcolumn_8 = Column(SmallInteger)
    tcolumn_9 = Column(SmallInteger)
    npoly = Column(Float)
    theta_0 = Column(Float)
    theta_1 = Column(Float)
    theta_2 = Column(Float)
    theta_3 = Column(Float)
    theta_4 = Column(Float)
    theta_5 = Column(Float)
    theta_6 = Column(Float)
    theta_7 = Column(Float)
    theta_8 = Column(Float)
    theta_9 = Column(Float)
    veldisp = Column(Float)
    veldisperr = Column(Float)
    veldispz = Column(Float)
    veldispzerr = Column(Float)
    veldispchi2 = Column(Float)
    veldispnpix = Column(Integer)
    veldispdof = Column(Integer)
    wavemin = Column(Float)
    wavemax = Column(Float)
    wcoverage = Column(Float)
    snmedian_u = Column(Float)
    snmedian_g = Column(Float)
    snmedian_r = Column(Float)
    snmedian_i = Column(Float)
    snmedian_z = Column(Float)
    snmedian = Column(Float, index=True)
    chi68p = Column(Float)
    fracnsigma_1 = Column(Float)
    fracnsigma_2 = Column(Float)
    fracnsigma_3 = Column(Float)
    fracnsigma_4 = Column(Float)
    fracnsigma_5 = Column(Float)
    fracnsigma_6 = Column(Float)
    fracnsigma_7 = Column(Float)
    fracnsigma_8 = Column(Float)
    fracnsigma_9 = Column(Float)
    fracnsigma_10 = Column(Float)
    fracnsighi_1 = Column(Float)
    fracnsighi_2 = Column(Float)
    fracnsighi_3 = Column(Float)
    fracnsighi_4 = Column(Float)
    fracnsighi_5 = Column(Float)
    fracnsighi_6 = Column(Float)
    fracnsighi_7 = Column(Float)
    fracnsighi_8 = Column(Float)
    fracnsighi_9 = Column(Float)
    fracnsighi_10 = Column(Float)
    fracnsiglo_1 = Column(Float)
    fracnsiglo_2 = Column(Float)
    fracnsiglo_3 = Column(Float)
    fracnsiglo_4 = Column(Float)
    fracnsiglo_5 = Column(Float)
    fracnsiglo_6 = Column(Float)
    fracnsiglo_7 = Column(Float)
    fracnsiglo_8 = Column(Float)
    fracnsiglo_9 = Column(Float)
    fracnsiglo_10 = Column(Float)
    spectroflux_u = Column(Float)
    spectroflux_g = Column(Float)
    spectroflux_r = Column(Float)
    spectroflux_i = Column(Float)
    spectroflux_z = Column(Float)
    spectrosynflux_u = Column(Float)
    spectrosynflux_g = Column(Float)
    spectrosynflux_r = Column(Float)
    spectrosynflux_i = Column(Float)
    spectrosynflux_z = Column(Float)
    spectrofluxivar_u = Column(Float)
    spectrofluxivar_g = Column(Float)
    spectrofluxivar_r = Column(Float)
    spectrofluxivar_i = Column(Float)
    spectrofluxivar_z = Column(Float)
    spectrosynfluxivar_u = Column(Float)
    spectrosynfluxivar_g = Column(Float)
    spectrosynfluxivar_r = Column(Float)
    spectrosynfluxivar_i = Column(Float)
    spectrosynfluxivar_z = Column(Float)
    spectroskyflux_u = Column(Float)
    spectroskyflux_g = Column(Float)
    spectroskyflux_r = Column(Float)
    spectroskyflux_i = Column(Float)
    spectroskyflux_z = Column(Float)
    anyandmask = Column(Integer)
    anyormask = Column(Integer)
    platesn2 = Column(Float)
    deredsn2 = Column(Float)
    snturnoff = Column(Float)
    sn1_g = Column(Float)
    sn1_r = Column(Float)
    sn1_i = Column(Float)
    sn2_g = Column(Float)
    sn2_r = Column(Float)
    sn2_i = Column(Float)
    elodiefilename = Column(String(32))
    elodieobject = Column(String(32))
    elodiesptype = Column(String(32))
    elodiebv = Column(Float)
    elodieteff = Column(Float)
    elodielogg = Column(Float)
    elodiefeh = Column(Float)
    elodiez = Column(Float)
    elodiezerr = Column(Float)
    elodiezmodelerr = Column(Float)
    elodierchi2 = Column(Float)
    elodiedof = Column(Float)
    htmid = Column(BigInteger)
    loadversion = Column(Integer)


class SDSS_DR17_APOGEE_Allplates(Base):
    __tablename__ = 'sdss_dr17_apogee_allplates'

    plate_visit_id = Column(Text, primary_key=True)
    location_id = Column(BigInteger, index=True)
    plate = Column(BigInteger, index=True)
    mjd = Column(BigInteger, index=True)
    apred_version = Column(Text)
    name = Column(Text)
    racen = Column(Float(53))
    deccen = Column(Float(53))
    radius = Column(Float(53))
    shared = Column(BigInteger)
    field_type = Column(BigInteger)
    survey = Column(Text)
    programname = Column(Text)
    platerun = Column(Text)
    chunk = Column(Text)
    ha = Column(ARRAY(Float(precision=53)))
    designid = Column(BigInteger, index=True)
    nstandard = Column(BigInteger)
    nscience = Column(BigInteger)
    nsky = Column(BigInteger)
    platedesign_version = Column(Text)
    comments = Column(Text)


class SDSS_DR17_APOGEE_Allstarmerge(Base):
    __tablename__ = 'sdss_dr17_apogee_allstarmerge'

    apogee_id = Column(Text, primary_key=True)
    nvisits = Column(SmallInteger)
    nentries = Column(Integer)
    ra = Column(Float(53))
    dec = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    pmra = Column(Float)
    pmdec = Column(Float)
    pm_src = Column(Text)
    j = Column(Float)
    j_err = Column(Float)
    h = Column(Float)
    h_err = Column(Float)
    k = Column(Float)
    k_err = Column(Float)
    ak = Column(Float)
    vhelio_avg = Column(Float)
    vhelio_err = Column(Float)
    vscatter = Column(Float)
    sig_rvvar = Column(Float)
    baseline = Column(Float)
    mean_fiber = Column(Float)
    sig_fiber = Column(Float)
    stars_pk = Column(Text)
    nvisits_entry = Column(Text)
    snr_entry = Column(Text)
    telescopes = Column(Text)
    fields = Column(Text)
    targflags = Column(Text)
    starflags = Column(Text)
    aspcapflags = Column(Text)
    member = Column(Text)
    gaia_source_id = Column(BigInteger, index=True)
    dist = Column(Float)
    dist_err = Column(Float)
    dist_src = Column(Text)
    teff_avg = Column(Float)
    teff_avg_err = Column(Float)
    logg_avg = Column(Float)
    logg_avg_err = Column(Float)
    m_h_avg = Column(Float)
    m_h_avg_err = Column(Float)
    visits_pk = Column(Text)


class SDSS_DR17_APOGEE_Allvisits(Base):
    __tablename__ = 'sdss_dr17_apogee_allvisits'

    apogee_id = Column(Text, index=True)
    target_id = Column(Text, index=True)
    visit_id = Column(Text, primary_key=True)
    file = Column(Text)
    fiberid = Column(SmallInteger, index=True)
    cartid = Column(SmallInteger)
    plate = Column(Text, index=True)
    mjd = Column(Integer, index=True)
    telescope = Column(Text, index=True)
    survey = Column(Text)
    field = Column(Text, index=True)
    programname = Column(Text)
    alt_id = Column(Text)
    location_id = Column(SmallInteger)
    ra = Column(Float(53))
    dec = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    relflux = Column(Float)
    mtpflux = Column(Float)
    j = Column(Float)
    j_err = Column(Float)
    h = Column(Float)
    h_err = Column(Float)
    k = Column(Float)
    k_err = Column(Float)
    src_h = Column(Text)
    wash_m = Column(Float)
    wash_m_err = Column(Float)
    wash_t2 = Column(Float)
    wash_t2_err = Column(Float)
    ddo51 = Column(Float)
    ddo51_err = Column(Float)
    irac_3_6 = Column(Float)
    irac_3_6_err = Column(Float)
    irac_4_5 = Column(Float)
    irac_4_5_err = Column(Float)
    irac_5_8 = Column(Float)
    irac_5_8_err = Column(Float)
    irac_8_0 = Column(Float)
    irac_8_0_err = Column(Float)
    wise_4_5 = Column(Float)
    wise_4_5_err = Column(Float)
    targ_4_5 = Column(Float)
    targ_4_5_err = Column(Float)
    wash_ddo51_giant_flag = Column(SmallInteger)
    wash_ddo51_star_flag = Column(SmallInteger)
    pmra = Column(Float)
    pmdec = Column(Float)
    pm_src = Column(Text)
    ak_targ = Column(Float)
    ak_targ_method = Column(Text)
    ak_wise = Column(Float)
    sfd_ebv = Column(Float)
    apogee_target1 = Column(Integer)
    apogee_target2 = Column(Integer)
    apogee2_target1 = Column(Integer)
    apogee2_target2 = Column(Integer)
    apogee2_target3 = Column(Integer)
    apogee2_target4 = Column(Integer)
    targflags = Column(Text)
    snr = Column(Float)
    starflag = Column(BigInteger)
    starflags = Column(Text)
    dateobs = Column(Text)
    jd = Column(Float(53))
    vlsr = Column(Float)
    vgsr = Column(Float)
    chisq = Column(Float)
    synthfile = Column(Text)
    min_h = Column(Float)
    max_h = Column(Float)
    min_jk = Column(Float)
    max_jk = Column(Float)
    vrel = Column(Float(53))
    vrelerr = Column(Float(53))
    vhelio = Column(Float(53))
    bc = Column(Float(53))
    rv_teff = Column(Float(53))
    rv_logg = Column(Float(53))
    rv_feh = Column(Float(53))
    rv_carb = Column(Float(53))
    rv_alpha = Column(Float(53))
    xcorr_vrel = Column(Float)
    xcorr_vrelerr = Column(Float)
    xcorr_vhelio = Column(Float)
    ccfwhm = Column(Float)
    autofwhm = Column(Float)
    rv_chi2 = Column(Float)
    n_components = Column(Integer)
    rv_components_x = Column(Float)
    rv_components_y = Column(Float)
    rv_components_z = Column(Float)
    rv_flag = Column(Integer)


class SDSS_ID_flat(Base):
    __tablename__ = 'sdss_id_flat'

    sdss_id = Column(BigInteger, index=True)
    catalogid = Column(BigInteger, index=True)
    version_id = Column(SmallInteger, index=True)
    ra_xm = Column(Float(53))
    dec_xm = Column(Float(53))
    n_associated = Column(SmallInteger, index=True)
    pk = Column(BigInteger, primary_key=True)


class SDSS_ID_stacked(Base):
    __tablename__ = 'sdss_id_stacked'

    catalogid21 = Column(BigInteger, index=True)
    catalogid25 = Column(BigInteger, index=True)
    catalogid31 = Column(BigInteger, index=True)
    ra_xm = Column(Float(53))
    dec_xm = Column(Float(53))
    sdss_id = Column(BigInteger, primary_key=True)


class SDSSV_BOSS_Conflist(Base):
    __tablename__ = 'sdssv_boss_conflist'
    __table_args__ = (
        Index('sdssv_boss_conflist_plate_mjd_idx', 'plate', 'mjd'),
        {'schema': 'catalogdb'}
    )

    plate = Column(Integer, index=True)
    designid = Column(Integer, index=True)
    mjd = Column(Integer, index=True)
    run2d = Column(Text)
    run1d = Column(Text)
    racen = Column(Float)
    deccen = Column(Float)
    epoch = Column(Float)
    cartid = Column(Integer)
    tai = Column(Float(53))
    tai_beg = Column(Float(53))
    tai_end = Column(Float(53))
    airmass = Column(Float)
    exptime = Column(Float)
    mapname = Column(Text)
    survey = Column(Text)
    programname = Column(Text, index=True)
    chunk = Column(Text)
    platequality = Column(Text)
    platesn2 = Column(Float, index=True)
    deredsn2 = Column(Float)
    qsurvey = Column(Integer)
    mjdlist = Column(Text)
    tailist = Column(Text)
    nexp = Column(Integer)
    nexp_b1 = Column(Integer)
    nexp_r1 = Column(Integer)
    expt_b1 = Column(Float)
    expt_r1 = Column(Float)
    sn2_g1 = Column(Float, index=True)
    sn2_r1 = Column(Float, index=True)
    sn2_i1 = Column(Float, index=True)
    dered_sn2_g1 = Column(Float)
    dered_sn2_r1 = Column(Float)
    dered_sn2_i1 = Column(Float)
    goffstd = Column(Float)
    grmsstd = Column(Float)
    roffstd = Column(Float)
    rrmsstd = Column(Float)
    ioffstd = Column(Float)
    irmsstd = Column(Float)
    groffstd = Column(Float)
    grrmsstd = Column(Float)
    rioffstd = Column(Float)
    rirmsstd = Column(Float)
    goffgal = Column(Float)
    grmsgal = Column(Float)
    roffgal = Column(Float)
    rrmsgal = Column(Float)
    ioffgal = Column(Float)
    irmsgal = Column(Float)
    groffgal = Column(Float)
    grrmsgal = Column(Float)
    rioffgal = Column(Float)
    rirmsgal = Column(Float)
    nguide = Column(Integer)
    seeing20 = Column(Float)
    seeing50 = Column(Float)
    seeing80 = Column(Float)
    rmsoff20 = Column(Float)
    rmsoff50 = Column(Float)
    rmsoff80 = Column(Float)
    airtemp = Column(Float)
    xsigma = Column(Float)
    xsigmin = Column(Float)
    xsigmax = Column(Float)
    wsigma = Column(Float)
    wsigmin = Column(Float)
    wsigmax = Column(Float)
    xchi2 = Column(Float)
    xchi2min = Column(Float)
    xchi2max = Column(Float)
    skychi2 = Column(Float)
    schi2min = Column(Float)
    schi2max = Column(Float)
    fbadpix = Column(Float)
    fbadpix1 = Column(Float)
    fbadpix2 = Column(Float)
    n_total = Column(Integer)
    n_galaxy = Column(Integer)
    n_qso = Column(Integer)
    n_star = Column(Integer)
    n_unknown = Column(Integer)
    n_sky = Column(Integer)
    n_std = Column(Integer)
    n_target_qso = Column(Integer)
    success_qso = Column(Float)
    status2d = Column(Text)
    statuscombine = Column(Text)
    status1d = Column(Text)
    public = Column(Text)
    qualcomments = Column(Text)
    moon_frac = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".sdssv_boss_conflist_pkey_seq'::regclass)"))


class SDSSV_BOSS_SPALL(Base):
    __tablename__ = 'sdssv_boss_spall'
    __table_args__ = (
        Index('sdssv_boss_spall_plate_mjd_idx', 'plate', 'mjd'),
        Index('sdssv_boss_spall_plate_mjd_fiberid_idx', 'plate', 'mjd', 'fiberid'),
        {'schema': 'catalogdb'}
    )

    programname = Column(Text, index=True)
    chunk = Column(Text)
    survey = Column(Text)
    platequality = Column(Text)
    platesn2 = Column(Float)
    deredsn2 = Column(Float)
    primtarget = Column(Integer)
    sectarget = Column(Integer)
    lambda_eff = Column(Float)
    bluefiber = Column(Integer)
    zoffset = Column(Float)
    xfocal = Column(Float)
    yfocal = Column(Float)
    specprimary = Column(SmallInteger, index=True)
    specboss = Column(SmallInteger)
    boss_specobj_id = Column(Integer)
    nspecobs = Column(SmallInteger)
    calibflux = Column(ARRAY(Float()))
    calibflux_ivar = Column(ARRAY(Float()))
    gaia_bp = Column(Float)
    gaia_rp = Column(Float)
    gaia_g = Column(Float)
    firstcarton = Column(Text, index=True)
    mag = Column(ARRAY(Float()))
    plate = Column(SmallInteger, index=True)
    designid = Column(SmallInteger)
    nexp = Column(SmallInteger)
    exptime = Column(SmallInteger)
    airmass = Column(Float)
    healpix = Column(Integer)
    healpixgrp = Column(SmallInteger)
    healpix_dir = Column(Text)
    mjd_final = Column(Float)
    mjd_list = Column(Text)
    tai_list = Column(Text)
    catalogid = Column(BigInteger, index=True)
    sdssv_boss_target0 = Column(BigInteger)
    field = Column(Integer)
    tile = Column(Integer)
    mjd = Column(Integer, index=True)
    fiberid = Column(Integer, index=True)
    run2d = Column(Text)
    run1d = Column(Text)
    objtype = Column(Text)
    plug_ra = Column(Float(53))
    plug_dec = Column(Float(53))
    _class = Column('class', Text)
    subclass = Column(Text)
    z = Column(Float)
    z_err = Column(Float, index=True)
    rchi2 = Column(Float)
    dof = Column(Integer)
    rchi2diff = Column(Float)
    tfile = Column(Text)
    tcolumn = Column(ARRAY(Integer()))
    npoly = Column(Integer)
    theta = Column(ARRAY(Float()))
    vdisp = Column(Float)
    vdisp_err = Column(Float)
    vdispz = Column(Float)
    vdispz_err = Column(Float)
    vdispchi2 = Column(Float)
    vdispnpix = Column(Float)
    vdispdof = Column(Integer)
    wavemin = Column(Float)
    wavemax = Column(Float)
    wcoverage = Column(Float)
    zwarning = Column(Integer, index=True)
    sn_median = Column(ARRAY(Float()))
    sn_median_all = Column(Float, index=True)
    chi68p = Column(Float)
    fracnsigma = Column(ARRAY(Float()))
    fracnsighi = Column(ARRAY(Float()))
    fracnsiglo = Column(ARRAY(Float()))
    spectroflux = Column(ARRAY(Float()))
    spectroflux_ivar = Column(ARRAY(Float()))
    spectrosynflux = Column(ARRAY(Float()))
    spectrosynflux_ivar = Column(ARRAY(Float()))
    spectroskyflux = Column(ARRAY(Float()))
    anyandmask = Column(Integer)
    anyormask = Column(Integer)
    spec1_g = Column(Float)
    spec1_r = Column(Float)
    spec1_i = Column(Float)
    elodie_filename = Column(Text)
    elodie_object = Column(Text)
    elodie_sptype = Column(Text)
    elodie_bv = Column(Float)
    elodie_teff = Column(Float)
    elodie_logg = Column(Float)
    elodie_feh = Column(Float)
    elodie_z = Column(Float)
    elodie_z_err = Column(Float)
    elodie_z_modelerr = Column(Float)
    elodie_rchi2 = Column(Float)
    elodie_dof = Column(Integer)
    z_noqso = Column(Float)
    z_err_noqso = Column(Float)
    znum_noqso = Column(Integer)
    zwarning_noqso = Column(Integer)
    class_noqso = Column(Text)
    subclass_noqso = Column(Text)
    rchi2diff_noqso = Column(Float)
    specobjid = Column(BigInteger)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".sdssv_boss_spall_pkey_seq'::regclass)"))


class SDSSV_Plateholes_Meta(Base):
    __tablename__ = 'sdssv_plateholes_meta'

    plateid = Column(Integer, index=True)
    ha = Column(ARRAY(Float()))
    ha_observable_min = Column(ARRAY(Float()))
    ha_observable_max = Column(ARRAY(Float()))
    programname = Column(Text, index=True)
    temp = Column(Float)
    design_platescale_alt = Column(Float)
    design_platescale_az = Column(Float)
    design_parallactic_angle = Column(Float)
    guider_coeff_0 = Column(Float)
    guider_coeff_1 = Column(Float)
    guider_coeff_2 = Column(Float)
    guider_coeff_3 = Column(Float)
    guider_coeff_4 = Column(Float)
    guider_coeff_5 = Column(Float)
    guider_coeff_6 = Column(Float)
    guider_coeff_7 = Column(Float)
    guider_coeff_8 = Column(Float)
    guider_coeff_9 = Column(Float)
    locationid = Column(Integer, index=True)
    instruments = Column(Text)
    npointings = Column(Integer)
    noffsets = Column(Integer)
    minstdinblockboss_shared = Column(Text)
    maxskyinblockboss_shared = Column(Integer)
    gfibertype = Column(Text)
    guidetype = Column(Text)
    guidenums1 = Column(ARRAY(Integer()))
    guidemag_minmax = Column(ARRAY(Float()))
    guide_lambda_eff = Column(Float)
    nguidemax = Column(Integer)
    ferrulesizeboss_shared = Column(Float)
    buffersizeboss_shared = Column(Float)
    ferrulesizeapogee_shared = Column(Float)
    buffersizeapogee_shared = Column(Float)
    ferrulesizeguide = Column(Float)
    buffersizeguide = Column(Float)
    platedesignstandards = Column(Text)
    standardtype = Column(Text)
    platedesignskies = Column(Text)
    skytype = Column(Text)
    plugmapstyle = Column(Text)
    bossmagtype = Column(Text)
    pointing_name = Column(Text)
    max_off_fiber_for_ha = Column(Float)
    collectfactor = Column(Integer)
    designid = Column(Integer, index=True)
    platedesignversion = Column(Text)
    platetype = Column(Text)
    racen = Column(Float)
    deccen = Column(Float)
    ninputs = Column(Integer)
    plateinput1 = Column(Text)
    plateinput2 = Column(Text)
    plateinput3 = Column(Text)
    plateinput4 = Column(Text)
    plateinput5 = Column(Text)
    plateinput6 = Column(Text)
    plateinput7 = Column(Text)
    priority = Column(Text)
    relaxed_fiber_classes = Column(Integer)
    targettypes = Column(Text)
    napogee_shared_standard = Column(Integer)
    napogee_shared_science = Column(Integer)
    napogee_shared_sky = Column(Integer)
    nboss_shared_standard = Column(Integer)
    nboss_shared_science = Column(Integer)
    nboss_shared_sky = Column(Integer)
    minskyinblockboss_shared = Column(Integer)
    minstandardinblockboss_shared = Column(Text)
    reddeningmed = Column(ARRAY(Float()))
    tileid = Column(Integer)
    theta = Column(Integer)
    platerun = Column(Text)
    platedesign_version = Column(Text)
    yanny_uid = Column(Integer, primary_key=True)
    yanny_filename = Column(Text)
    plateinput8 = Column(Text)
    plateinput9 = Column(Text)
    plateinput10 = Column(Text)
    plateinput11 = Column(Text)
    plateinput12 = Column(Text)
    plateinput13 = Column(Text)
    plateinput14 = Column(Text)
    plateinput15 = Column(Text)
    plateinput16 = Column(Text)
    skyinput17 = Column(Text)
    plateinput18 = Column(Text)
    plateinput17 = Column(Text)
    skyinput18 = Column(Text)
    plateinput19 = Column(Text)
    skyinput16 = Column(Text)
    skyinput19 = Column(Text)
    plateinput20 = Column(Text)
    skyinput15 = Column(Text)
    skyinput21 = Column(Text)
    plateinput22 = Column(Text)
    skyinput13 = Column(Text)
    skyinput20 = Column(Text)
    plateinput21 = Column(Text)
    skyinput14 = Column(Text)
    skyinput6 = Column(Text)
    defaultsurveymode = Column(Text, index=True)
    skyinput23 = Column(Text)
    plateinput24 = Column(Text)
    skyinput22 = Column(Text)
    plateinput23 = Column(Text)
    skyinput8 = Column(Text)
    isvalid = Column(Boolean, index=True)


class Skies_v1(Base):
    __tablename__ = 'skies_v1'

    pix_32768 = Column(BigInteger, primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    down_pix = Column(Integer)
    tile_32 = Column(Integer, index=True)
    gaia_sky = Column(Boolean, index=True)
    sep_neighbour_gaia = Column(Float)
    mag_neighbour_gaia = Column(Float)
    ls8_sky = Column(Boolean, index=True)
    sep_neighbour_ls8 = Column(Float)
    mag_neighbour_ls8 = Column(Float)
    tmass_sky = Column(Boolean, index=True)
    sep_neighbour_tmass = Column(Float)
    mag_neighbour_tmass = Column(Float)
    tycho2_sky = Column(Boolean, index=True)
    sep_neighbour_tycho2 = Column(Float)
    mag_neighbour_tycho2 = Column(Float)
    tmass_xsc_sky = Column(Boolean, index=True)
    sep_neighbour_tmass_xsc = Column(Float)
    mag_neighbour_tmass_xsc = Column(Float)


class Skies_v2(Base):
    __tablename__ = 'skies_v2'

    pix_32768 = Column(BigInteger, primary_key=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    down_pix = Column(BigInteger, index=True)
    tile_32 = Column(BigInteger, index=True)
    valid_gaia = Column(Boolean, index=True)
    selected_gaia = Column(Boolean, index=True)
    sep_neighbour_gaia = Column(Float, index=True)
    mag_neighbour_gaia = Column(Float, index=True)
    valid_ls8 = Column(Boolean, index=True)
    selected_ls8 = Column(Boolean, index=True)
    sep_neighbour_ls8 = Column(Float, index=True)
    mag_neighbour_ls8 = Column(Float, index=True)
    valid_ps1dr2 = Column(Boolean, index=True)
    selected_ps1dr2 = Column(Boolean, index=True)
    sep_neighbour_ps1dr2 = Column(Float, index=True)
    mag_neighbour_ps1dr2 = Column(Float, index=True)
    valid_tmass = Column(Boolean, index=True)
    selected_tmass = Column(Boolean, index=True)
    sep_neighbour_tmass = Column(Float, index=True)
    mag_neighbour_tmass = Column(Float, index=True)
    valid_tycho2 = Column(Boolean, index=True)
    selected_tycho2 = Column(Boolean, index=True)
    sep_neighbour_tycho2 = Column(Float, index=True)
    mag_neighbour_tycho2 = Column(Float, index=True)
    valid_tmass_xsc = Column(Boolean, index=True)
    selected_tmass_xsc = Column(Boolean)
    sep_neighbour_tmass_xsc = Column(Float, index=True)


class SuperCosmos(Base):
    __tablename__ = 'supercosmos'

    objid = Column(BigInteger, primary_key=True)
    objidb = Column(BigInteger)
    objidr1 = Column(BigInteger)
    objidr2 = Column(BigInteger)
    objidi = Column(BigInteger)
    htmid = Column(BigInteger)
    epoch = Column(Float)
    ra = Column(Float(53))
    dec = Column(Float(53))
    sigra = Column(Float(53))
    sigdec = Column(Float(53))
    cx = Column(Float(53))
    cy = Column(Float(53))
    cz = Column(Float(53))
    muacosd = Column(Float)
    mud = Column(Float)
    sigmuacosd = Column(Float)
    sigmud = Column(Float)
    chi2 = Column(Float)
    nplates = Column(SmallInteger)
    classmagb = Column(Float, index=True)
    classmagr1 = Column(Float, index=True)
    classmagr2 = Column(Float, index=True)
    classmagi = Column(Float, index=True)
    gcormagb = Column(Float)
    gcormagr1 = Column(Float)
    gcormagr2 = Column(Float)
    gcormagi = Column(Float)
    scormagb = Column(Float)
    scormagr1 = Column(Float)
    scormagr2 = Column(Float)
    scormagi = Column(Float)
    meanclass = Column(SmallInteger)
    classb = Column(SmallInteger, index=True)
    classr1 = Column(SmallInteger, index=True)
    classr2 = Column(SmallInteger, index=True)
    classi = Column(SmallInteger, index=True)
    ellipb = Column(Float)
    ellipr1 = Column(Float)
    ellipr2 = Column(Float)
    ellipi = Column(Float)
    qualb = Column(Integer)
    qualr1 = Column(Integer)
    qualr2 = Column(Integer)
    quali = Column(Integer)
    blendb = Column(Integer)
    blendr1 = Column(Integer)
    blendr2 = Column(Integer)
    blendi = Column(Integer)
    prfstatb = Column(Float)
    prfstatr1 = Column(Float)
    prfstatr2 = Column(Float)
    prfstati = Column(Float)
    l = Column(Float)
    b = Column(Float)
    d = Column(Float)
    ebmv = Column(Float)


class TESS_TOI_v05(Base):
    __tablename__ = 'tess_toi_v05'

    ticid = Column(BigInteger, index=True)
    target_type = Column(CHAR(8), index=True)
    toi = Column(CHAR(32), index=True)
    tess_disposition = Column(CHAR(4), index=True)
    tfopwg_disposition = Column(CHAR(3), index=True)
    ctoi = Column(CHAR(32), index=True)
    user_disposition = Column(CHAR(2), index=True)
    num_sectors = Column(Float(53), index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".tess_toi_v05_pkey_seq'::regclass)"))


class TESS_TOI_v1(Base):
    __tablename__ = 'tess_toi_v1'

    ticid = Column(BigInteger, index=True)
    target_type = Column(CHAR(8), index=True)
    toi = Column(CHAR(32), index=True)
    tess_disposition = Column(CHAR(4), index=True)
    tfopwg_disposition = Column(CHAR(3), index=True)
    ctoi = Column(CHAR(32), index=True)
    user_disposition = Column(CHAR(2), index=True)
    num_sectors = Column(Float(53), index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".tess_toi_v1_pkey_seq'::regclass)"))


class TIC_v8_Extended(Base):
    __tablename__ = 'tic_v8_extended'

    id = Column('id', BigInteger, primary_key=True)
    version = Column('version', String(8))
    hip = Column('hip', Integer)
    tyc = Column('tyc', String(12))
    ucac = Column('ucac', String(10))
    twomass = Column('twomass', String(20))
    sdss = Column('sdss', BigInteger)
    allwise = Column('allwise', String(20))
    gaia = Column('gaia', String(20))
    apass = Column('apass', String(30))
    kic = Column('kic', Integer)
    objtype = Column('objtype', String(16))
    typesrc = Column('typesrc', String(16))
    ra = Column('ra', Float(53))
    dec = Column('dec', Float(53))
    posflag = Column('posflag', String(12))
    pmra = Column('pmra', Float)
    e_pmra = Column('e_pmra', Float)
    pmdec = Column('pmdec', Float)
    e_pmdec = Column('e_pmdec', Float)
    pmflag = Column('pmflag', String(12))
    plx = Column('plx', Float)
    e_plx = Column('e_plx', Float)
    parflag = Column('parflag', String(12))
    gallong = Column('gallong', Float(53))
    gallat = Column('gallat', Float(53))
    eclong = Column('eclong', Float(53))
    eclat = Column('eclat', Float(53))
    bmag = Column('bmag', Float)
    e_bmag = Column('e_bmag', Float)
    vmag = Column('vmag', Float)
    e_vmag = Column('e_vmag', Float)
    umag = Column('umag', Float)
    e_umag = Column('e_umag', Float)
    gmag = Column('gmag', Float)
    e_gmag = Column('e_gmag', Float)
    rmag = Column('rmag', Float)
    e_rmag = Column('e_rmag', Float)
    imag = Column('imag', Float)
    e_imag = Column('e_imag', Float)
    zmag = Column('zmag', Float)
    e_zmag = Column('e_zmag', Float)
    jmag = Column('jmag', Float)
    e_jmag = Column('e_jmag', Float)
    hmag = Column('hmag', Float)
    e_hmag = Column('e_hmag', Float)
    kmag = Column('kmag', Float)
    e_kmag = Column('e_kmag', Float)
    twomflag = Column('twomflag', String(20))
    prox = Column('prox', Float)
    w1mag = Column('w1mag', Float)
    e_w1mag = Column('e_w1mag', Float)
    w2mag = Column('w2mag', Float)
    e_w2mag = Column('e_w2mag', Float)
    w3mag = Column('w3mag', Float)
    e_w3mag = Column('e_w3mag', Float)
    w4mag = Column('w4mag', Float)
    e_w4mag = Column('e_w4mag', Float)
    gaiamag = Column('gaiamag', Float)
    e_gaiamag = Column('e_gaiamag', Float)
    tmag = Column('tmag', Float)
    e_tmag = Column('e_tmag', Float)
    tessflag = Column('tessflag', String(20))
    spflag = Column('spflag', String(20))
    teff = Column('teff', Float)
    e_teff = Column('e_teff', Float)
    logg = Column('logg', Float)
    e_logg = Column('e_logg', Float)
    mh = Column('mh', Float)
    e_mh = Column('e_mh', Float)
    rad = Column('rad', Float)
    e_rad = Column('e_rad', Float)
    mass = Column('mass', Float)
    e_mass = Column('e_mass', Float)
    rho = Column('rho', Float)
    e_rho = Column('e_rho', Float)
    lumclass = Column('lumclass', String(10))
    lum = Column('lum', Float)
    e_lum = Column('e_lum', Float)
    d = Column('d', Float)
    e_d = Column('e_d', Float)
    ebv = Column('ebv', Float)
    e_ebv = Column('e_ebv', Float)
    numcont = Column('numcont', Integer)
    contratio = Column('contratio', Float)
    disposition = Column('disposition', String(10))
    duplicate_id = Column('duplicate_id', BigInteger)
    priority = Column('priority', Float)
    eneg_ebv = Column('eneg_ebv', Float)
    epos_ebv = Column('epos_ebv', Float)
    ebvflag = Column('ebvflag', String(20))
    eneg_mass = Column('eneg_mass', Float)
    epos_mass = Column('epos_mass', Float)
    eneg_rad = Column('eneg_rad', Float)
    epos_rad = Column('epos_rad', Float)
    eneg_rho = Column('eneg_rho', Float)
    epos_rho = Column('epos_rho', Float)
    eneg_logg = Column('eneg_logg', Float)
    epos_logg = Column('epos_logg', Float)
    eneg_lum = Column('eneg_lum', Float)
    epos_lum = Column('epos_lum', Float)
    eneg_dist = Column('eneg_dist', Float)
    epos_dist = Column('epos_dist', Float)
    distflag = Column('distflag', String(20))
    eneg_teff = Column('eneg_teff', Float)
    epos_teff = Column('epos_teff', Float)
    tefflag = Column('tefflag', String(20))
    gaiabp = Column('gaiabp', Float)
    e_gaiabp = Column('e_gaiabp', Float)
    gaiarp = Column('gaiarp', Float)
    e_gaiarp = Column('e_gaiarp', Float)
    gaiaqflag = Column('gaiaqflag', Integer)
    starchareflag = Column('starchareflag', String(20))
    vmagflag = Column('vmagflag', String(20))
    bmagflag = Column('bmagflag', String(20))
    splits = Column('splits', String(20))
    e_ra = Column('e_ra', Float(53))
    e_dec = Column('e_dec', Float(53))
    ra_orig = Column('ra_orig', Float(53))
    dec_orig = Column('dec_orig', Float(53))
    e_ra_orig = Column('e_ra_orig', Float(53))
    e_dec_orig = Column('e_dec_orig', Float(53))
    raddflag = Column('raddflag', Integer)
    wdflag = Column('wdflag', Integer)
    objid = Column('objid', BigInteger)
    gaia_int = Column('gaia_int', BigInteger)
    twomass_psc = Column('twomass_psc', Text)
    twomass_psc_pts_key = Column('twomass_psc_pts_key', Integer)
    tycho2_tycid = Column('tycho2_tycid', Integer)
    allwise_cntr = Column('allwise_cntr', BigInteger)


class TwoMassPSC(Base):
    __tablename__ = 'twomass_psc'

    ra = Column(Float(53))
    decl = Column(Float(53))
    err_maj = Column(Float)
    err_min = Column(Float)
    err_ang = Column(SmallInteger)
    j_m = Column(Float, index=True)
    j_cmsig = Column(Float)
    j_msigcom = Column(Float)
    j_snr = Column(Float)
    h_m = Column(Float, index=True)
    h_cmsig = Column(Float)
    h_msigcom = Column(Float)
    h_snr = Column(Float)
    k_m = Column(Float, index=True)
    k_cmsig = Column(Float)
    k_msigcom = Column(Float)
    k_snr = Column(Float)
    ph_qual = Column(CHAR(3), index=True)
    rd_flg = Column(CHAR(3), index=True)
    bl_flg = Column(CHAR(3))
    cc_flg = Column(CHAR(3), index=True)
    ndet = Column(CHAR(6))
    prox = Column(Float)
    pxpa = Column(SmallInteger)
    pxcntr = Column(Integer)
    gal_contam = Column(SmallInteger, index=True)
    mp_flg = Column(SmallInteger)
    pts_key = Column(Integer, primary_key=True)
    hemis = Column(CHAR(1))
    date = Column(Date)
    scan = Column(SmallInteger)
    glon = Column(Float)
    glat = Column(Float)
    x_scan = Column(Float)
    jdate = Column(Float(53), index=True)
    j_psfchi = Column(Float)
    h_psfchi = Column(Float)
    k_psfchi = Column(Float)
    j_m_stdap = Column(Float)
    j_msig_stdap = Column(Float)
    h_m_stdap = Column(Float)
    h_msig_stdap = Column(Float)
    k_m_stdap = Column(Float)
    k_msig_stdap = Column(Float)
    dist_edge_ns = Column(Integer)
    dist_edge_ew = Column(Integer)
    dist_edge_flg = Column(CHAR(2))
    dup_src = Column(SmallInteger)
    use_src = Column(SmallInteger)
    a = Column(CHAR(1))
    dist_opt = Column(Float)
    phi_opt = Column(SmallInteger)
    b_m_opt = Column(Float)
    vr_m_opt = Column(Float)
    nopt_mchs = Column(SmallInteger)
    ext_key = Column(Integer)
    scan_key = Column(Integer)
    coadd_key = Column(Integer)
    coadd = Column(SmallInteger)
    designation = Column(Text, unique=True)


class TwoMassXSC(Base):
    __tablename__ = 'twomass_xsc'

    jdate = Column(Float(53), index=True)
    designation = Column(CHAR(17), primary_key=True)
    ra = Column(Float(53))
    decl = Column(Float(53))
    sup_ra = Column(Float(53))
    sup_dec = Column(Float(53))
    glon = Column(Float)
    glat = Column(Float)
    density = Column(Float)
    r_k20fe = Column(Float)
    j_m_k20fe = Column(Float)
    j_msig_k20fe = Column(Float)
    j_flg_k20fe = Column(SmallInteger)
    h_m_k20fe = Column(Float)
    h_msig_k20fe = Column(Float)
    h_flg_k20fe = Column(SmallInteger)
    k_m_k20fe = Column(Float)
    k_msig_k20fe = Column(Float)
    k_flg_k20fe = Column(SmallInteger)
    r_3sig = Column(Float)
    j_ba = Column(Float)
    j_phi = Column(SmallInteger)
    h_ba = Column(Float)
    h_phi = Column(SmallInteger)
    k_ba = Column(Float)
    k_phi = Column(SmallInteger)
    sup_r_3sig = Column(Float)
    sup_ba = Column(Float)
    sup_phi = Column(SmallInteger)
    r_fe = Column(Float)
    j_m_fe = Column(Float)
    j_msig_fe = Column(Float)
    j_flg_fe = Column(SmallInteger)
    h_m_fe = Column(Float)
    h_msig_fe = Column(Float)
    h_flg_fe = Column(SmallInteger)
    k_m_fe = Column(Float)
    k_msig_fe = Column(Float)
    k_flg_fe = Column(SmallInteger)
    r_ext = Column(Float)
    j_m_ext = Column(Float)
    j_msig_ext = Column(Float)
    j_pchi = Column(Float)
    h_m_ext = Column(Float)
    h_msig_ext = Column(Float)
    h_pchi = Column(Float)
    k_m_ext = Column(Float)
    k_msig_ext = Column(Float)
    k_pchi = Column(Float)
    j_r_eff = Column(Float)
    j_mnsurfb_eff = Column(Float)
    h_r_eff = Column(Float)
    h_mnsurfb_eff = Column(Float)
    k_r_eff = Column(Float)
    k_mnsurfb_eff = Column(Float)
    j_con_indx = Column(Float)
    h_con_indx = Column(Float)
    k_con_indx = Column(Float)
    j_peak = Column(Float)
    h_peak = Column(Float)
    k_peak = Column(Float)
    j_5surf = Column(Float)
    h_5surf = Column(Float)
    k_5surf = Column(Float)
    e_score = Column(Float)
    g_score = Column(Float)
    vc = Column(SmallInteger)
    cc_flg = Column(CHAR(1))
    im_nx = Column(SmallInteger)
    r_k20fc = Column(Float)
    j_m_k20fc = Column(Float)
    j_msig_k20fc = Column(Float)
    j_flg_k20fc = Column(SmallInteger)
    h_m_k20fc = Column(Float)
    h_msig_k20fc = Column(Float)
    h_flg_k20fc = Column(SmallInteger)
    k_m_k20fc = Column(Float)
    k_msig_k20fc = Column(Float)
    k_flg_k20fc = Column(SmallInteger)
    j_r_e = Column(Float)
    j_m_e = Column(Float)
    j_msig_e = Column(Float)
    j_flg_e = Column(SmallInteger)
    h_r_e = Column(Float)
    h_m_e = Column(Float)
    h_msig_e = Column(Float)
    h_flg_e = Column(SmallInteger)
    k_r_e = Column(Float)
    k_m_e = Column(Float)
    k_msig_e = Column(Float)
    k_flg_e = Column(SmallInteger)
    j_r_c = Column(Float)
    j_m_c = Column(Float)
    j_msig_c = Column(Float)
    j_flg_c = Column(SmallInteger)
    h_r_c = Column(Float)
    h_m_c = Column(Float)
    h_msig_c = Column(Float)
    h_flg_c = Column(SmallInteger)
    k_r_c = Column(Float)
    k_m_c = Column(Float)
    k_msig_c = Column(Float)
    k_flg_c = Column(SmallInteger)
    r_fc = Column(Float)
    j_m_fc = Column(Float)
    j_msig_fc = Column(Float)
    j_flg_fc = Column(SmallInteger)
    h_m_fc = Column(Float)
    h_msig_fc = Column(Float)
    h_flg_fc = Column(SmallInteger)
    k_m_fc = Column(Float)
    k_msig_fc = Column(Float)
    k_flg_fc = Column(SmallInteger)
    j_r_i20e = Column(Float)
    j_m_i20e = Column(Float)
    j_msig_i20e = Column(Float)
    j_flg_i20e = Column(SmallInteger)
    h_r_i20e = Column(Float)
    h_m_i20e = Column(Float)
    h_msig_i20e = Column(Float)
    h_flg_i20e = Column(SmallInteger)
    k_r_i20e = Column(Float)
    k_m_i20e = Column(Float)
    k_msig_i20e = Column(Float)
    k_flg_i20e = Column(SmallInteger)
    j_r_i20c = Column(Float)
    j_m_i20c = Column(Float)
    j_msig_i20c = Column(Float)
    j_flg_i20c = Column(SmallInteger)
    h_r_i20c = Column(Float)
    h_m_i20c = Column(Float)
    h_msig_i20c = Column(Float)
    h_flg_i20c = Column(SmallInteger)
    k_r_i20c = Column(Float)
    k_m_i20c = Column(Float)
    k_msig_i20c = Column(Float)
    k_flg_i20c = Column(SmallInteger)
    j_r_i21e = Column(Float)
    j_m_i21e = Column(Float)
    j_msig_i21e = Column(Float)
    j_flg_i21e = Column(SmallInteger)
    h_r_i21e = Column(Float)
    h_m_i21e = Column(Float)
    h_msig_i21e = Column(Float)
    h_flg_i21e = Column(SmallInteger)
    k_r_i21e = Column(Float)
    k_m_i21e = Column(Float)
    k_msig_i21e = Column(Float)
    k_flg_i21e = Column(SmallInteger)
    r_j21fe = Column(Float)
    j_m_j21fe = Column(Float)
    j_msig_j21fe = Column(Float)
    j_flg_j21fe = Column(SmallInteger)
    h_m_j21fe = Column(Float)
    h_msig_j21fe = Column(Float)
    h_flg_j21fe = Column(SmallInteger)
    k_m_j21fe = Column(Float)
    k_msig_j21fe = Column(Float)
    k_flg_j21fe = Column(SmallInteger)
    j_r_i21c = Column(Float)
    j_m_i21c = Column(Float)
    j_msig_i21c = Column(Float)
    j_flg_i21c = Column(SmallInteger)
    h_r_i21c = Column(Float)
    h_m_i21c = Column(Float)
    h_msig_i21c = Column(Float)
    h_flg_i21c = Column(SmallInteger)
    k_r_i21c = Column(Float)
    k_m_i21c = Column(Float)
    k_msig_i21c = Column(Float)
    k_flg_i21c = Column(SmallInteger)
    r_j21fc = Column(Float)
    j_m_j21fc = Column(Float)
    j_msig_j21fc = Column(Float)
    j_flg_j21fc = Column(SmallInteger)
    h_m_j21fc = Column(Float)
    h_msig_j21fc = Column(Float)
    h_flg_j21fc = Column(SmallInteger)
    k_m_j21fc = Column(Float)
    k_msig_j21fc = Column(Float)
    k_flg_j21fc = Column(SmallInteger)
    j_m_5 = Column(Float)
    j_msig_5 = Column(Float)
    j_flg_5 = Column(SmallInteger)
    h_m_5 = Column(Float)
    h_msig_5 = Column(Float)
    h_flg_5 = Column(SmallInteger)
    k_m_5 = Column(Float)
    k_msig_5 = Column(Float)
    k_flg_5 = Column(SmallInteger)
    j_m_7 = Column(Float)
    j_msig_7 = Column(Float)
    j_flg_7 = Column(SmallInteger)
    h_m_7 = Column(Float)
    h_msig_7 = Column(Float)
    h_flg_7 = Column(SmallInteger)
    k_m_7 = Column(Float)
    k_msig_7 = Column(Float)
    k_flg_7 = Column(SmallInteger)
    j_m_10 = Column(Float)
    j_msig_10 = Column(Float)
    j_flg_10 = Column(SmallInteger)
    h_m_10 = Column(Float)
    h_msig_10 = Column(Float)
    h_flg_10 = Column(SmallInteger)
    k_m_10 = Column(Float)
    k_msig_10 = Column(Float)
    k_flg_10 = Column(SmallInteger)
    j_m_15 = Column(Float)
    j_msig_15 = Column(Float)
    j_flg_15 = Column(SmallInteger)
    h_m_15 = Column(Float)
    h_msig_15 = Column(Float)
    h_flg_15 = Column(SmallInteger)
    k_m_15 = Column(Float)
    k_msig_15 = Column(Float)
    k_flg_15 = Column(SmallInteger)
    j_m_20 = Column(Float)
    j_msig_20 = Column(Float)
    j_flg_20 = Column(SmallInteger)
    h_m_20 = Column(Float)
    h_msig_20 = Column(Float)
    h_flg_20 = Column(SmallInteger)
    k_m_20 = Column(Float)
    k_msig_20 = Column(Float)
    k_flg_20 = Column(SmallInteger)
    j_m_25 = Column(Float)
    j_msig_25 = Column(Float)
    j_flg_25 = Column(SmallInteger)
    h_m_25 = Column(Float)
    h_msig_25 = Column(Float)
    h_flg_25 = Column(SmallInteger)
    k_m_25 = Column(Float)
    k_msig_25 = Column(Float)
    k_flg_25 = Column(SmallInteger)
    j_m_30 = Column(Float)
    j_msig_30 = Column(Float)
    j_flg_30 = Column(SmallInteger)
    h_m_30 = Column(Float)
    h_msig_30 = Column(Float)
    h_flg_30 = Column(SmallInteger)
    k_m_30 = Column(Float)
    k_msig_30 = Column(Float)
    k_flg_30 = Column(SmallInteger)
    j_m_40 = Column(Float)
    j_msig_40 = Column(Float)
    j_flg_40 = Column(SmallInteger)
    h_m_40 = Column(Float)
    h_msig_40 = Column(Float)
    h_flg_40 = Column(SmallInteger)
    k_m_40 = Column(Float)
    k_msig_40 = Column(Float)
    k_flg_40 = Column(SmallInteger)
    j_m_50 = Column(Float)
    j_msig_50 = Column(Float)
    j_flg_50 = Column(SmallInteger)
    h_m_50 = Column(Float)
    h_msig_50 = Column(Float)
    h_flg_50 = Column(SmallInteger)
    k_m_50 = Column(Float)
    k_msig_50 = Column(Float)
    k_flg_50 = Column(SmallInteger)
    j_m_60 = Column(Float)
    j_msig_60 = Column(Float)
    j_flg_60 = Column(SmallInteger)
    h_m_60 = Column(Float)
    h_msig_60 = Column(Float)
    h_flg_60 = Column(SmallInteger)
    k_m_60 = Column(Float)
    k_msig_60 = Column(Float)
    k_flg_60 = Column(SmallInteger)
    j_m_70 = Column(Float)
    j_msig_70 = Column(Float)
    j_flg_70 = Column(SmallInteger)
    h_m_70 = Column(Float)
    h_msig_70 = Column(Float)
    h_flg_70 = Column(SmallInteger)
    k_m_70 = Column(Float)
    k_msig_70 = Column(Float)
    k_flg_70 = Column(SmallInteger)
    j_m_sys = Column(Float)
    j_msig_sys = Column(Float)
    h_m_sys = Column(Float)
    h_msig_sys = Column(Float)
    k_m_sys = Column(Float)
    k_msig_sys = Column(Float)
    sys_flg = Column(SmallInteger)
    contam_flg = Column(SmallInteger)
    j_5sig_ba = Column(Float)
    j_5sig_phi = Column(SmallInteger)
    h_5sig_ba = Column(Float)
    h_5sig_phi = Column(SmallInteger)
    k_5sig_ba = Column(Float)
    k_5sig_phi = Column(SmallInteger)
    j_d_area = Column(SmallInteger)
    j_perc_darea = Column(SmallInteger)
    h_d_area = Column(SmallInteger)
    h_perc_darea = Column(SmallInteger)
    k_d_area = Column(SmallInteger)
    k_perc_darea = Column(SmallInteger)
    j_bisym_rat = Column(Float)
    j_bisym_chi = Column(Float)
    h_bisym_rat = Column(Float)
    h_bisym_chi = Column(Float)
    k_bisym_rat = Column(Float)
    k_bisym_chi = Column(Float)
    j_sh0 = Column(Float)
    j_sig_sh0 = Column(Float)
    h_sh0 = Column(Float)
    h_sig_sh0 = Column(Float)
    k_sh0 = Column(Float)
    k_sig_sh0 = Column(Float)
    j_sc_mxdn = Column(Float)
    j_sc_sh = Column(Float)
    j_sc_wsh = Column(Float)
    j_sc_r23 = Column(Float)
    j_sc_1mm = Column(Float)
    j_sc_2mm = Column(Float)
    j_sc_vint = Column(Float)
    j_sc_r1 = Column(Float)
    j_sc_msh = Column(Float)
    h_sc_mxdn = Column(Float)
    h_sc_sh = Column(Float)
    h_sc_wsh = Column(Float)
    h_sc_r23 = Column(Float)
    h_sc_1mm = Column(Float)
    h_sc_2mm = Column(Float)
    h_sc_vint = Column(Float)
    h_sc_r1 = Column(Float)
    h_sc_msh = Column(Float)
    k_sc_mxdn = Column(Float)
    k_sc_sh = Column(Float)
    k_sc_wsh = Column(Float)
    k_sc_r23 = Column(Float)
    k_sc_1mm = Column(Float)
    k_sc_2mm = Column(Float)
    k_sc_vint = Column(Float)
    k_sc_r1 = Column(Float)
    k_sc_msh = Column(Float)
    j_chif_ellf = Column(Float)
    k_chif_ellf = Column(Float)
    ellfit_flg = Column(SmallInteger)
    sup_chif_ellf = Column(Float)
    n_blank = Column(SmallInteger)
    n_sub = Column(SmallInteger)
    bl_sub_flg = Column(SmallInteger)
    id_flg = Column(SmallInteger)
    id_cat = Column(CHAR(20))
    fg_flg = Column(CHAR(6))
    blk_fac = Column(SmallInteger)
    dup_src = Column(SmallInteger)
    use_src = Column(SmallInteger)
    prox = Column(Float)
    pxpa = Column(SmallInteger)
    pxcntr = Column(Integer)
    dist_edge_ns = Column(Integer)
    dist_edge_ew = Column(SmallInteger)
    dist_edge_flg = Column(CHAR(2))
    pts_key = Column(Integer, index=True)
    mp_key = Column(Integer)
    night_key = Column(SmallInteger)
    scan_key = Column(Integer)
    coadd_key = Column(Integer)
    hemis = Column(CHAR(1))
    date = Column(Date)
    scan = Column(SmallInteger)
    coadd = Column(SmallInteger)
    id = Column(Integer)
    x_coadd = Column(Float)
    y_coadd = Column(Float)
    j_subst2 = Column(Float)
    h_subst2 = Column(Float)
    k_subst2 = Column(Float)
    j_back = Column(Float)
    h_back = Column(Float)
    k_back = Column(Float)
    j_resid_ann = Column(Float)
    h_resid_ann = Column(Float)
    k_resid_ann = Column(Float)
    j_bndg_per = Column(Integer)
    j_bndg_amp = Column(Float)
    h_bndg_per = Column(Integer)
    h_bndg_amp = Column(Float)
    k_bndg_per = Column(Integer)
    k_bndg_amp = Column(Float)
    j_seetrack = Column(Float)
    h_seetrack = Column(Float)
    k_seetrack = Column(Float)
    ext_key = Column(Integer)


class Twoqz_sixqz(Base):
    __tablename__ = 'twoqz_sixqz'

    name = Column(CHAR(16), index=True)
    ra_j2000 = Column(CHAR(11))
    dec_j2000 = Column(CHAR(11))
    catalogue_number = Column(BigInteger)
    catalogue_name = Column(CHAR(10))
    sector = Column(CHAR(25))
    ra_b1950 = Column(CHAR(11))
    dec_b1950 = Column(CHAR(11))
    ukst_field = Column(Integer)
    xapm = Column(Float)
    yapm = Column(Float)
    ra_rad = Column(Float(53))
    dec_rad = Column(Float(53))
    bj = Column(Float, index=True)
    u_bj = Column(Float, index=True)
    bj_r = Column(Float, index=True)
    nobs = Column(Integer)
    z1 = Column(Float, index=True)
    q1 = Column(Integer, index=True)
    id1 = Column(CHAR(10), index=True)
    date1 = Column(CHAR(8))
    fld1 = Column(Integer)
    fibre1 = Column(Integer)
    s_n1 = Column(Float)
    z2 = Column(Float, index=True)
    q2 = Column(Integer, index=True)
    id2 = Column(CHAR(10), index=True)
    date2 = Column(CHAR(8))
    fld2 = Column(Integer)
    fibre2 = Column(Integer)
    s_n2 = Column(Float)
    zprev = Column(Float)
    radio = Column(Float)
    x_ray = Column(Float)
    dust = Column(Float)
    comments1 = Column(CHAR(20))
    comments2 = Column(CHAR(20))
    ra_degree = Column(Float(53))
    dec_degree = Column(Float(53))
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".twoqz_sixqz_pkey_seq'::regclass)"))


class Tycho2(Base):
    __tablename__ = 'tycho2'

    tyc1 = Column(Integer)
    tyc2 = Column(Integer)
    tyc3 = Column(Integer)
    pflag = Column(String(1))
    ramdeg = Column(Float(53))
    demdeg = Column(Float(53))
    pmra = Column(Float(53))
    pmde = Column(Float(53))
    e_ramdeg = Column(Integer)
    e_demdeg = Column(Integer)
    e_pmra = Column(Float(53))
    e_pmde = Column(Float(53))
    epram = Column(Float(53))
    epdem = Column(Float(53))
    num = Column(Integer)
    q_ramdeg = Column(Float(53))
    q_demdeg = Column(Float(53))
    q_pmra = Column(Float(53))
    q_pmde = Column(Float(53))
    btmag = Column(Float, index=True)
    e_btmag = Column(Float)
    vtmag = Column(Float, index=True)
    e_vtmag = Column(Float)
    prox = Column(Integer)
    tyc = Column(String(1))
    hip = Column(BigInteger)
    ccdm = Column(String(3))
    radeg = Column(Float(53))
    dedeg = Column(Float(53))
    epra_1990 = Column(Float(53))
    epde_1990 = Column(Float(53))
    e_radeg = Column(Float(53))
    e_dedeg = Column(Float(53))
    posflg = Column(String(1))
    corr = Column(Float)
    flag = Column(String(1))
    mflag = Column(String(1))
    designation = Column(Text, primary_key=True)
    tycid = Column(Integer, nullable=False, unique=True, server_default=text("nextval('\"catalogdb\".tycho2_tycid_seq'::regclass)"))
    designation2 = Column(Text, unique=True)


class unWISE(Base):
    __tablename__ = 'unwise'
    __table_args__ = {'schema': 'catalogdb', 'comment': 'unwise_release'}

    x_w1 = Column(Float(53))
    x_w2 = Column(Float(53))
    y_w1 = Column(Float(53))
    y_w2 = Column(Float(53))
    flux_w1 = Column(Float)
    flux_w2 = Column(Float)
    dx_w1 = Column(Float)
    dx_w2 = Column(Float)
    dy_w1 = Column(Float)
    dy_w2 = Column(Float)
    dflux_w1 = Column(Float)
    dflux_w2 = Column(Float)
    qf_w1 = Column(Float)
    qf_w2 = Column(Float)
    rchi2_w1 = Column(Float)
    rchi2_w2 = Column(Float)
    fracflux_w1 = Column(Float)
    fracflux_w2 = Column(Float)
    fluxlbs_w1 = Column(Float)
    fluxlbs_w2 = Column(Float)
    dfluxlbs_w1 = Column(Float)
    dfluxlbs_w2 = Column(Float)
    fwhm_w1 = Column(Float)
    fwhm_w2 = Column(Float)
    spread_model_w1 = Column(Float)
    spread_model_w2 = Column(Float)
    dspread_model_w1 = Column(Float)
    dspread_model_w2 = Column(Float)
    sky_w1 = Column(Float)
    sky_w2 = Column(Float)
    ra12_w1 = Column(Float(53))
    ra12_w2 = Column(Float(53))
    dec12_w1 = Column(Float(53))
    dec12_w2 = Column(Float(53))
    coadd_id = Column(Text)
    unwise_detid_w1 = Column(Text)
    unwise_detid_w2 = Column(Text)
    nm_w1 = Column(Integer)
    nm_w2 = Column(Integer)
    primary12_w1 = Column(Integer)
    primary12_w2 = Column(Integer)
    flags_unwise_w1 = Column(Integer)
    flags_unwise_w2 = Column(Integer)
    flags_info_w1 = Column(Integer)
    flags_info_w2 = Column(Integer)
    ra = Column(Float(53))
    dec = Column(Float(53))
    primary_status = Column(Integer)
    unwise_objid = Column(Text, primary_key=True)


class UVOT_SSC_1(Base):
    __tablename__ = 'uvotssc1'

    name = Column(String(17))
    oseq = Column(BigInteger)
    obsid = Column(BigInteger)
    nf = Column(BigInteger)
    srcid = Column(BigInteger)
    radeg = Column(Float(53))
    dedeg = Column(Float(53))
    e_radeg = Column(Float(53))
    e_dedeg = Column(Float(53))
    ruvw2 = Column(Float)
    ruvm2 = Column(Float)
    ruvw1 = Column(Float)
    ru = Column(Float)
    rb = Column(Float)
    rv = Column(Float)
    nd = Column(BigInteger)
    suvw2 = Column(Float)
    suvm2 = Column(Float)
    suvw1 = Column(Float)
    su = Column(Float)
    sb = Column(Float)
    sv = Column(Float)
    uvw2 = Column(Float(53))
    uvm2 = Column(Float(53))
    uvw1 = Column(Float(53))
    umag = Column(Float(53))
    bmag = Column(Float(53))
    vmag = Column(Float(53))
    uvw2_ab = Column(Float(53))
    uvm2_ab = Column(Float(53))
    uvw1_ab = Column(Float(53))
    u_ab = Column(Float(53))
    b_ab = Column(Float(53))
    v_ab = Column(Float(53))
    e_uvw2 = Column(Float(53))
    e_uvm2 = Column(Float(53))
    e_uvw1 = Column(Float(53))
    e_umag = Column(Float(53))
    e_bmag = Column(Float(53))
    e_vmag = Column(Float(53))
    f_uvw2 = Column(Float(53))
    f_uvm2 = Column(Float(53))
    f_uvw1 = Column(Float(53))
    f_u = Column(Float(53))
    f_b = Column(Float(53))
    f_v = Column(Float(53))
    e_f_uvw2 = Column(Float(53))
    e_f_uvm2 = Column(Float(53))
    e_f_uvw1 = Column(Float(53))
    e_f_u = Column(Float(53))
    e_f_b = Column(Float(53))
    e_f_v = Column(Float(53))
    auvw2 = Column(Float(53))
    auvm2 = Column(Float(53))
    auvw1 = Column(Float(53))
    au = Column(Float(53))
    ab = Column(Float(53))
    av = Column(Float(53))
    buvw2 = Column(Float(53))
    buvm2 = Column(Float(53))
    buvw1 = Column(Float(53))
    bu = Column(Float(53))
    bb = Column(Float(53))
    bv = Column(Float(53))
    pauvw2 = Column(Float)
    pauvm2 = Column(Float)
    pauvw1 = Column(Float)
    pau = Column(Float)
    pab = Column(Float)
    pav = Column(Float)
    xuvw2 = Column(Integer)
    xuvm2 = Column(Integer)
    xuvw1 = Column(Integer)
    xu = Column(Integer)
    xb = Column(Integer)
    xv = Column(Integer)
    fuvw2 = Column(Integer)
    fuvm2 = Column(Integer)
    fuvw1 = Column(Integer)
    fu = Column(Integer)
    fb = Column(Integer)
    fv = Column(Integer)
    id = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".uvotssc1_id_seq'::regclass)"))


class Version(Base):
    __tablename__ = 'version'

    id = Column(Integer, primary_key=True, server_default=text("nextval('\"catalogdb\".version_id_seq'::regclass)"))
    plan = Column(Text, nullable=False, unique=True)
    tag = Column(Text, nullable=False)


class Watchdog(Base):
    __tablename__ = 'watchdog'

    name = Column(Text)
    rastr = Column(Text)
    decstr = Column(Text)
    radeg = Column(Float(53))
    decdeg = Column(Float(53))
    ngaia = Column(Float)
    gaia_name = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_gmag = Column(Float)
    gaia_dist = Column(Float)
    gaia_source_id = Column(BigInteger, primary_key=True)


class XMM_OM_SUSS_4_1(Base):
    __tablename__ = 'xmm_om_suss_4_1'

    iauname = Column(String(22))
    n_summary = Column(Integer)
    obsid = Column(String(10))
    srcnum = Column(Integer)
    uvw2_srcdist = Column(Float)
    uvm2_srcdist = Column(Float)
    uvw1_srcdist = Column(Float)
    u_srcdist = Column(Float)
    b_srcdist = Column(Float)
    v_srcdist = Column(Float)
    ra = Column(Float(53))
    dec = Column(Float(53))
    ra_hms = Column(String(13))
    dec_dms = Column(String(14))
    poserr = Column(Float)
    lii = Column(Float(53))
    bii = Column(Float(53))
    n_obsid = Column(Integer)
    uvw2_signif = Column(Float)
    uvm2_signif = Column(Float)
    uvw1_signif = Column(Float)
    u_signif = Column(Float)
    b_signif = Column(Float)
    v_signif = Column(Float)
    uvw2_rate = Column(Float)
    uvw2_rate_err = Column(Float)
    uvm2_rate = Column(Float)
    uvm2_rate_err = Column(Float)
    uvw1_rate = Column(Float)
    uvw1_rate_err = Column(Float)
    u_rate = Column(Float)
    u_rate_err = Column(Float)
    b_rate = Column(Float)
    b_rate_err = Column(Float)
    v_rate = Column(Float)
    v_rate_err = Column(Float)
    uvw2_ab_flux = Column(Float)
    uvw2_ab_flux_err = Column(Float)
    uvm2_ab_flux = Column(Float)
    uvm2_ab_flux_err = Column(Float)
    uvw1_ab_flux = Column(Float)
    uvw1_ab_flux_err = Column(Float)
    u_ab_flux = Column(Float)
    u_ab_flux_err = Column(Float)
    b_ab_flux = Column(Float)
    b_ab_flux_err = Column(Float)
    v_ab_flux = Column(Float)
    v_ab_flux_err = Column(Float)
    uvw2_ab_mag = Column(Float)
    uvw2_ab_mag_err = Column(Float)
    uvm2_ab_mag = Column(Float)
    uvm2_ab_mag_err = Column(Float)
    uvw1_ab_mag = Column(Float)
    uvw1_ab_mag_err = Column(Float)
    u_ab_mag = Column(Float)
    u_ab_mag_err = Column(Float)
    b_ab_mag = Column(Float)
    b_ab_mag_err = Column(Float)
    v_ab_mag = Column(Float)
    v_ab_mag_err = Column(Float)
    uvw2_vega_mag = Column(Float)
    uvw2_vega_mag_err = Column(Float)
    uvm2_vega_mag = Column(Float)
    uvm2_vega_mag_err = Column(Float)
    uvw1_vega_mag = Column(Float)
    uvw1_vega_mag_err = Column(Float)
    u_vega_mag = Column(Float)
    u_vega_mag_err = Column(Float)
    b_vega_mag = Column(Float)
    b_vega_mag_err = Column(Float)
    v_vega_mag = Column(Float)
    v_vega_mag_err = Column(Float)
    uvw2_major_axis = Column(Float)
    uvm2_major_axis = Column(Float)
    uvw1_major_axis = Column(Float)
    u_major_axis = Column(Float)
    b_major_axis = Column(Float)
    v_major_axis = Column(Float)
    uvw2_minor_axis = Column(Float)
    uvm2_minor_axis = Column(Float)
    uvw1_minor_axis = Column(Float)
    u_minor_axis = Column(Float)
    b_minor_axis = Column(Float)
    v_minor_axis = Column(Float)
    uvw2_posang = Column(Float)
    uvm2_posang = Column(Float)
    uvw1_posang = Column(Float)
    u_posang = Column(Float)
    b_posang = Column(Float)
    v_posang = Column(Float)
    uvw2_quality_flag = Column(SmallInteger)
    uvm2_quality_flag = Column(SmallInteger)
    uvw1_quality_flag = Column(SmallInteger)
    u_quality_flag = Column(SmallInteger)
    b_quality_flag = Column(SmallInteger)
    v_quality_flag = Column(SmallInteger)
    uvw2_quality_flag_st = Column(String(12))
    uvm2_quality_flag_st = Column(String(12))
    uvw1_quality_flag_st = Column(String(12))
    u_quality_flag_st = Column(String(12))
    b_quality_flag_st = Column(String(12))
    v_quality_flag_st = Column(String(12))
    uvw2_extended_flag = Column(BigInteger)
    uvm2_extended_flag = Column(BigInteger)
    uvw1_extended_flag = Column(BigInteger)
    u_extended_flag = Column(BigInteger)
    b_extended_flag = Column(BigInteger)
    v_extended_flag = Column(BigInteger)
    uvw2_sky_image = Column(String(4))
    uvm2_sky_image = Column(String(4))
    uvw1_sky_image = Column(String(4))
    u_sky_image = Column(String(4))
    b_sky_image = Column(String(4))
    v_sky_image = Column(String(4))
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".xmm_om_suss_4_1_pk_seq'::regclass)"))


class XMM_OM_SUSS_5_0(Base):
    __tablename__ = 'xmm_om_suss_5_0'

    iauname = Column(Text, index=True)
    n_summary = Column(BigInteger, index=True)
    obsid = Column(Text, index=True)
    srcnum = Column(BigInteger, index=True)
    uvw2_srcdist = Column(Float)
    uvm2_srcdist = Column(Float)
    uvw1_srcdist = Column(Float)
    u_srcdist = Column(Float)
    b_srcdist = Column(Float)
    v_srcdist = Column(Float)
    ra = Column(Float(53))
    dec = Column(Float(53))
    ra_hms = Column(Text)
    dec_dms = Column(Text)
    poserr = Column(Float)
    lii = Column(Float(53))
    bii = Column(Float(53))
    n_obsid = Column(Integer)
    uvw2_signif = Column(Float, index=True)
    uvm2_signif = Column(Float, index=True)
    uvw1_signif = Column(Float, index=True)
    u_signif = Column(Float)
    b_signif = Column(Float)
    v_signif = Column(Float)
    uvw2_rate = Column(Float)
    uvw2_rate_err = Column(Float)
    uvm2_rate = Column(Float)
    uvm2_rate_err = Column(Float)
    uvw1_rate = Column(Float)
    uvw1_rate_err = Column(Float)
    u_rate = Column(Float)
    u_rate_err = Column(Float)
    b_rate = Column(Float)
    b_rate_err = Column(Float)
    v_rate = Column(Float)
    v_rate_err = Column(Float)
    uvw2_ab_flux = Column(Float)
    uvw2_ab_flux_err = Column(Float)
    uvm2_ab_flux = Column(Float)
    uvm2_ab_flux_err = Column(Float)
    uvw1_ab_flux = Column(Float)
    uvw1_ab_flux_err = Column(Float)
    u_ab_flux = Column(Float)
    u_ab_flux_err = Column(Float)
    b_ab_flux = Column(Float)
    b_ab_flux_err = Column(Float)
    v_ab_flux = Column(Float)
    v_ab_flux_err = Column(Float)
    uvw2_ab_mag = Column(Float, index=True)
    uvw2_ab_mag_err = Column(Float)
    uvm2_ab_mag = Column(Float, index=True)
    uvm2_ab_mag_err = Column(Float)
    uvw1_ab_mag = Column(Float, index=True)
    uvw1_ab_mag_err = Column(Float)
    u_ab_mag = Column(Float)
    u_ab_mag_err = Column(Float)
    b_ab_mag = Column(Float)
    b_ab_mag_err = Column(Float)
    v_ab_mag = Column(Float)
    v_ab_mag_err = Column(Float)
    uvw2_vega_mag = Column(Float)
    uvw2_vega_mag_err = Column(Float)
    uvm2_vega_mag = Column(Float)
    uvm2_vega_mag_err = Column(Float)
    uvw1_vega_mag = Column(Float)
    uvw1_vega_mag_err = Column(Float)
    u_vega_mag = Column(Float)
    u_vega_mag_err = Column(Float)
    b_vega_mag = Column(Float)
    b_vega_mag_err = Column(Float)
    v_vega_mag = Column(Float)
    v_vega_mag_err = Column(Float)
    uvw2_major_axis = Column(Float)
    uvm2_major_axis = Column(Float)
    uvw1_major_axis = Column(Float)
    u_major_axis = Column(Float)
    b_major_axis = Column(Float)
    v_major_axis = Column(Float)
    uvw2_minor_axis = Column(Float)
    uvm2_minor_axis = Column(Float)
    uvw1_minor_axis = Column(Float)
    u_minor_axis = Column(Float)
    b_minor_axis = Column(Float)
    v_minor_axis = Column(Float)
    uvw2_posang = Column(Float)
    uvm2_posang = Column(Float)
    uvw1_posang = Column(Float)
    u_posang = Column(Float)
    b_posang = Column(Float)
    v_posang = Column(Float)
    uvw2_quality_flag = Column(Integer)
    uvm2_quality_flag = Column(Integer)
    uvw1_quality_flag = Column(Integer)
    u_quality_flag = Column(Integer)
    b_quality_flag = Column(Integer)
    v_quality_flag = Column(Integer)
    uvw2_quality_flag_st = Column(Text, index=True)
    uvm2_quality_flag_st = Column(Text, index=True)
    uvw1_quality_flag_st = Column(Text, index=True)
    u_quality_flag_st = Column(Text)
    b_quality_flag_st = Column(Text)
    v_quality_flag_st = Column(Text)
    uvw2_extended_flag = Column(SmallInteger)
    uvm2_extended_flag = Column(SmallInteger)
    uvw1_extended_flag = Column(SmallInteger)
    u_extended_flag = Column(SmallInteger)
    b_extended_flag = Column(SmallInteger)
    v_extended_flag = Column(SmallInteger)
    uvw2_sky_image = Column(Text)
    uvm2_sky_image = Column(Text)
    uvw1_sky_image = Column(Text)
    u_sky_image = Column(Text)
    b_sky_image = Column(Text)
    v_sky_image = Column(Text)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".xmm_om_suss_5_0_pk_seq'::regclass)"))


class XRay_Pulsars(Base):
    __tablename__ = 'xray_pulsars'

    name = Column(Text)
    rastr = Column(Text)
    decstr = Column(Text)
    radeg = Column(Float(53))
    decdeg = Column(Float(53))
    ngaia = Column(Float)
    gaia_name = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_gmag = Column(Float)
    gaia_dist = Column(Float)
    gaia_source_id = Column(BigInteger, primary_key=True)


class Zari18pms(Base):
    __tablename__ = 'zari18pms'

    source = Column(BigInteger, primary_key=True, index=True)
    glon = Column(Float(53), index=True)
    glat = Column(Float(53), index=True)
    plx = Column(Float, index=True)
    e_plx = Column(Float, index=True)
    pmglon = Column(Float, index=True)
    e_pmglon = Column(Float, index=True)
    pmglat = Column(Float, index=True)
    e_pmglat = Column(Float, index=True)
    pmlbcorr = Column(Float, index=True)
    rv = Column(Float, index=True)
    e_rv = Column(Float, index=True)
    gmag = Column(Float, index=True)
    bpmag = Column(Float, index=True)
    rpmag = Column(Float, index=True)
    bp_over_rp = Column(Float, index=True)
    chi2al = Column(Float, index=True)
    ngal = Column(Integer, index=True)
    ag = Column(Float, index=True)
    bp_rp = Column(Float, index=True)
    uwe = Column(Float, index=True)


class Zari18ums(Base):
    __tablename__ = 'zari18ums'

    source = Column(BigInteger, primary_key=True, index=True)
    glon = Column(Float(53), index=True)
    glat = Column(Float(53), index=True)
    plx = Column(Float, index=True)
    e_plx = Column(Float, index=True)
    pmglon = Column(Float, index=True)
    e_pmglon = Column(Float, index=True)
    pmglat = Column(Float, index=True)
    e_pmglat = Column(Float, index=True)
    pmlbcorr = Column(Float, index=True)
    rv = Column(Float, index=True)
    e_rv = Column(Float, index=True)
    gmag = Column(Float, index=True)
    bpmag = Column(Float, index=True)
    rpmag = Column(Float, index=True)
    bp_over_rp = Column(Float, index=True)
    chi2al = Column(Float, index=True)
    ngal = Column(Integer, index=True)
    ag = Column(Float, index=True)
    bp_rp = Column(Float, index=True)


class AllstarDr17SynspecRev1(Base):
    __tablename__ = 'allstar_dr17_synspec_rev1'

    file = Column(Text)
    apogee_id = Column(Text, index=True)
    target_id = Column(Text)
    apstar_id = Column(Text, primary_key=True)
    aspcap_id = Column(Text, index=True)
    telescope = Column(Text)
    location_id = Column(Integer)
    field = Column(Text)
    alt_id = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    j = Column(Float)
    j_err = Column(Float)
    h = Column(Float)
    h_err = Column(Float)
    k = Column(Float)
    k_err = Column(Float)
    src_h = Column(Text)
    wash_m = Column(Float)
    wash_m_err = Column(Float)
    wash_t2 = Column(Float)
    wash_t2_err = Column(Float)
    ddo51 = Column(Float)
    ddo51_err = Column(Float)
    irac_3_6 = Column(Float)
    irac_3_6_err = Column(Float)
    irac_4_5 = Column(Float)
    irac_4_5_err = Column(Float)
    irac_5_8 = Column(Float)
    irac_5_8_err = Column(Float)
    irac_8_0 = Column(Float)
    irac_8_0_err = Column(Float)
    wise_4_5 = Column(Float)
    wise_4_5_err = Column(Float)
    targ_4_5 = Column(Float)
    targ_4_5_err = Column(Float)
    wash_ddo51_giant_flag = Column(Integer)
    wash_ddo51_star_flag = Column(Integer)
    targ_pmra = Column(Float)
    targ_pmdec = Column(Float)
    targ_pm_src = Column(Text)
    ak_targ = Column(Float)
    ak_targ_method = Column(Text)
    ak_wise = Column(Float)
    sfd_ebv = Column(Float)
    apogee_target1 = Column(Integer)
    apogee_target2 = Column(Integer)
    apogee2_target1 = Column(Integer)
    apogee2_target2 = Column(Integer)
    apogee2_target3 = Column(Integer)
    apogee2_target4 = Column(Integer)
    targflags = Column(Text)
    survey = Column(Text)
    programname = Column(Text)
    nvisits = Column(Integer)
    snr = Column(Float)
    snrev = Column(Float)
    starflag = Column(BigInteger)
    starflags = Column(Text)
    andflag = Column(BigInteger)
    andflags = Column(Text)
    vhelio_avg = Column(Float)
    vscatter = Column(Float)
    verr = Column(Float)
    rv_teff = Column(Float)
    rv_logg = Column(Float)
    rv_feh = Column(Float)
    rv_alpha = Column(Float)
    rv_carb = Column(Float)
    rv_chi2 = Column(Float)
    rv_ccfwhm = Column(Float)
    rv_autofwhm = Column(Float)
    rv_flag = Column(Integer)
    n_components = Column(Integer)
    meanfib = Column(Float)
    sigfib = Column(Float)
    min_h = Column(Float)
    max_h = Column(Float)
    min_jk = Column(Float)
    max_jk = Column(Float)
    gaiaedr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'))
    gaiaedr3_parallax = Column(Float)
    gaiaedr3_parallax_error = Column(Float)
    gaiaedr3_pmra = Column(Float)
    gaiaedr3_pmra_error = Column(Float)
    gaiaedr3_pmdec = Column(Float)
    gaiaedr3_pmdec_error = Column(Float)
    gaiaedr3_phot_g_mean_mag = Column(Float)
    gaiaedr3_phot_bp_mean_mag = Column(Float)
    gaiaedr3_phot_rp_mean_mag = Column(Float)
    gaiaedr3_dr2_radial_velocity = Column(Float)
    gaiaedr3_dr2_radial_velocity_error = Column(Float)
    gaiaedr3_r_med_geo = Column(Float)
    gaiaedr3_r_lo_geo = Column(Float)
    gaiaedr3_r_hi_geo = Column(Float)
    gaiaedr3_r_med_photogeo = Column(Float)
    gaiaedr3_r_lo_photogeo = Column(Float)
    gaiaedr3_r_hi_photogeo = Column(Float)
    aspcap_grid = Column(Text)
    fparam_grid = Column(ARRAY(Float()))
    chi2_grid = Column(ARRAY(Float()))
    fparam = Column(ARRAY(Float()))
    fparam_cov = Column(ARRAY(Float()))
    aspcap_chi2 = Column(Float)
    param = Column(ARRAY(Float()))
    param_cov = Column(ARRAY(Float()))
    paramflag = Column(ARRAY(BigInteger()))
    aspcapflag = Column(BigInteger)
    aspcapflags = Column(Text)
    frac_badpix = Column(Float)
    frac_lowsnr = Column(Float)
    frac_sigsky = Column(Float)
    felem = Column(ARRAY(Float()))
    felem_err = Column(ARRAY(Float(precision=53)))
    x_h = Column(ARRAY(Float()))
    x_h_err = Column(ARRAY(Float()))
    x_m = Column(ARRAY(Float()))
    x_m_err = Column(ARRAY(Float()))
    elem_chi2 = Column(ARRAY(Float()))
    elemfrac = Column(ARRAY(Float()))
    elemflag = Column(ARRAY(BigInteger()))
    extratarg = Column(Integer)
    memberflag = Column(BigInteger)
    member = Column(Text)
    x_h_spec = Column(ARRAY(Float()))
    x_m_spec = Column(ARRAY(Float()))
    teff = Column(Float)
    teff_err = Column(Float)
    logg = Column(Float)
    logg_err = Column(Float)
    m_h = Column(Float)
    m_h_err = Column(Float)
    alpha_m = Column(Float)
    alpha_m_err = Column(Float)
    vmicro = Column(Float)
    vmacro = Column(Float)
    vsini = Column(Float)
    teff_spec = Column(Float)
    logg_spec = Column(Float)
    c_fe = Column(Float)
    c_fe_spec = Column(Float)
    c_fe_err = Column(Float)
    c_fe_flag = Column(Integer)
    ci_fe = Column(Float)
    ci_fe_spec = Column(Float)
    ci_fe_err = Column(Float)
    ci_fe_flag = Column(Integer)
    n_fe = Column(Float)
    n_fe_spec = Column(Float)
    n_fe_err = Column(Float)
    n_fe_flag = Column(Integer)
    o_fe = Column(Float)
    o_fe_spec = Column(Float)
    o_fe_err = Column(Float)
    o_fe_flag = Column(Integer)
    na_fe = Column(Float)
    na_fe_spec = Column(Float)
    na_fe_err = Column(Float)
    na_fe_flag = Column(Integer)
    mg_fe = Column(Float)
    mg_fe_spec = Column(Float)
    mg_fe_err = Column(Float)
    mg_fe_flag = Column(Integer)
    al_fe = Column(Float)
    al_fe_spec = Column(Float)
    al_fe_err = Column(Float)
    al_fe_flag = Column(Integer)
    si_fe = Column(Float)
    si_fe_spec = Column(Float)
    si_fe_err = Column(Float)
    si_fe_flag = Column(Integer)
    p_fe = Column(Float)
    p_fe_spec = Column(Float)
    p_fe_err = Column(Float)
    p_fe_flag = Column(Integer)
    s_fe = Column(Float)
    s_fe_spec = Column(Float)
    s_fe_err = Column(Float)
    s_fe_flag = Column(Integer)
    k_fe = Column(Float)
    k_fe_spec = Column(Float)
    k_fe_err = Column(Float)
    k_fe_flag = Column(Integer)
    ca_fe = Column(Float)
    ca_fe_spec = Column(Float)
    ca_fe_err = Column(Float)
    ca_fe_flag = Column(Integer)
    ti_fe = Column(Float)
    ti_fe_spec = Column(Float)
    ti_fe_err = Column(Float)
    ti_fe_flag = Column(Integer)
    tiii_fe = Column(Float)
    tiii_fe_spec = Column(Float)
    tiii_fe_err = Column(Float)
    tiii_fe_flag = Column(Integer)
    v_fe = Column(Float)
    v_fe_spec = Column(Float)
    v_fe_err = Column(Float)
    v_fe_flag = Column(Integer)
    cr_fe = Column(Float)
    cr_fe_spec = Column(Float)
    cr_fe_err = Column(Float)
    cr_fe_flag = Column(Integer)
    mn_fe = Column(Float)
    mn_fe_spec = Column(Float)
    mn_fe_err = Column(Float)
    mn_fe_flag = Column(Integer)
    fe_h = Column(Float)
    fe_h_spec = Column(Float)
    fe_h_err = Column(Float)
    fe_h_flag = Column(Integer)
    co_fe = Column(Float)
    co_fe_spec = Column(Float)
    co_fe_err = Column(Float)
    co_fe_flag = Column(Integer)
    ni_fe = Column(Float)
    ni_fe_spec = Column(Float)
    ni_fe_err = Column(Float)
    ni_fe_flag = Column(Integer)
    cu_fe = Column(Float)
    cu_fe_spec = Column(Float)
    cu_fe_err = Column(Float)
    cu_fe_flag = Column(Integer)
    ce_fe = Column(Float)
    ce_fe_spec = Column(Float)
    ce_fe_err = Column(Float)
    ce_fe_flag = Column(Integer)
    yb_fe = Column(Float)
    yb_fe_spec = Column(Float)
    yb_fe_err = Column(Float)
    yb_fe_flag = Column(Integer)
    visit_pk = Column(ARRAY(Integer()))
    twomass_designation = Column(ForeignKey('catalogdb.twomass_psc.designation'))

    gaiaedr3_source = relationship('GaiaDr3Source')
    twomass_psc = relationship('TwomassPsc')


class AllWise(Base):
    __tablename__ = 'allwise'

    designation = Column(CHAR(20), unique=True)
    ra = Column(Numeric(10, 7))
    dec = Column(Numeric(9, 7))
    sigra = Column(Numeric(7, 4))
    sigdec = Column(Numeric(7, 4))
    sigradec = Column(Numeric(8, 4))
    glon = Column(Numeric(10, 7))
    glat = Column(Numeric(9, 7))
    elon = Column(Numeric(10, 7))
    elat = Column(Numeric(9, 7))
    wx = Column(Numeric(7, 3))
    wy = Column(Numeric(7, 3))
    cntr = Column(BigInteger, primary_key=True)
    source_id = Column(CHAR(28))
    coadd_id = Column(CHAR(20))
    src = Column(Integer)
    w1mpro = Column(Numeric(5, 3), index=True)
    w1sigmpro = Column(Numeric(4, 3), index=True)
    w1snr = Column(Numeric(7, 1))
    w1rchi2 = Column(Float)
    w2mpro = Column(Numeric(5, 3), index=True)
    w2sigmpro = Column(Numeric(4, 3), index=True)
    w2snr = Column(Numeric(7, 1))
    w2rchi2 = Column(Float)
    w3mpro = Column(Numeric(5, 3), index=True)
    w3sigmpro = Column(Numeric(4, 3), index=True)
    w3snr = Column(Numeric(7, 1))
    w3rchi2 = Column(Float)
    w4mpro = Column(Numeric(5, 3))
    w4sigmpro = Column(Numeric(4, 3))
    w4snr = Column(Numeric(7, 1))
    w4rchi2 = Column(Float)
    rchi2 = Column(Float)
    nb = Column(Integer)
    na = Column(Integer)
    w1sat = Column(Numeric(4, 3))
    w2sat = Column(Numeric(4, 3))
    w3sat = Column(Numeric(4, 3))
    w4sat = Column(Numeric(4, 3))
    satnum = Column(CHAR(4))
    ra_pm = Column(Numeric(10, 7))
    dec_pm = Column(Numeric(9, 7))
    sigra_pm = Column(Numeric(7, 4))
    sigdec_pm = Column(Numeric(7, 4))
    sigradec_pm = Column(Numeric(8, 4))
    pmra = Column(Integer)
    sigpmra = Column(Integer)
    pmdec = Column(Integer)
    sigpmdec = Column(Integer)
    w1rchi2_pm = Column(Float)
    w2rchi2_pm = Column(Float)
    w3rchi2_pm = Column(Float)
    w4rchi2_pm = Column(Float)
    rchi2_pm = Column(Float)
    pmcode = Column(CHAR(5))
    cc_flags = Column(CHAR(4))
    rel = Column(CHAR(1))
    ext_flg = Column(Integer)
    var_flg = Column(CHAR(4))
    ph_qual = Column(CHAR(4), index=True)
    det_bit = Column(Integer)
    moon_lev = Column(CHAR(4))
    w1nm = Column(Integer)
    w1m = Column(Integer)
    w2nm = Column(Integer)
    w2m = Column(Integer)
    w3nm = Column(Integer)
    w3m = Column(Integer)
    w4nm = Column(Integer)
    w4m = Column(Integer)
    w1cov = Column(Numeric(6, 3))
    w2cov = Column(Numeric(6, 3))
    w3cov = Column(Numeric(6, 3))
    w4cov = Column(Numeric(6, 3))
    w1cc_map = Column(Integer)
    w1cc_map_str = Column(CHAR(9))
    w2cc_map = Column(Integer)
    w2cc_map_str = Column(CHAR(9))
    w3cc_map = Column(Integer)
    w3cc_map_str = Column(CHAR(9))
    w4cc_map = Column(Integer)
    w4cc_map_str = Column(CHAR(9))
    best_use_cntr = Column(BigInteger)
    ngrp = Column(SmallInteger)
    w1flux = Column(Float)
    w1sigflux = Column(Float)
    w1sky = Column(Numeric(8, 3))
    w1sigsk = Column(Numeric(6, 3))
    w1conf = Column(Numeric(8, 3))
    w2flux = Column(Float)
    w2sigflux = Column(Float)
    w2sky = Column(Numeric(8, 3))
    w2sigsk = Column(Numeric(6, 3))
    w2conf = Column(Numeric(8, 3))
    w3flux = Column(Float)
    w3sigflux = Column(Float)
    w3sky = Column(Numeric(8, 3))
    w3sigsk = Column(Numeric(6, 3))
    w3conf = Column(Numeric(8, 3))
    w4flux = Column(Float)
    w4sigflux = Column(Float)
    w4sky = Column(Numeric(8, 3))
    w4sigsk = Column(Numeric(6, 3))
    w4conf = Column(Numeric(8, 3))
    w1mag = Column(Numeric(5, 3))
    w1sigm = Column(Numeric(4, 3))
    w1flg = Column(Integer)
    w1mcor = Column(Numeric(4, 3))
    w2mag = Column(Numeric(5, 3))
    w2sigm = Column(Numeric(4, 3))
    w2flg = Column(Integer)
    w2mcor = Column(Numeric(4, 3))
    w3mag = Column(Numeric(5, 3))
    w3sigm = Column(Numeric(4, 3))
    w3flg = Column(Integer)
    w3mcor = Column(Numeric(4, 3))
    w4mag = Column(Numeric(5, 3))
    w4sigm = Column(Numeric(4, 3))
    w4flg = Column(Integer)
    w4mcor = Column(Numeric(4, 3))
    w1mag_1 = Column(Numeric(5, 3))
    w1sigm_1 = Column(Numeric(4, 3))
    w1flg_1 = Column(Integer)
    w2mag_1 = Column(Numeric(5, 3))
    w2sigm_1 = Column(Numeric(4, 3))
    w2flg_1 = Column(Integer)
    w3mag_1 = Column(Numeric(5, 3))
    w3sigm_1 = Column(Numeric(4, 3))
    w3flg_1 = Column(Integer)
    w4mag_1 = Column(Numeric(5, 3))
    w4sigm_1 = Column(Numeric(4, 3))
    w4flg_1 = Column(Integer)
    w1mag_2 = Column(Numeric(5, 3))
    w1sigm_2 = Column(Numeric(4, 3))
    w1flg_2 = Column(Integer)
    w2mag_2 = Column(Numeric(5, 3))
    w2sigm_2 = Column(Numeric(4, 3))
    w2flg_2 = Column(Integer)
    w3mag_2 = Column(Numeric(5, 3))
    w3sigm_2 = Column(Numeric(4, 3))
    w3flg_2 = Column(Integer)
    w4mag_2 = Column(Numeric(5, 3))
    w4sigm_2 = Column(Numeric(4, 3))
    w4flg_2 = Column(Integer)
    w1mag_3 = Column(Numeric(5, 3))
    w1sigm_3 = Column(Numeric(4, 3))
    w1flg_3 = Column(Integer)
    w2mag_3 = Column(Numeric(5, 3))
    w2sigm_3 = Column(Numeric(4, 3))
    w2flg_3 = Column(Integer)
    w3mag_3 = Column(Numeric(5, 3))
    w3sigm_3 = Column(Numeric(4, 3))
    w3flg_3 = Column(Integer)
    w4mag_3 = Column(Numeric(5, 3))
    w4sigm_3 = Column(Numeric(4, 3))
    w4flg_3 = Column(Integer)
    w1mag_4 = Column(Numeric(5, 3))
    w1sigm_4 = Column(Numeric(4, 3))
    w1flg_4 = Column(Integer)
    w2mag_4 = Column(Numeric(5, 3))
    w2sigm_4 = Column(Numeric(4, 3))
    w2flg_4 = Column(Integer)
    w3mag_4 = Column(Numeric(5, 3))
    w3sigm_4 = Column(Numeric(4, 3))
    w3flg_4 = Column(Integer)
    w4mag_4 = Column(Numeric(5, 3))
    w4sigm_4 = Column(Numeric(4, 3))
    w4flg_4 = Column(Integer)
    w1mag_5 = Column(Numeric(5, 3))
    w1sigm_5 = Column(Numeric(4, 3))
    w1flg_5 = Column(Integer)
    w2mag_5 = Column(Numeric(5, 3))
    w2sigm_5 = Column(Numeric(4, 3))
    w2flg_5 = Column(Integer)
    w3mag_5 = Column(Numeric(5, 3))
    w3sigm_5 = Column(Numeric(4, 3))
    w3flg_5 = Column(Integer)
    w4mag_5 = Column(Numeric(5, 3))
    w4sigm_5 = Column(Numeric(4, 3))
    w4flg_5 = Column(Integer)
    w1mag_6 = Column(Numeric(5, 3))
    w1sigm_6 = Column(Numeric(4, 3))
    w1flg_6 = Column(Integer)
    w2mag_6 = Column(Numeric(5, 3))
    w2sigm_6 = Column(Numeric(4, 3))
    w2flg_6 = Column(Integer)
    w3mag_6 = Column(Numeric(5, 3))
    w3sigm_6 = Column(Numeric(4, 3))
    w3flg_6 = Column(Integer)
    w4mag_6 = Column(Numeric(5, 3))
    w4sigm_6 = Column(Numeric(4, 3))
    w4flg_6 = Column(Integer)
    w1mag_7 = Column(Numeric(5, 3))
    w1sigm_7 = Column(Numeric(4, 3))
    w1flg_7 = Column(Integer)
    w2mag_7 = Column(Numeric(5, 3))
    w2sigm_7 = Column(Numeric(4, 3))
    w2flg_7 = Column(Integer)
    w3mag_7 = Column(Numeric(5, 3))
    w3sigm_7 = Column(Numeric(4, 3))
    w3flg_7 = Column(Integer)
    w4mag_7 = Column(Numeric(5, 3))
    w4sigm_7 = Column(Numeric(4, 3))
    w4flg_7 = Column(Integer)
    w1mag_8 = Column(Numeric(5, 3))
    w1sigm_8 = Column(Numeric(4, 3))
    w1flg_8 = Column(Integer)
    w2mag_8 = Column(Numeric(5, 3))
    w2sigm_8 = Column(Numeric(4, 3))
    w2flg_8 = Column(Integer)
    w3mag_8 = Column(Numeric(5, 3))
    w3sigm_8 = Column(Numeric(4, 3))
    w3flg_8 = Column(Integer)
    w4mag_8 = Column(Numeric(5, 3))
    w4sigm_8 = Column(Numeric(4, 3))
    w4flg_8 = Column(Integer)
    w1magp = Column(Numeric(5, 3))
    w1sigp1 = Column(Numeric(5, 3))
    w1sigp2 = Column(Numeric(5, 3))
    w1k = Column(Numeric(4, 3))
    w1ndf = Column(Integer)
    w1mlq = Column(Numeric(4, 2))
    w1mjdmin = Column(Numeric(13, 8))
    w1mjdmax = Column(Numeric(13, 8))
    w1mjdmean = Column(Numeric(13, 8))
    w2magp = Column(Numeric(5, 3))
    w2sigp1 = Column(Numeric(5, 3))
    w2sigp2 = Column(Numeric(5, 3))
    w2k = Column(Numeric(4, 3))
    w2ndf = Column(Integer)
    w2mlq = Column(Numeric(4, 2))
    w2mjdmin = Column(Numeric(13, 8))
    w2mjdmax = Column(Numeric(13, 8))
    w2mjdmean = Column(Numeric(13, 8))
    w3magp = Column(Numeric(5, 3))
    w3sigp1 = Column(Numeric(5, 3))
    w3sigp2 = Column(Numeric(5, 3))
    w3k = Column(Numeric(4, 3))
    w3ndf = Column(Integer)
    w3mlq = Column(Numeric(4, 2))
    w3mjdmin = Column(Numeric(13, 8))
    w3mjdmax = Column(Numeric(13, 8))
    w3mjdmean = Column(Numeric(13, 8))
    w4magp = Column(Numeric(5, 3))
    w4sigp1 = Column(Numeric(5, 3))
    w4sigp2 = Column(Numeric(5, 3))
    w4k = Column(Numeric(4, 3))
    w4ndf = Column(Integer)
    w4mlq = Column(Numeric(4, 2))
    w4mjdmin = Column(Numeric(13, 8))
    w4mjdmax = Column(Numeric(13, 8))
    w4mjdmean = Column(Numeric(13, 8))
    rho12 = Column(Integer)
    rho23 = Column(Integer)
    rho34 = Column(Integer)
    q12 = Column(Integer)
    q23 = Column(Integer)
    q34 = Column(Integer)
    xscprox = Column(Numeric(7, 2))
    w1rsemi = Column(Numeric(7, 2))
    w1ba = Column(Numeric(3, 2))
    w1pa = Column(Numeric(5, 2))
    w1gmag = Column(Numeric(5, 3))
    w1gerr = Column(Numeric(4, 3))
    w1gflg = Column(Integer)
    w2rsemi = Column(Numeric(7, 2))
    w2ba = Column(Numeric(3, 2))
    w2pa = Column(Numeric(5, 2))
    w2gmag = Column(Numeric(5, 3))
    w2gerr = Column(Numeric(4, 3))
    w2gflg = Column(Integer)
    w3rsemi = Column(Numeric(7, 2))
    w3ba = Column(Numeric(3, 2))
    w3pa = Column(Numeric(5, 2))
    w3gmag = Column(Numeric(5, 3))
    w3gerr = Column(Numeric(4, 3))
    w3gflg = Column(Integer)
    w4rsemi = Column(Numeric(7, 2))
    w4ba = Column(Numeric(3, 2))
    w4pa = Column(Numeric(5, 2))
    w4gmag = Column(Numeric(5, 3))
    w4gerr = Column(Numeric(4, 3))
    w4gflg = Column(Integer)
    tmass_key = Column(ForeignKey('catalogdb.twomass_psc.pts_key'))
    r_2mass = Column(Numeric(5, 3))
    pa_2mass = Column(Numeric(4, 1))
    n_2mass = Column(Integer)
    j_m_2mass = Column(Numeric(5, 3))
    j_msig_2mass = Column(Numeric(4, 3))
    h_m_2mass = Column(Numeric(5, 3))
    h_msig_2mass = Column(Numeric(4, 3))
    k_m_2mass = Column(Numeric(5, 3))
    k_msig_2mass = Column(Numeric(4, 3))
    x = Column(Numeric(17, 16))
    y = Column(Numeric(17, 16))
    z = Column(Numeric(17, 16))
    spt_ind = Column(Integer)
    htm20 = Column(BigInteger)

    twomass_psc = relationship('TwomassPsc')


class BestBrightest(Base):
    __tablename__ = 'best_brightest'

    designation = Column(ForeignKey('catalogdb.allwise.designation'), nullable=False)
    ra_1 = Column(Float(53))
    dec_1 = Column(Float(53))
    glon = Column(Float(53))
    glat = Column(Float(53))
    w1mpro = Column(Float)
    w2mpro = Column(Float)
    w3mpro = Column(Float)
    w4mpro = Column(String(6))
    pmra = Column(Integer)
    pmdec = Column(Integer)
    j_m_2mass = Column(Float)
    h_m_2mass = Column(Float)
    k_m_2mass = Column(Float)
    ra_2 = Column(Float(53))
    raerr = Column(Float(53))
    dec_2 = Column(Float(53))
    decerr = Column(Float(53))
    nobs = Column(Integer)
    mobs = Column(Integer)
    vjmag = Column(Float)
    bjmag = Column(Float)
    gmag = Column(Float, index=True)
    rmag = Column(Float)
    imag = Column(Float)
    evjmag = Column(Float)
    ebjmag = Column(Float)
    egmag = Column(Float)
    ermag = Column(Float)
    eimag = Column(Float)
    name = Column(Integer)
    separation = Column(Float(53))
    ebv = Column(Float)
    version = Column(Integer, index=True)
    original_ext_source_id = Column(String(16))
    cntr = Column(ForeignKey('catalogdb.allwise.cntr'), primary_key=True)

    allwise = relationship('Allwise', primaryjoin='BestBrightest.designation == Allwise.designation')


class ATNF(Base):
    __tablename__ = 'atnf'

    name = Column(Text, primary_key=True)
    rastr = Column(Text)
    decstr = Column(Text)
    radeg = Column(Float(53))
    decdeg = Column(Float(53))
    ngaia = Column(Float)
    gaia_name = Column(Text)
    gaia_ra = Column(Float(53))
    gaia_dec = Column(Float(53))
    gaia_gmag = Column(Float)
    gaia_dist = Column(Float)
    gaia_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)

    gaia_source = relationship('GaiaDr2Source')


class BHM_RM_v0(Base):
    __tablename__ = 'bhm_rm_v0'

    field_name = Column(String(8))
    ra = Column(Float(53))
    dec = Column(Float(53))
    distance = Column(Float(53))
    pos_ref = Column(String(4))
    ebv = Column(Float(53))
    des = Column(Integer)
    coadd_object_id = Column(BigInteger)
    ra_des = Column(Float(53))
    dec_des = Column(Float(53))
    extended_coadd = Column(Integer)
    psfmag_des = Column(ARRAY(Float(precision=53)))
    psfmagerr_des = Column(ARRAY(Float(precision=53)))
    mag_auto_des = Column(ARRAY(Float(precision=53)))
    magerr_auto_des = Column(ARRAY(Float(precision=53)))
    imaflags_iso = Column(ARRAY(Integer()))
    separation_des = Column(Float(53))
    ps1 = Column(Integer)
    objid_ps1 = Column(BigInteger)
    ra_ps1 = Column(Float(53))
    dec_ps1 = Column(Float(53))
    class_ps1 = Column(Float(53))
    psfmag_ps1 = Column(ARRAY(Float(precision=53)))
    psfmagerr_ps1 = Column(ARRAY(Float(precision=53)))
    kronmag_ps1 = Column(ARRAY(Float(precision=53)))
    kronmagerr_ps1 = Column(ARRAY(Float(precision=53)))
    infoflag2 = Column(ARRAY(Integer()))
    separation_ps1 = Column(Float(53))
    nsc = Column(Integer)
    id_nsc = Column(BigInteger)
    ra_nsc = Column(Float(53))
    dec_nsc = Column(Float(53))
    class_star = Column(Float(53))
    mag_nsc = Column(ARRAY(Float(precision=53)))
    magerr_nsc = Column(ARRAY(Float(precision=53)))
    flags_nsc = Column(Integer)
    separation_nsc = Column(Float(53))
    sdss = Column(Integer)
    objid_sdss = Column(ForeignKey('catalogdb.sdss_dr13_photoobj.objid'), index=True)
    ra_sdss = Column(Float(53))
    dec_sdss = Column(Float(53))
    type_sdss = Column(Integer)
    psfmag_sdss = Column(ARRAY(Float(precision=53)))
    psfmagerr_sdss = Column(ARRAY(Float(precision=53)))
    modelmag_sdss = Column(ARRAY(Float(precision=53)))
    modelmagerr_sdss = Column(ARRAY(Float(precision=53)))
    clean_sdss = Column(Integer)
    separation_sdss = Column(Float(53))
    gaia = Column(Integer)
    source_id_gaia = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    mg = Column(Float(53))
    mag_gaia = Column(ARRAY(Float(precision=53)))
    magerr_gaia = Column(ARRAY(Float(precision=53)))
    parallax = Column(Float(53))
    parallax_error = Column(Float(53))
    plxsig = Column(Float(53), index=True)
    pmra = Column(Float(53))
    pmra_error = Column(Float(53))
    pmdec = Column(Float(53))
    pmdec_error = Column(Float(53))
    pmsig = Column(Float(53), index=True)
    unwise = Column(Integer)
    objid_unwise = Column(ForeignKey('catalogdb.unwise.unwise_objid'), index=True)
    ra_unwise = Column(Float(53))
    dec_unwise = Column(Float(53))
    mag_unwise = Column(ARRAY(Float(precision=53)))
    magerr_unwise = Column(ARRAY(Float(precision=53)))
    flags_unwise = Column(ARRAY(Integer()))
    separation_unwise = Column(Float(53))
    near_ir = Column(Integer)
    survey_ir = Column(String(6))
    sourceid_ir = Column(BigInteger)
    ra_ir = Column(Float(53))
    dec_ir = Column(Float(53))
    mag_ir = Column(ARRAY(Float(precision=53)))
    magerr_ir = Column(ARRAY(Float(precision=53)))
    separation_ir = Column(Float(53))
    optical_survey = Column(String(4))
    mi = Column(Float(53), index=True)
    cal_skewt_qso = Column(Integer)
    nband_optical_use = Column(Integer)
    use_unwise = Column(Integer)
    use_nir = Column(Integer)
    photo_combination = Column(String(17))
    log_qso = Column(Float(53))
    log_star = Column(Float(53))
    log_galaxy = Column(Float(53))
    p_qso = Column(Float(53))
    p_star = Column(Float)
    p_galaxy = Column(Float(53))
    class_skewt_qso = Column(String(6))
    skewt_qso = Column(Integer, index=True)
    p_qso_prior = Column(Float(53))
    p_star_prior = Column(Float)
    p_galaxy_prior = Column(Float(53))
    class_skewt_qso_prior = Column(String(6))
    skewt_qso_prior = Column(Integer)
    photoz_qso = Column(Float(53))
    photoz_qso_lower = Column(Float(53))
    photoz_qso_upper = Column(Float(53))
    prob_photoz_qso = Column(Float(53))
    photoz_galaxy = Column(Float(53))
    photoz_galaxy_lower = Column(Float(53))
    photoz_galaxy_upper = Column(Float(53))
    pqso_xdqso = Column(Float(53))
    photoz_xdqso = Column(Float(53))
    prob_rf_gaia_unwise = Column(Float(53))
    photoz_gaia_unwise = Column(Float(53))
    des_var_nepoch = Column(ARRAY(Integer()))
    des_var_status = Column(ARRAY(Integer()))
    des_var_rms = Column(ARRAY(Float(precision=53)), index=True)
    des_var_sigrms = Column(ARRAY(Float(precision=53)))
    des_var_sn = Column(ARRAY(Float(precision=53)), index=True)
    des_var_sn_max = Column(Float(53))
    ps1_var_nepoch = Column(ARRAY(Integer()))
    ps1_var_status = Column(ARRAY(Integer()))
    ps1_var_rms = Column(ARRAY(Float(precision=53)), index=True)
    ps1_var_sigrms = Column(ARRAY(Float(precision=53)))
    ps1_var_sn = Column(ARRAY(Float(precision=53)), index=True)
    ps1_var_sn_max = Column(Float(53))
    spec_q = Column(Integer, index=True)
    spec_strmask = Column(String(6))
    spec_bitmask = Column(BigInteger)
    specz = Column(Float(53))
    specz_ref = Column(String(16))
    photo_q = Column(Integer)
    photo_strmask = Column(String(3))
    photo_bitmask = Column(BigInteger, index=True)
    photoz = Column(Float(53))
    pqso_photo = Column(Float(53))
    photoz_ref = Column(String(16))
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_rm_v0_pk_seq'::regclass)"))

    sdss_dr13_photoobj = relationship('SdssDr13Photoobj')
    unwise1 = relationship('Unwise')
    gaia_dr2_source = relationship('GaiaDr2Source')


class BHM_RM_v2(Base):
    __tablename__ = 'bhm_rm_v0_2'

    field_name = Column(String(8), index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    distance = Column(Float(53))
    pos_ref = Column(String(4))
    ebv = Column(Float(53))
    des = Column(Integer)
    coadd_object_id = Column(BigInteger)
    ra_des = Column(Float(53))
    dec_des = Column(Float(53))
    extended_coadd = Column(Integer)
    psfmag_des = Column(ARRAY(Float(precision=53)))
    psfmagerr_des = Column(ARRAY(Float(precision=53)))
    mag_auto_des = Column(ARRAY(Float(precision=53)))
    magerr_auto_des = Column(ARRAY(Float(precision=53)))
    imaflags_iso = Column(ARRAY(Integer()))
    separation_des = Column(Float(53))
    ps1 = Column(Integer)
    objid_ps1 = Column(BigInteger)
    ra_ps1 = Column(Float(53))
    dec_ps1 = Column(Float(53))
    class_ps1 = Column(Float(53))
    psfmag_ps1 = Column(ARRAY(Float(precision=53)))
    psfmagerr_ps1 = Column(ARRAY(Float(precision=53)))
    kronmag_ps1 = Column(ARRAY(Float(precision=53)))
    kronmagerr_ps1 = Column(ARRAY(Float(precision=53)))
    infoflag2 = Column(ARRAY(Integer()))
    separation_ps1 = Column(Float(53))
    nsc = Column(Integer)
    id_nsc = Column(BigInteger)
    ra_nsc = Column(Float(53))
    dec_nsc = Column(Float(53))
    class_star = Column(Float(53))
    mag_nsc = Column(ARRAY(Float(precision=53)))
    magerr_nsc = Column(ARRAY(Float(precision=53)))
    flags_nsc = Column(Integer)
    separation_nsc = Column(Float(53))
    sdss = Column(Integer)
    objid_sdss = Column(ForeignKey('catalogdb.sdss_dr13_photoobj.objid'), index=True)
    ra_sdss = Column(Float(53))
    dec_sdss = Column(Float(53))
    type_sdss = Column(Integer)
    psfmag_sdss = Column(ARRAY(Float(precision=53)))
    psfmagerr_sdss = Column(ARRAY(Float(precision=53)))
    modelmag_sdss = Column(ARRAY(Float(precision=53)))
    modelmagerr_sdss = Column(ARRAY(Float(precision=53)))
    clean_sdss = Column(Integer)
    separation_sdss = Column(Float(53))
    gaia = Column(Integer)
    source_id_gaia = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    mg = Column(Float(53), index=True)
    mag_gaia = Column(ARRAY(Float(precision=53)))
    magerr_gaia = Column(ARRAY(Float(precision=53)))
    parallax = Column(Float(53))
    parallax_error = Column(Float(53))
    plxsig = Column(Float(53), index=True)
    pmra = Column(Float(53))
    pmra_error = Column(Float(53))
    pmdec = Column(Float(53))
    pmdec_error = Column(Float(53))
    pmsig = Column(Float(53), index=True)
    unwise = Column(Integer)
    objid_unwise = Column(ForeignKey('catalogdb.unwise.unwise_objid'), index=True)
    ra_unwise = Column(Float(53))
    dec_unwise = Column(Float(53))
    mag_unwise = Column(ARRAY(Float(precision=53)))
    magerr_unwise = Column(ARRAY(Float(precision=53)))
    flags_unwise = Column(ARRAY(Integer()))
    separation_unwise = Column(Float(53))
    near_ir = Column(Integer)
    survey_ir = Column(String(6))
    sourceid_ir = Column(BigInteger)
    ra_ir = Column(Float(53))
    dec_ir = Column(Float(53))
    mag_ir = Column(ARRAY(Float(precision=53)))
    magerr_ir = Column(ARRAY(Float(precision=53)))
    separation_ir = Column(Float(53))
    optical_survey = Column(String(4), index=True)
    mi = Column(Float(53), index=True)
    cal_skewt_qso = Column(Integer)
    nband_optical_use = Column(Integer)
    use_unwise = Column(Integer)
    use_nir = Column(Integer)
    photo_combination = Column(String(17))
    log_qso = Column(Float(53))
    log_star = Column(Float(53))
    log_galaxy = Column(Float(53))
    p_qso = Column(Float(53))
    p_star = Column(Float)
    p_galaxy = Column(Float(53))
    class_skewt_qso = Column(String(6))
    skewt_qso = Column(Integer, index=True)
    p_qso_prior = Column(Float(53))
    p_star_prior = Column(Float)
    p_galaxy_prior = Column(Float(53))
    class_skewt_qso_prior = Column(String(6))
    skewt_qso_prior = Column(Integer, index=True)
    photoz_qso = Column(Float(53))
    photoz_qso_lower = Column(Float(53))
    photoz_qso_upper = Column(Float(53))
    prob_photoz_qso = Column(Float(53))
    photoz_galaxy = Column(Float(53))
    photoz_galaxy_lower = Column(Float(53))
    photoz_galaxy_upper = Column(Float(53))
    pqso_xdqso = Column(Float(53))
    photoz_xdqso = Column(Float(53))
    prob_rf_gaia_unwise = Column(Float(53))
    photoz_gaia_unwise = Column(Float(53))
    des_var_nepoch = Column(ARRAY(Integer()))
    des_var_status = Column(ARRAY(Integer()))
    des_var_rms = Column(ARRAY(Float(precision=53)), index=True)
    des_var_sigrms = Column(ARRAY(Float(precision=53)))
    des_var_sn = Column(ARRAY(Float(precision=53)), index=True)
    des_var_sn_max = Column(Float(53))
    ps1_var_nepoch = Column(ARRAY(Integer()))
    ps1_var_status = Column(ARRAY(Integer()))
    ps1_var_rms = Column(ARRAY(Float(precision=53)), index=True)
    ps1_var_sigrms = Column(ARRAY(Float(precision=53)))
    ps1_var_sn = Column(ARRAY(Float(precision=53)), index=True)
    ps1_var_sn_max = Column(Float(53))
    spec_q = Column(Integer, index=True)
    spec_strmask = Column(String(6))
    spec_bitmask = Column(BigInteger)
    specz = Column(Float(53))
    specz_ref = Column(String(16))
    photo_q = Column(Integer)
    photo_strmask = Column(String(3))
    photo_bitmask = Column(BigInteger, index=True)
    photoz = Column(Float(53))
    pqso_photo = Column(Float(53))
    photoz_ref = Column(String(16))
    pk = Column(BigInteger, primary_key=True)

    sdss_dr13_photoobj = relationship('SdssDr13Photoobj')
    unwise1 = relationship('Unwise')
    gaia_dr2_source = relationship('GaiaDr2Source')


class CantatGaudinNodup(Base):
    __tablename__ = 'cantat_gaudin_nodup'

    radeg = Column(Float(53))
    dedeg = Column(Float(53))
    gaiadr2 = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    proba = Column(Float, index=True)
    cluster = Column(ForeignKey('catalogdb.cantat_gaudin_table1.cluster'), index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".cantat_gaudin_nodup_pkey_seq'::regclass)"))

    cantat_gaudin_table1 = relationship('CantatGaudinTable1')
    gaia_dr2_source = relationship('GaiaDr2Source')


class CataclysmicVariables(Base):
    __tablename__ = 'cataclysmic_variables'

    ref_id = Column(BigInteger, primary_key=True)
    solution_id = Column(BigInteger)
    designation = Column(Text)
    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    random_index = Column(Integer)
    ref_epoch = Column(Float)
    ra = Column(Float(53))
    ra_error = Column(Float(53))
    dec = Column(Float(53))
    dec_error = Column(Float(53))
    parallax = Column(Float(53))
    parallax_error = Column(Float(53))
    parallax_over_error = Column(Float(53))
    pmra = Column(Float(53))
    pmra_error = Column(Float(53))
    pmdec = Column(Float(53))
    pmdec_error = Column(Float(53))
    ra_dec_corr = Column(Float(53))
    ra_parallax_corr = Column(Float(53))
    ra_pmra_corr = Column(Float(53))
    ra_pmdec_corr = Column(Float(53))
    dec_parallax_corr = Column(Float(53))
    dec_pmra_corr = Column(Float(53))
    dec_pmdec_corr = Column(Float(53))
    parallax_pmra_corr = Column(Float(53))
    parallax_pmdec_corr = Column(Float(53))
    pmra_pmdec_corr = Column(Float(53))
    astrometric_n_obs_al = Column(SmallInteger)
    astrometric_n_obs_ac = Column(SmallInteger)
    astrometric_n_good_obs_al = Column(SmallInteger)
    astrometric_n_bad_obs_al = Column(SmallInteger)
    astrometric_gof_al = Column(Float(53))
    astrometric_chi2_al = Column(Float(53))
    astrometric_excess_noise = Column(Float(53))
    astrometric_excess_noise_sig = Column(Float(53))
    astrometric_params_solved = Column(SmallInteger)
    astrometric_primary_flag = Column(Boolean)
    astrometric_weight_al = Column(Float(53))
    astrometric_pseudo_colour = Column(Float(53))
    astrometric_pseudo_colour_error = Column(Float(53))
    mean_varpi_factor_al = Column(Float(53))
    astrometric_matched_observations = Column(SmallInteger)
    visibility_periods_used = Column(SmallInteger)
    astrometric_sigma5d_max = Column(Float(53))
    frame_rotator_object_type = Column(SmallInteger)
    matched_observations = Column(SmallInteger)
    duplicated_source = Column(Boolean)
    phot_g_n_obs = Column(SmallInteger)
    phot_g_mean_flux = Column(Float(53))
    phot_g_mean_flux_error = Column(Float(53))
    phot_g_mean_flux_over_error = Column(Float(53))
    phot_g_mean_mag = Column(Float(53))
    phot_bp_n_obs = Column(SmallInteger)
    phot_bp_mean_flux = Column(Float(53))
    phot_bp_mean_flux_error = Column(Float(53))
    phot_bp_mean_flux_over_error = Column(Float(53))
    phot_bp_mean_mag = Column(Float(53))
    phot_rp_n_obs = Column(SmallInteger)
    phot_rp_mean_flux = Column(Float(53))
    phot_rp_mean_flux_error = Column(Float(53))
    phot_rp_mean_flux_over_error = Column(Float(53))
    phot_rp_mean_mag = Column(Float(53))
    phot_bp_rp_excess_factor = Column(Float(53))
    phot_proc_mode = Column(SmallInteger)
    bp_rp = Column(Float(53))
    bp_g = Column(Float(53))
    g_rp = Column(Float(53))
    radial_velocity = Column(Float(53))
    radial_velocity_error = Column(Float(53))
    rv_nb_transits = Column(SmallInteger)
    rv_template_teff = Column(Float)
    rv_template_logg = Column(Float)
    rv_template_fe_h = Column(Float)
    phot_variable_flag = Column(Text)
    l = Column(Float(53))
    b = Column(Float(53))
    ecl_lon = Column(Float(53))
    ecl_lat = Column(Float(53))
    priam_flags = Column(Integer)
    teff_val = Column(Float(53))
    teff_percentile_lower = Column(Float(53))
    teff_percentile_upper = Column(Float(53))
    a_g_val = Column(Float)
    a_g_percentile_lower = Column(Float)
    a_g_percentile_upper = Column(Float)
    e_bp_min_rp_val = Column(Float)
    e_bp_min_rp_percentile_lower = Column(Float)
    e_bp_min_rp_percentile_upper = Column(Float)
    flame_flags = Column(Integer)
    radius_val = Column(Float(53))
    radius_percentile_lower = Column(Float(53))
    radius_percentile_upper = Column(Float(53))
    lum_val = Column(Float(53))
    lum_percentile_lower = Column(Float(53))
    lum_percentile_upper = Column(Float(53))

    source = relationship('GaiaDr2Source')


class eBOSS_Target_v5(Base):
    __tablename__ = 'ebosstarget_v5'

    run = Column(Integer)
    camcol = Column(Integer)
    field = Column(Integer)
    id = Column(Integer)
    rerun = Column(Text)
    fibermag = Column(ARRAY(Float()))
    fiber2mag = Column(ARRAY(Float()))
    calib_status = Column(ARRAY(Integer()))
    ra = Column(Float(53))
    dec = Column(Float(53))
    epoch = Column(Float)
    pmra = Column(Float)
    pmdec = Column(Float)
    eboss_target1 = Column(BigInteger, index=True)
    eboss_target2 = Column(BigInteger)
    eboss_target_id = Column(BigInteger)
    thing_id_targeting = Column(Integer)
    objc_type = Column(Integer, index=True)
    objc_flags = Column(Integer)
    objc_flags2 = Column(Integer)
    flags = Column(Integer)
    flags2 = Column(Integer)
    psf_fwhm = Column(ARRAY(Float()))
    psfflux = Column(ARRAY(Float()))
    psfflux_ivar = Column(ARRAY(Float()))
    extinction = Column(ARRAY(Float()))
    fiberflux = Column(ARRAY(Float()))
    fiberflux_ivar = Column(ARRAY(Float()))
    fiber2flux = Column(ARRAY(Float()))
    fiber2flux_ivar = Column(ARRAY(Float()))
    modelflux = Column(ARRAY(Float()))
    modelflux_ivar = Column(ARRAY(Float()))
    modelmag = Column(ARRAY(Float()))
    modelmag_ivar = Column(ARRAY(Float()))
    resolve_status = Column(Integer, index=True)
    w1_mag = Column(Float)
    w1_mag_err = Column(Float)
    w1_nanomaggies = Column(Float)
    w1_nanomaggies_ivar = Column(Float)
    w2_nanomaggies = Column(Float)
    w2_nanomaggies_ivar = Column(Float)
    has_wise_phot = Column(Boolean)
    objid_targeting = Column(ForeignKey('catalogdb.sdss_dr13_photoobj.objid'), index=True)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".ebosstarget_v5_pk_seq'::regclass)"))

    sdss_dr13_photoobj = relationship('SdssDr13Photoobj')


class ElbadryRix(Base):
    __tablename__ = 'elbadry_rix'

    source_id2 = Column(BigInteger, index=True)
    ra2 = Column(Float(53))
    dec2 = Column(Float(53))
    astrometric_chi2_al_2 = Column(Float(53), index=True)
    astrometric_n_good_obs_al2 = Column(Integer, index=True)
    phot_g_mean_flux_over_error2 = Column(Float(53))
    phot_rp_mean_flux_over_error2 = Column(Float(53))
    phot_bp_mean_flux_over_error2 = Column(Float(53))
    phot_bp_rp_excess_factor2 = Column(Float(53), index=True)
    pmra2 = Column(Float(53), index=True)
    pmra_error2 = Column(Float(53))
    pmdec2 = Column(Float(53), index=True)
    pmdec_error2 = Column(Float(53))
    phot_g_mean_mag2 = Column(Float(53), index=True)
    phot_bp_mean_mag2 = Column(Float(53), index=True)
    phot_rp_mean_mag2 = Column(Float(53), index=True)
    parallax2 = Column(Float(53), index=True)
    parallax_over_error2 = Column(Float(53))
    radial_velocity2 = Column(Float(53), index=True)
    radial_velocity_error2 = Column(Float(53))
    rv_nb_transits2 = Column(Integer, index=True)
    source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    pmra = Column(Float(53), index=True)
    pmra_error = Column(Float(53))
    pmdec = Column(Float(53), index=True)
    pmdec_error = Column(Float(53))
    phot_g_mean_mag = Column(Float(53), index=True)
    phot_bp_mean_mag = Column(Float(53), index=True)
    phot_rp_mean_mag = Column(Float(53), index=True)
    parallax = Column(Float(53), index=True)
    parallax_over_error = Column(Float(53))
    astrometric_chi2_al = Column(Float(53), index=True)
    astrometric_n_good_obs_al = Column(Integer, index=True)
    phot_g_mean_flux_over_error = Column(Float(53))
    phot_rp_mean_flux_over_error = Column(Float(53))
    phot_bp_mean_flux_over_error = Column(Float(53))
    phot_bp_rp_excess_factor = Column(Float(53), index=True)
    radial_velocity = Column(Float(53), index=True)
    radial_velocity_error = Column(Float(53))
    rv_nb_transits = Column(Integer, index=True)
    pairdistance = Column(Float(53), index=True)
    binary_class = Column(CHAR(4), index=True)
    s_au = Column(Float(53), index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".elbadry_rix_pkey_seq'::regclass)"))

    source = relationship('GaiaDr2Source')


class Gaia_DR2_Neighbourhood(Base):
    __tablename__ = 'gaia_dr2_neighbourhood'

    dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    angular_distance = Column(Float, index=True)
    magnitude_difference = Column(Float, index=True)
    proper_motion_propagation = Column(Boolean, index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".gaia_dr2_neighbourhood_pkey_seq'::regclass)"))

    dr2_source = relationship('GaiaDr2Source')
    dr3_source = relationship('GaiaDr3Source')


class Gaia_dr3_nss_two_body_orbit(Base):
    __tablename__ = 'gaia_dr3_nss_two_body_orbit'

    solution_id = Column('solution_id', BigInteger, primary_key=True)
    source_id = Column('source_id', ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True, primary_key=True)
    nss_solution_type = Column('nss_solution_type', Text)
    ra = Column('ra', Float(53))
    ra_error = Column('ra_error', Float)
    dec = Column('dec', Float(53))
    dec_error = Column('dec_error', Float)
    parallax = Column('parallax', Float(53))
    parallax_error = Column('parallax_error', Float)
    pmra = Column('pmra', Float(53))
    pmra_error = Column('pmra_error', Float)
    pmdec = Column('pmdec', Float(53))
    pmdec_error = Column('pmdec_error', Float)
    a_thiele_innes = Column('a_thiele_innes', Float(53))
    a_thiele_innes_error = Column('a_thiele_innes_error', Float)
    b_thiele_innes = Column('b_thiele_innes', Float(53))
    b_thiele_innes_error = Column('b_thiele_innes_error', Float)
    f_thiele_innes = Column('f_thiele_innes', Float(53))
    f_thiele_innes_error = Column('f_thiele_innes_error', Float)
    g_thiele_innes = Column('g_thiele_innes', Float(53))
    g_thiele_innes_error = Column('g_thiele_innes_error', Float)
    c_thiele_innes = Column('c_thiele_innes', Float(53))
    c_thiele_innes_error = Column('c_thiele_innes_error', Float)
    h_thiele_innes = Column('h_thiele_innes', Float(53))
    h_thiele_innes_error = Column('h_thiele_innes_error', Float)
    period = Column('period', Float(53), index=True)
    period_error = Column('period_error', Float)
    t_periastron = Column('t_periastron', Float(53))
    t_periastron_error = Column('t_periastron_error', Float)
    eccentricity = Column('eccentricity', Float(53))
    eccentricity_error = Column('eccentricity_error', Float)
    center_of_mass_velocity = Column('center_of_mass_velocity', Float(53))
    center_of_mass_velocity_error = Column('center_of_mass_velocity_error', Float)
    semi_amplitude_primary = Column('semi_amplitude_primary', Float(53))
    semi_amplitude_primary_error = Column('semi_amplitude_primary_error', Float)
    semi_amplitude_secondary = Column('semi_amplitude_secondary', Float(53))
    semi_amplitude_secondary_error = Column('semi_amplitude_secondary_error', Float)
    mass_ratio = Column('mass_ratio', Float(53))
    mass_ratio_error = Column('mass_ratio_error', Float)
    fill_factor_primary = Column('fill_factor_primary', Float(53))
    fill_factor_primary_error = Column('fill_factor_primary_error', Float)
    fill_factor_secondary = Column('fill_factor_secondary', Float(53))
    fill_factor_secondary_error = Column('fill_factor_secondary_error', Float)
    inclination = Column('inclination', Float(53))
    inclination_error = Column('inclination_error', Float)
    arg_periastron = Column('arg_periastron', Float(53))
    arg_periastron_error = Column('arg_periastron_error', Float)
    temperature_ratio = Column('temperature_ratio', Float(53))
    temperature_ratio_error = Column('temperature_ratio_error', Float)
    temperature_ratio_definition = Column('temperature_ratio_definition', SmallInteger)
    astrometric_n_obs_al = Column('astrometric_n_obs_al', Integer)
    astrometric_n_good_obs_al = Column('astrometric_n_good_obs_al', Integer)
    rv_n_obs_primary = Column('rv_n_obs_primary', Integer)
    rv_n_good_obs_primary = Column('rv_n_good_obs_primary', Integer)
    rv_n_obs_secondary = Column('rv_n_obs_secondary', Integer)
    rv_n_good_obs_secondary = Column('rv_n_good_obs_secondary', Integer)
    phot_g_n_obs = Column('phot_g_n_obs', Integer)
    phot_g_n_good_obs = Column('phot_g_n_good_obs', Integer)
    bit_index = Column('bit_index', BigInteger)
    corr_vec = Column('corr_vec', Text)
    obj_func = Column('obj_func', Float)
    goodness_of_fit = Column('goodness_of_fit', Float)
    efficiency = Column('efficiency', Float)
    significance = Column('significance', Float)
    flags = Column('flags', BigInteger)
    conf_spectro_period = Column('conf_spectro_period', Float)
    r_pole_sum = Column('r_pole_sum', Float(53))
    r_l1_point_sum = Column('r_l1_point_sum', Float(53))
    r_spher_sum = Column('r_spher_sum', Float(53))
    ecl_time_primary = Column('ecl_time_primary', Float(53))
    ecl_time_secondary = Column('ecl_time_secondary', Float(53))
    ecl_dur_primary = Column('ecl_dur_primary', Float(53))
    ecl_dur_secondary = Column('ecl_dur_secondary', Float(53))
    g_luminosity_ratio = Column('g_luminosity_ratio', Float(53))
    input_period_error = Column('input_period_error', Float)
    g_rank = Column('g_rank', Float(53))
    astrometric_jitter = Column('astrometric_jitter', Float(53))


class Gaia_edr3_tycho2tdsc_merge_best_neighbour(Base):
    __tablename__ = 'gaia_edr3_tycho2tdsc_merge_best_neighbour'

    source_id = Column('source_id', ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True, primary_key=True)
    original_ext_source_id = Column('original_ext_source_id', Text, index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)
    tycho2tdsc_merge_oid = Column('tycho2tdsc_merge_oid', BigInteger, index=True)
    number_of_neighbours = Column('number_of_neighbours', SmallInteger, index=True)


class Gaia_edr3_tycho2tdsc_merge_best_neighbour2(Base):
    __tablename__ = 'gaia_edr3_tycho2tdsc_merge_best_neighbour2'

    source_id = Column('source_id', ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True, primary_key=True)
    original_ext_source_id = Column('original_ext_source_id', ForeignKey('catalogdb.tycho2.designation2'), index=True)
    angular_distance = Column('angular_distance', Float, index=True)
    xm_flag = Column('xm_flag', SmallInteger, index=True)
    tycho2tdsc_merge_oid = Column('tycho2tdsc_merge_oid', BigInteger, index=True)
    number_of_neighbours = Column('number_of_neighbours', SmallInteger, index=True)


class Galah_dr3(Base):
    __tablename__ = 'galah_dr3'

    star_id = Column(Text, index=True)
    sobject_id = Column(BigInteger, primary_key=True)
    dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'))
    dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'))
    survey_name = Column(Text)
    field_id = Column(BigInteger)
    flag_repeat = Column(BigInteger)
    wg4_field = Column(Text)
    wg4_pipeline = Column(Text)
    flag_sp = Column(BigInteger)
    teff = Column(Float)
    e_teff = Column(Float(53))
    irfm_teff = Column(Float)
    irfm_ebv = Column(Float)
    irfm_ebv_ref = Column(Text)
    logg = Column(Float)
    e_logg = Column(Float(53))
    fe_h = Column(Float)
    e_fe_h = Column(Float(53))
    flag_fe_h = Column(BigInteger)
    fe_h_atmo = Column(Float)
    vmic = Column(Float)
    vbroad = Column(Float)
    e_vbroad = Column(Float(53))
    chi2_sp = Column(Float)
    alpha_fe = Column(Float(53))
    e_alpha_fe = Column(Float(53))
    nr_alpha_fe = Column(Float(53))
    flag_alpha_fe = Column(BigInteger)
    flux_a_fe = Column(Float)
    chi_a_fe = Column(Float)
    li_fe = Column(Float(53))
    e_li_fe = Column(Float(53))
    nr_li_fe = Column(BigInteger)
    flag_li_fe = Column(BigInteger)
    c_fe = Column(Float(53))
    e_c_fe = Column(Float(53))
    nr_c_fe = Column(BigInteger)
    flag_c_fe = Column(BigInteger)
    o_fe = Column(Float(53))
    e_o_fe = Column(Float(53))
    nr_o_fe = Column(BigInteger)
    flag_o_fe = Column(BigInteger)
    na_fe = Column(Float(53))
    e_na_fe = Column(Float(53))
    nr_na_fe = Column(BigInteger)
    flag_na_fe = Column(BigInteger)
    mg_fe = Column(Float(53))
    e_mg_fe = Column(Float(53))
    nr_mg_fe = Column(BigInteger)
    flag_mg_fe = Column(BigInteger)
    al_fe = Column(Float(53))
    e_al_fe = Column(Float(53))
    nr_al_fe = Column(BigInteger)
    flag_al_fe = Column(BigInteger)
    si_fe = Column(Float(53))
    e_si_fe = Column(Float(53))
    nr_si_fe = Column(BigInteger)
    flag_si_fe = Column(BigInteger)
    k_fe = Column(Float(53))
    e_k_fe = Column(Float(53))
    nr_k_fe = Column(BigInteger)
    flag_k_fe = Column(BigInteger)
    ca_fe = Column(Float(53))
    e_ca_fe = Column(Float(53))
    nr_ca_fe = Column(BigInteger)
    flag_ca_fe = Column(BigInteger)
    sc_fe = Column(Float(53))
    e_sc_fe = Column(Float(53))
    nr_sc_fe = Column(BigInteger)
    flag_sc_fe = Column(BigInteger)
    sc2_fe = Column(Float(53))
    e_sc2_fe = Column(Float(53))
    nr_sc2_fe = Column(BigInteger)
    flag_sc2_fe = Column(BigInteger)
    ti_fe = Column(Float(53))
    e_ti_fe = Column(Float(53))
    nr_ti_fe = Column(BigInteger)
    flag_ti_fe = Column(BigInteger)
    ti2_fe = Column(Float(53))
    e_ti2_fe = Column(Float(53))
    nr_ti2_fe = Column(BigInteger)
    flag_ti2_fe = Column(BigInteger)
    v_fe = Column(Float(53))
    e_v_fe = Column(Float(53))
    nr_v_fe = Column(BigInteger)
    flag_v_fe = Column(BigInteger)
    cr_fe = Column(Float(53))
    e_cr_fe = Column(Float(53))
    nr_cr_fe = Column(BigInteger)
    flag_cr_fe = Column(BigInteger)
    cr2_fe = Column(Float(53))
    e_cr2_fe = Column(Float(53))
    nr_cr2_fe = Column(BigInteger)
    flag_cr2_fe = Column(BigInteger)
    mn_fe = Column(Float(53))
    e_mn_fe = Column(Float(53))
    nr_mn_fe = Column(BigInteger)
    flag_mn_fe = Column(BigInteger)
    co_fe = Column(Float(53))
    e_co_fe = Column(Float(53))
    nr_co_fe = Column(BigInteger)
    flag_co_fe = Column(BigInteger)
    ni_fe = Column(Float(53))
    e_ni_fe = Column(Float(53))
    nr_ni_fe = Column(BigInteger)
    flag_ni_fe = Column(BigInteger)
    cu_fe = Column(Float(53))
    e_cu_fe = Column(Float(53))
    nr_cu_fe = Column(BigInteger)
    flag_cu_fe = Column(BigInteger)
    zn_fe = Column(Float(53))
    e_zn_fe = Column(Float(53))
    nr_zn_fe = Column(BigInteger)
    flag_zn_fe = Column(BigInteger)
    rb_fe = Column(Float(53))
    e_rb_fe = Column(Float(53))
    nr_rb_fe = Column(BigInteger)
    flag_rb_fe = Column(BigInteger)
    sr_fe = Column(Float(53))
    e_sr_fe = Column(Float(53))
    nr_sr_fe = Column(BigInteger)
    flag_sr_fe = Column(BigInteger)
    y_fe = Column(Float(53))
    e_y_fe = Column(Float(53))
    nr_y_fe = Column(BigInteger)
    flag_y_fe = Column(BigInteger)
    zr_fe = Column(Float(53))
    e_zr_fe = Column(Float(53))
    nr_zr_fe = Column(BigInteger)
    flag_zr_fe = Column(BigInteger)
    mo_fe = Column(Float(53))
    e_mo_fe = Column(Float(53))
    nr_mo_fe = Column(BigInteger)
    flag_mo_fe = Column(BigInteger)
    ru_fe = Column(Float(53))
    e_ru_fe = Column(Float(53))
    nr_ru_fe = Column(BigInteger)
    flag_ru_fe = Column(BigInteger)
    ba_fe = Column(Float(53))
    e_ba_fe = Column(Float(53))
    nr_ba_fe = Column(BigInteger)
    flag_ba_fe = Column(BigInteger)
    la_fe = Column(Float(53))
    e_la_fe = Column(Float(53))
    nr_la_fe = Column(BigInteger)
    flag_la_fe = Column(BigInteger)
    ce_fe = Column(Float(53))
    e_ce_fe = Column(Float(53))
    nr_ce_fe = Column(BigInteger)
    flag_ce_fe = Column(BigInteger)
    nd_fe = Column(Float(53))
    e_nd_fe = Column(Float(53))
    nr_nd_fe = Column(BigInteger)
    flag_nd_fe = Column(BigInteger)
    sm_fe = Column(Float(53))
    e_sm_fe = Column(Float(53))
    nr_sm_fe = Column(BigInteger)
    flag_sm_fe = Column(BigInteger)
    eu_fe = Column(Float(53))
    e_eu_fe = Column(Float(53))
    nr_eu_fe = Column(BigInteger)
    flag_eu_fe = Column(BigInteger)
    ra_dr2 = Column(Float(53))
    dec_dr2 = Column(Float(53))
    parallax_dr2 = Column(Float(53))
    parallax_error_dr2 = Column(Float(53))
    r_est_dr2 = Column(Float(53))
    r_lo_dr2 = Column(Float(53))
    r_hi_dr2 = Column(Float(53))
    r_len_dr2 = Column(Float(53))
    rv_galah = Column(Float(53))
    e_rv_galah = Column(Float(53))
    rv_gaia_dr2 = Column(Float)
    e_rv_gaia_dr2 = Column(Float)
    red_flag = Column(BigInteger)
    ebv = Column(Float(53))
    snr_c1_iraf = Column(Float(53))
    snr_c2_iraf = Column(Float(53))
    snr_c3_iraf = Column(Float(53))
    snr_c4_iraf = Column(Float(53))
    flag_guess = Column(BigInteger)
    v_jk = Column(Float)
    j_m = Column(Float)
    j_msigcom = Column(Float)
    h_m = Column(Float)
    h_msigcom = Column(Float)
    ks_m = Column(Float)
    ks_msigcom = Column(Float)
    ph_qual_tmass = Column(Text)
    w2mpro = Column(Float(53))
    w2mpro_error = Column(Float(53))
    ph_qual_wise = Column(Text)
    a_ks = Column(Float(53))
    e_a_ks = Column(Float(53))
    bc_ks = Column(Float)
    ruwe_dr2 = Column(Float(53))

    dr2_source = relationship('GaiaDr2Source')
    dr3_source = relationship('GaiaDr3Source')


class GLIMPSE(Base):
    __tablename__ = 'glimpse'

    designation = Column(Text)
    tmass_designation = Column(String(18))
    tmass_cntr = Column(ForeignKey('catalogdb.twomass_psc.pts_key', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    l = Column(Float(53))
    b = Column(Float(53))
    dl = Column(Float(53))
    db = Column(Float(53))
    ra = Column(Float(53))
    dec = Column(Float(53))
    dra = Column(Float(53))
    ddec = Column(Float(53))
    csf = Column(Integer)
    mag_j = Column(Float)
    dj_m = Column(Float)
    mag_h = Column(Float)
    dh_m = Column(Float)
    mag_ks = Column(Float)
    dks_m = Column(Float)
    mag3_6 = Column(Float)
    d3_6m = Column(Float)
    mag4_5 = Column(Float)
    d4_5m = Column(Float)
    mag5_8 = Column(Float)
    d5_8m = Column(Float)
    mag8_0 = Column(Float)
    d8_0m = Column(Float)
    f_j = Column(Float)
    df_j = Column(Float)
    f_h = Column(Float)
    df_h = Column(Float)
    f_ks = Column(Float)
    df_ks = Column(Float)
    f3_6 = Column(Float)
    df3_6 = Column(Float)
    f4_5 = Column(Float)
    df4_5 = Column(Float)
    f5_8 = Column(Float)
    df5_8 = Column(Float)
    f8_0 = Column(Float)
    df8_0 = Column(Float)
    rms_f3_6 = Column(Float)
    rms_f4_5 = Column(Float)
    rms_f5_8 = Column(Float)
    rms_f8_0 = Column(Float)
    sky_3_6 = Column(Float)
    sky_4_5 = Column(Float)
    sky_5_8 = Column(Float)
    sky_8_0 = Column(Float)
    sn_j = Column(Float)
    sn_h = Column(Float)
    sn_ks = Column(Float)
    sn_3_6 = Column(Float)
    sn_4_5 = Column(Float)
    sn_5_8 = Column(Float)
    sn_8_0 = Column(Float)
    dens_3_6 = Column(Float)
    dens_4_5 = Column(Float)
    dens_5_8 = Column(Float)
    dens_8_0 = Column(Float)
    m3_6 = Column(Integer)
    m4_5 = Column(Integer)
    m5_8 = Column(Integer)
    m8_0 = Column(Integer)
    n3_6 = Column(Integer)
    n4_5 = Column(Integer)
    n5_8 = Column(Integer)
    n8_0 = Column(Integer)
    sqf_j = Column(Integer)
    sqf_h = Column(Integer)
    sqf_ks = Column(Integer)
    sqf_3_6 = Column(Integer)
    sqf_4_5 = Column(Integer)
    sqf_5_8 = Column(Integer)
    sqf_8_0 = Column(Integer)
    mf3_6 = Column(Integer)
    mf4_5 = Column(Integer)
    mf5_8 = Column(Integer)
    mf8_0 = Column(Integer)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".glimpse_pk_seq'::regclass)"))

    twomass_psc = relationship('TwomassPsc')


class GLIMPSE360(Base):
    __tablename__ = 'glimpse360'

    designation = Column(CHAR(26))
    tmass_designation = Column(CHAR(16))
    tmass_cntr = Column(ForeignKey('catalogdb.twomass_psc.pts_key'), index=True)
    l = Column(Float(53))
    b = Column(Float(53))
    dl = Column(Float(53))
    db = Column(Float(53))
    ra = Column(Float(53))
    dec = Column(Float(53))
    dra = Column(Float(53))
    ddec = Column(Float(53))
    csf = Column(Integer)
    mag_j = Column(Float)
    dj_m = Column(Float)
    mag_h = Column(Float)
    dh_m = Column(Float)
    mag_ks = Column(Float)
    dks_m = Column(Float)
    mag3_6 = Column(Float)
    d3_6m = Column(Float)
    mag4_5 = Column(Float)
    d4_5m = Column(Float)
    mag5_8 = Column(Float)
    d5_8m = Column(Float)
    mag8_0 = Column(Float)
    d8_0m = Column(Float)
    f_j = Column(Float)
    df_j = Column(Float)
    f_h = Column(Float)
    df_h = Column(Float)
    f_ks = Column(Float)
    df_ks = Column(Float)
    f3_6 = Column(Float)
    df3_6 = Column(Float)
    f4_5 = Column(Float)
    df4_5 = Column(Float)
    f5_8 = Column(Float)
    df5_8 = Column(Float)
    f8_0 = Column(Float)
    df8_0 = Column(Float)
    rms_f3_6 = Column(Float)
    rms_f4_5 = Column(Float)
    rms_f5_8 = Column(Float)
    rms_f8_0 = Column(Float)
    sky_3_6 = Column(Float)
    sky_4_5 = Column(Float)
    sky_5_8 = Column(Float)
    sky_8_0 = Column(Float)
    sn_j = Column(Float)
    sn_h = Column(Float)
    sn_ks = Column(Float)
    sn_3_6 = Column(Float)
    sn_4_5 = Column(Float)
    sn_5_8 = Column(Float)
    sn_8_0 = Column(Float)
    dens_3_6 = Column(Float)
    dens_4_5 = Column(Float)
    dens_5_8 = Column(Float)
    dens_8_0 = Column(Float)
    m3_6 = Column(Integer)
    m4_5 = Column(Integer)
    m5_8 = Column(Integer)
    m8_0 = Column(Integer)
    n3_6 = Column(Integer)
    n4_5 = Column(Integer)
    n5_8 = Column(Integer)
    n8_0 = Column(Integer)
    sqf_j = Column(Integer)
    sqf_h = Column(Integer)
    sqf_ks = Column(Integer)
    sqf_3_6 = Column(Integer)
    sqf_4_5 = Column(Integer)
    sqf_5_8 = Column(Integer)
    sqf_8_0 = Column(Integer)
    mf3_6 = Column(Integer)
    mf4_5 = Column(Integer)
    mf5_8 = Column(Integer)
    mf8_0 = Column(Integer)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".glimpse360_pkey_seq'::regclass)"))

    twomass_psc = relationship('TwomassPsc')


class Lamost_dr6(Base):
    __tablename__ = 'lamost_dr6'

    obsid = Column('obsid', Integer, index=True, primary_key=True)
    designation = Column('designation', Text)
    obsdate = Column('obsdate', Text)
    lmjd = Column('lmjd', Integer)
    mjd = Column('mjd', Integer)
    planid = Column('planid', Text)
    spid = Column('spid', SmallInteger)
    fiberid = Column('fiberid', SmallInteger)
    ra_obs = Column('ra_obs', Float(53))
    dec_obs = Column('dec_obs', Float(53))
    snru = Column('snru', Float)
    snrg = Column('snrg', Float)
    snrr = Column('snrr', Float)
    snri = Column('snri', Float)
    snrz = Column('snrz', Float)
    objtype = Column('objtype', Text)
    cclass = Column('class', Text)
    subclass = Column('subclass', Text)
    z = Column('z', Float)
    z_err = Column('z_err', Float)
    magtype = Column('magtype', Text)
    mag1 = Column('mag1', Float)
    mag2 = Column('mag2', Float)
    mag3 = Column('mag3', Float)
    mag4 = Column('mag4', Float)
    mag5 = Column('mag5', Float)
    mag6 = Column('mag6', Float)
    mag7 = Column('mag7', Float)
    tsource = Column('tsource', Text)
    fibertype = Column('fibertype', Text)
    tfrom = Column('tfrom', Text)
    tcomment = Column('tcomment', Text)
    offsets = Column('offsets', SmallInteger)
    offsets_v = Column('offsets_v', Float)
    ra = Column('ra', Float(53))
    dec = Column('dec', Float(53))
    fibermask = Column('fibermask', SmallInteger)
    ra_x = Column('ra_x', Float(53))
    dec_x = Column('dec_x', Float(53))
    errhalfmaj = Column('errhalfmaj', Float)
    errhalfmin = Column('errhalfmin', Float)
    errposang = Column('errposang', Float)
    source_id = Column('source_id', ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)


class Legacy_Survey_DR10(Base):
    __tablename__ = 'legacy_survey_dr10'

    release = Column(SmallInteger)
    brickid = Column(Integer)
    brickname = Column(Text)
    objid = Column(Integer)
    type = Column(Text, index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    ra_ivar = Column(Float)
    dec_ivar = Column(Float)
    ebv = Column(Float)
    flux_g = Column(Float, index=True)
    flux_r = Column(Float, index=True)
    flux_i = Column(Float, index=True)
    flux_z = Column(Float, index=True)
    flux_w1 = Column(Float, index=True)
    flux_w2 = Column(Float)
    flux_w3 = Column(Float)
    flux_w4 = Column(Float)
    flux_ivar_g = Column(Float)
    flux_ivar_r = Column(Float)
    flux_ivar_i = Column(Float)
    flux_ivar_z = Column(Float)
    flux_ivar_w1 = Column(Float)
    flux_ivar_w2 = Column(Float)
    flux_ivar_w3 = Column(Float)
    flux_ivar_w4 = Column(Float)
    mw_transmission_g = Column(Float)
    mw_transmission_r = Column(Float)
    mw_transmission_i = Column(Float)
    mw_transmission_z = Column(Float)
    mw_transmission_w1 = Column(Float)
    mw_transmission_w2 = Column(Float)
    mw_transmission_w3 = Column(Float)
    mw_transmission_w4 = Column(Float)
    nobs_g = Column(SmallInteger, index=True)
    nobs_r = Column(SmallInteger, index=True)
    nobs_i = Column(SmallInteger, index=True)
    nobs_z = Column(SmallInteger, index=True)
    nobs_w1 = Column(SmallInteger)
    nobs_w2 = Column(SmallInteger)
    nobs_w3 = Column(SmallInteger)
    nobs_w4 = Column(SmallInteger)
    rchisq_g = Column(Float)
    rchisq_r = Column(Float)
    rchisq_i = Column(Float)
    rchisq_z = Column(Float)
    rchisq_w1 = Column(Float)
    rchisq_w2 = Column(Float)
    rchisq_w3 = Column(Float)
    rchisq_w4 = Column(Float)
    fracflux_g = Column(Float)
    fracflux_r = Column(Float)
    fracflux_i = Column(Float)
    fracflux_z = Column(Float)
    fracflux_w1 = Column(Float)
    fracflux_w2 = Column(Float)
    fracflux_w3 = Column(Float)
    fracflux_w4 = Column(Float)
    fracmasked_g = Column(Float)
    fracmasked_r = Column(Float)
    fracmasked_i = Column(Float)
    fracmasked_z = Column(Float)
    fracin_g = Column(Float)
    fracin_r = Column(Float)
    fracin_i = Column(Float)
    fracin_z = Column(Float)
    anymask_g = Column(SmallInteger)
    anymask_r = Column(SmallInteger)
    anymask_i = Column(SmallInteger)
    anymask_z = Column(SmallInteger)
    allmask_g = Column(SmallInteger)
    allmask_r = Column(SmallInteger)
    allmask_i = Column(SmallInteger)
    allmask_z = Column(SmallInteger)
    wisemask_w1 = Column(SmallInteger)
    wisemask_w2 = Column(SmallInteger)
    psfsize_g = Column(Float)
    psfsize_r = Column(Float)
    psfsize_i = Column(Float)
    psfsize_z = Column(Float)
    psfdepth_g = Column(Float)
    psfdepth_r = Column(Float)
    psfdepth_i = Column(Float)
    psfdepth_z = Column(Float)
    galdepth_g = Column(Float)
    galdepth_r = Column(Float)
    galdepth_i = Column(Float)
    galdepth_z = Column(Float)
    psfdepth_w1 = Column(Float)
    psfdepth_w2 = Column(Float)
    wise_coadd_id = Column(Text)
    shape_r = Column(Float)
    shape_r_ivar = Column(Float)
    shape_e1 = Column(Float)
    shape_e1_ivar = Column(Float)
    shape_e2 = Column(Float)
    shape_e2_ivar = Column(Float)
    fiberflux_g = Column(Float, index=True)
    fiberflux_r = Column(Float, index=True)
    fiberflux_i = Column(Float, index=True)
    fiberflux_z = Column(Float, index=True)
    fibertotflux_g = Column(Float)
    fibertotflux_r = Column(Float)
    fibertotflux_i = Column(Float)
    fibertotflux_z = Column(Float)
    ref_cat = Column(Text, index=True)
    ref_id = Column(BigInteger, index=True)
    ref_epoch = Column(Float)
    gaia_phot_g_mean_mag = Column(Float, index=True)
    gaia_phot_g_mean_flux_over_error = Column(Float)
    gaia_phot_bp_mean_mag = Column(Float, index=True)
    gaia_phot_bp_mean_flux_over_error = Column(Float)
    gaia_phot_rp_mean_mag = Column(Float, index=True)
    gaia_phot_rp_mean_flux_over_error = Column(Float)
    gaia_astrometric_excess_noise = Column(Float)
    gaia_duplicated_source = Column(Boolean)
    gaia_phot_bp_rp_excess_factor = Column(Float)
    gaia_astrometric_sigma5d_max = Column(Float)
    gaia_astrometric_params_solved = Column(SmallInteger)
    parallax = Column(Float, index=True)
    parallax_ivar = Column(Float)
    pmra = Column(Float)
    pmra_ivar = Column(Float)
    pmdec = Column(Float)
    pmdec_ivar = Column(Float)
    maskbits = Column(Integer, index=True)
    fitbits = Column(SmallInteger)
    sersic = Column(Float)
    sersic_ivar = Column(Float)
    survey_primary = Column(Boolean, index=True)
    ls_id = Column(BigInteger, primary_key=True)
    gaia_dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)

    gaia_dr2_source = relationship('GaiaDr2Source')
    gaia_dr3_source = relationship('GaiaDr3Source')


class Legacy_Survey_DR10a(Base):
    __tablename__ = 'legacy_survey_dr10a'

    release = Column(SmallInteger)
    brickid = Column(Integer)
    brickname = Column(Text)
    objid = Column(Integer)
    brick_primary = Column(Boolean)
    maskbits = Column(Integer, index=True)
    fitbits = Column(SmallInteger)
    type = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    ra_ivar = Column(Float)
    dec_ivar = Column(Float)
    dchisq = Column(ARRAY(Float()))
    ebv = Column(Float)
    ref_cat = Column(Text, index=True)
    ref_id = Column(BigInteger, index=True)
    pmra = Column(Float)
    pmdec = Column(Float)
    parallax = Column(Float, index=True)
    pmra_ivar = Column(Float)
    pmdec_ivar = Column(Float)
    parallax_ivar = Column(Float)
    ref_epoch = Column(Float)
    gaia_phot_g_mean_mag = Column(Float, index=True)
    gaia_phot_g_mean_flux_over_error = Column(Float)
    gaia_phot_bp_mean_mag = Column(Float, index=True)
    gaia_phot_bp_mean_flux_over_error = Column(Float)
    gaia_phot_rp_mean_mag = Column(Float, index=True)
    gaia_phot_rp_mean_flux_over_error = Column(Float)
    gaia_astrometric_excess_noise = Column(Float)
    gaia_duplicated_source = Column(Boolean)
    gaia_phot_bp_rp_excess_factor = Column(Float)
    gaia_astrometric_sigma5d_max = Column(Float)
    gaia_astrometric_params_solved = Column(SmallInteger)
    flux_g = Column(Float, index=True)
    flux_r = Column(Float, index=True)
    flux_i = Column(Float, index=True)
    flux_z = Column(Float, index=True)
    flux_w1 = Column(Float, index=True)
    flux_w2 = Column(Float)
    flux_w3 = Column(Float)
    flux_w4 = Column(Float)
    flux_ivar_g = Column(Float)
    flux_ivar_r = Column(Float)
    flux_ivar_i = Column(Float)
    flux_ivar_z = Column(Float)
    flux_ivar_w1 = Column(Float)
    flux_ivar_w2 = Column(Float)
    flux_ivar_w3 = Column(Float)
    flux_ivar_w4 = Column(Float)
    fiberflux_g = Column(Float)
    fiberflux_r = Column(Float)
    fiberflux_i = Column(Float)
    fiberflux_z = Column(Float)
    fibertotflux_g = Column(Float, index=True)
    fibertotflux_r = Column(Float, index=True)
    fibertotflux_i = Column(Float, index=True)
    fibertotflux_z = Column(Float, index=True)
    mw_transmission_g = Column(Float)
    mw_transmission_r = Column(Float)
    mw_transmission_i = Column(Float)
    mw_transmission_z = Column(Float)
    mw_transmission_w1 = Column(Float)
    mw_transmission_w2 = Column(Float)
    mw_transmission_w3 = Column(Float)
    mw_transmission_w4 = Column(Float)
    nobs_g = Column(SmallInteger, index=True)
    nobs_r = Column(SmallInteger, index=True)
    nobs_i = Column(SmallInteger, index=True)
    nobs_z = Column(SmallInteger, index=True)
    nobs_w1 = Column(SmallInteger)
    nobs_w2 = Column(SmallInteger)
    nobs_w3 = Column(SmallInteger)
    nobs_w4 = Column(SmallInteger)
    rchisq_g = Column(Float)
    rchisq_r = Column(Float)
    rchisq_i = Column(Float)
    rchisq_z = Column(Float)
    rchisq_w1 = Column(Float)
    rchisq_w2 = Column(Float)
    rchisq_w3 = Column(Float)
    rchisq_w4 = Column(Float)
    fracflux_g = Column(Float)
    fracflux_r = Column(Float)
    fracflux_i = Column(Float)
    fracflux_z = Column(Float)
    fracflux_w1 = Column(Float)
    fracflux_w2 = Column(Float)
    fracflux_w3 = Column(Float)
    fracflux_w4 = Column(Float)
    fracmasked_g = Column(Float)
    fracmasked_r = Column(Float)
    fracmasked_i = Column(Float)
    fracmasked_z = Column(Float)
    fracin_g = Column(Float)
    fracin_r = Column(Float)
    fracin_i = Column(Float)
    fracin_z = Column(Float)
    anymask_g = Column(SmallInteger)
    anymask_r = Column(SmallInteger)
    anymask_i = Column(SmallInteger)
    anymask_z = Column(SmallInteger)
    allmask_g = Column(SmallInteger)
    allmask_r = Column(SmallInteger)
    allmask_i = Column(SmallInteger)
    allmask_z = Column(SmallInteger)
    wisemask_w1 = Column(SmallInteger)
    wisemask_w2 = Column(SmallInteger)
    psfsize_g = Column(Float)
    psfsize_r = Column(Float)
    psfsize_i = Column(Float)
    psfsize_z = Column(Float)
    psfdepth_g = Column(Float)
    psfdepth_r = Column(Float)
    psfdepth_i = Column(Float)
    psfdepth_z = Column(Float)
    galdepth_g = Column(Float)
    galdepth_r = Column(Float)
    galdepth_i = Column(Float)
    galdepth_z = Column(Float)
    psfdepth_w1 = Column(Float)
    psfdepth_w2 = Column(Float)
    wise_coadd_id = Column(Text)
    sersic = Column(Float)
    sersic_ivar = Column(Float)
    shape_r = Column(Float)
    shape_r_ivar = Column(Float)
    shape_e1 = Column(Float)
    shape_e1_ivar = Column(Float)
    shape_e2 = Column(Float)
    shape_e2_ivar = Column(Float)
    ls_id = Column(BigInteger, primary_key=True)
    gaia_sourceid = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    tycho_ref = Column(BigInteger, index=True)

    gaia_dr3_source = relationship('GaiaDr3Source')


class Legacy_Survey_DR8(Base):
    __tablename__ = 'legacy_survey_dr8'

    release = Column(Integer)
    brickid = Column(BigInteger)
    brickname = Column(Text)
    objid = Column(BigInteger)
    type = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    ra_ivar = Column(Float)
    dec_ivar = Column(Float)
    dchisq = Column(ARRAY(Float()))
    ebv = Column(Float)
    flux_g = Column(Float, index=True)
    flux_r = Column(Float, index=True)
    flux_z = Column(Float, index=True)
    flux_w1 = Column(Float, index=True)
    flux_w2 = Column(Float)
    flux_w3 = Column(Float)
    flux_w4 = Column(Float)
    flux_ivar_g = Column(Float)
    flux_ivar_r = Column(Float)
    flux_ivar_z = Column(Float)
    flux_ivar_w1 = Column(Float)
    flux_ivar_w2 = Column(Float)
    flux_ivar_w3 = Column(Float)
    flux_ivar_w4 = Column(Float)
    mw_transmission_g = Column(Float)
    mw_transmission_r = Column(Float)
    mw_transmission_z = Column(Float)
    mw_transmission_w1 = Column(Float)
    mw_transmission_w2 = Column(Float)
    mw_transmission_w3 = Column(Float)
    mw_transmission_w4 = Column(Float)
    nobs_g = Column(Integer, index=True)
    nobs_r = Column(Integer, index=True)
    nobs_z = Column(Integer, index=True)
    nobs_w1 = Column(Integer)
    nobs_w2 = Column(Integer)
    nobs_w3 = Column(Integer)
    nobs_w4 = Column(Integer)
    rchisq_g = Column(Float)
    rchisq_r = Column(Float)
    rchisq_z = Column(Float)
    rchisq_w1 = Column(Float)
    rchisq_w2 = Column(Float)
    rchisq_w3 = Column(Float)
    rchisq_w4 = Column(Float)
    fracflux_g = Column(Float)
    fracflux_r = Column(Float)
    fracflux_z = Column(Float)
    fracflux_w1 = Column(Float)
    fracflux_w2 = Column(Float)
    fracflux_w3 = Column(Float)
    fracflux_w4 = Column(Float)
    fracmasked_g = Column(Float)
    fracmasked_r = Column(Float)
    fracmasked_z = Column(Float)
    fracin_g = Column(Float)
    fracin_r = Column(Float)
    fracin_z = Column(Float)
    anymask_g = Column(Integer)
    anymask_r = Column(Integer)
    anymask_z = Column(Integer)
    allmask_g = Column(Integer)
    allmask_r = Column(Integer)
    allmask_z = Column(Integer)
    wisemask_w1 = Column(SmallInteger)
    wisemask_w2 = Column(SmallInteger)
    psfsize_g = Column(Float)
    psfsize_r = Column(Float)
    psfsize_z = Column(Float)
    psfdepth_g = Column(Float)
    psfdepth_r = Column(Float)
    psfdepth_z = Column(Float)
    galdepth_g = Column(Float)
    galdepth_r = Column(Float)
    galdepth_z = Column(Float)
    psfdepth_w1 = Column(Float)
    psfdepth_w2 = Column(Float)
    wise_coadd_id = Column(Text)
    fracdev = Column(Float)
    fracdev_ivar = Column(Float)
    shapedev_r = Column(Float)
    shapedev_r_ivar = Column(Float)
    shapedev_e1 = Column(Float)
    shapedev_e1_ivar = Column(Float)
    shapedev_e2 = Column(Float)
    shapedev_e2_ivar = Column(Float)
    shapeexp_r = Column(Float)
    shapeexp_r_ivar = Column(Float)
    shapeexp_e1 = Column(Float)
    shapeexp_e1_ivar = Column(Float)
    shapeexp_e2 = Column(Float)
    shapeexp_e2_ivar = Column(Float)
    fiberflux_g = Column(Float)
    fiberflux_r = Column(Float)
    fiberflux_z = Column(Float)
    fibertotflux_g = Column(Float, index=True)
    fibertotflux_r = Column(Float, index=True)
    fibertotflux_z = Column(Float, index=True)
    ref_cat = Column(Text, index=True)
    ref_id = Column(BigInteger, index=True)
    ref_epoch = Column(Float, index=True)
    gaia_phot_g_mean_mag = Column(Float, index=True)
    gaia_phot_g_mean_flux_over_error = Column(Float)
    gaia_phot_bp_mean_mag = Column(Float)
    gaia_phot_bp_mean_flux_over_error = Column(Float)
    gaia_phot_rp_mean_mag = Column(Float, index=True)
    gaia_phot_rp_mean_flux_over_error = Column(Float)
    gaia_astrometric_excess_noise = Column(Float)
    gaia_duplicated_source = Column(Boolean)
    gaia_phot_bp_rp_excess_factor = Column(Float)
    gaia_astrometric_sigma5d_max = Column(Float)
    gaia_astrometric_params_solved = Column(SmallInteger)
    parallax = Column(Float, index=True)
    parallax_ivar = Column(Float)
    pmra = Column(Float)
    pmra_ivar = Column(Float)
    pmdec = Column(Float)
    pmdec_ivar = Column(Float)
    maskbits = Column(Integer, index=True)
    ls_id = Column(BigInteger, primary_key=True)
    tycho_ref = Column(BigInteger)
    gaia_sourceid = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)

    gaia_dr2_source = relationship('GaiaDr2Source')


class MIPSGAL(Base):
    __tablename__ = 'mipsgal'

    mipsgal = Column(String(18), primary_key=True)
    glon = Column(Float(53), index=True)
    glat = Column(Float(53), index=True)
    radeg = Column(Float(53))
    dedeg = Column(Float(53))
    s24 = Column(Float(53))
    e_s24 = Column(Float(53))
    mag_24 = Column(Float(53))
    e_mag_24 = Column(Float(53))
    twomass_name = Column(ForeignKey('catalogdb.twomass_psc.designation'), index=True)
    sj = Column(Float(53))
    e_sj = Column(Float(53))
    sh = Column(Float(53))
    e_sh = Column(Float(53))
    sk = Column(Float(53))
    e_sk = Column(Float(53))
    glimpse = Column(String(17), index=True)
    s3_6 = Column(Float(53))
    e_s3_6 = Column(Float(53))
    s4_5 = Column(Float(53))
    e_s4_5 = Column(Float(53))
    s5_8 = Column(Float(53))
    e_s5_8 = Column(Float(53))
    s8_0 = Column(Float(53))
    wise = Column(String(19))
    s3_4 = Column(Float(53))
    e_s3_4 = Column(Float(53))
    s4_6 = Column(Float(53))
    e_s4_6 = Column(Float(53))
    s12 = Column(Float(53))
    e_s12 = Column(Float(53))
    s22 = Column(Float(53))
    e_s22 = Column(Float(53))
    jmag = Column(Float(53))
    e_jmag = Column(Float(53))
    hmag = Column(Float(53), index=True)
    e_hmag = Column(Float(53))
    kmag = Column(Float(53))
    e_kmag = Column(Float(53))
    mag_3_6 = Column(Float(53))
    e_mag_3_6 = Column(Float(53))
    mag_4_5 = Column(Float(53))
    e_mag_4_5 = Column(Float(53))
    mag_5_8 = Column(Float(53))
    e_mag_5_8 = Column(Float(53))
    mag_8_0 = Column(Float(53))
    e_mag_8_0 = Column(Float(53))
    w1mag = Column(Float(53))
    e_w1mag = Column(Float(53))
    w2mag = Column(Float(53))
    e_w2mag = Column(Float(53))
    w3mag = Column(Float(53))
    e_w3mag = Column(Float(53))
    w4mag = Column(Float(53))
    e_w4mag = Column(Float(53))
    dnn = Column(Float(53))
    ng = Column(Integer)
    n2m = Column(Integer)
    nw = Column(Integer)
    fwhm = Column(Float(53))
    sky = Column(Float(53))
    lim1 = Column(Float(53))
    lim2 = Column(Float(53))

    twomass_psc = relationship('TwomassPsc')


class RAVE_DR6_Gaia_DR3_XMatch(Base):
    __tablename__ = 'rave_dr6_xgaiae3'

    obsid = Column(Text, primary_key=True)
    gaiae3 = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    id = Column(Text)
    epoch = Column(SmallInteger)
    radeg = Column(Float(53))
    e_radeg = Column(Float(53))
    dedeg = Column(Float(53))
    e_dedeg = Column(Float(53))
    plx = Column(Float)
    e_plx = Column(Float)
    pmra = Column(Float)
    e_pmra = Column(Float)
    pmde = Column(Float)
    e_pmde = Column(Float)
    dup = Column(Text)
    ng = Column(SmallInteger)
    fg = Column(Float)
    e_fg = Column(Float)
    gmag = Column(Float)

    gaia_dr3_source = relationship('GaiaDr3Source')


class SDSS_DR16_APOGEE_Star(Base):
    __tablename__ = 'sdss_dr16_apogeestar'

    apstar_id = Column(Text, primary_key=True)
    target_id = Column(Text)
    alt_id = Column(Text)
    file = Column(Text)
    apogee_id = Column(Text, index=True)
    telescope = Column(Text)
    location_id = Column(BigInteger)
    field = Column(Text)
    ra = Column(Float(53), index=True)
    dec = Column(Float(53), index=True)
    glon = Column(Float(53), index=True)
    glat = Column(Float(53), index=True)
    apogee_target1 = Column(BigInteger)
    apogee_target2 = Column(BigInteger)
    apogee_target3 = Column(BigInteger)
    apogee2_target1 = Column(BigInteger)
    apogee2_target2 = Column(BigInteger)
    apogee2_target3 = Column(BigInteger)
    min_h = Column(Float)
    max_h = Column(Float)
    min_jk = Column(Float)
    max_jk = Column(Float)
    survey = Column(Text)
    extratarg = Column(BigInteger)
    nvisits = Column(BigInteger)
    commiss = Column(BigInteger)
    snr = Column(Float)
    starflag = Column(BigInteger)
    andflag = Column(BigInteger)
    vhelio_avg = Column(Float)
    vscatter = Column(Float)
    verr = Column(Float)
    verr_med = Column(Float)
    synthvhelio_avg = Column(Float)
    synthvscatter = Column(Float)
    synthverr = Column(Float)
    synthverr_med = Column(Float)
    rv_teff = Column(Float)
    rv_logg = Column(Float)
    rv_feh = Column(Float)
    rv_ccfwhm = Column(Float)
    rv_autofwhm = Column(Float)
    synthscatter = Column(Float)
    stablerv_chi2 = Column(Float)
    stablerv_rchi2 = Column(Float)
    chi2_threshold = Column(Float)
    stablerv_chi2_prob = Column(Float)
    apstar_version = Column(Text)
    gaia_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', deferrable=True, initially='DEFERRED'), index=True)
    gaia_parallax = Column(Float)
    gaia_parallax_error = Column(Float)
    gaia_pmra = Column(Float)
    gaia_pmra_error = Column(Float)
    gaia_pmdec = Column(Float)
    gaia_pmdec_error = Column(Float)
    gaia_phot_g_mean_mag = Column(Float)
    gaia_phot_bp_mean_mag = Column(Float)
    gaia_phot_rp_mean_mag = Column(Float)
    gaia_radial_velocity = Column(Float)
    gaia_radial_velocity_error = Column(Float)
    gaia_r_est = Column(Float)
    gaia_r_lo = Column(Float)
    gaia_r_hi = Column(Float)
    htmid = Column(BigInteger)

    gaia_source = relationship('GaiaDr2Source')


class SDSS_DR19p_Speclite(Base):
    __tablename__ = 'sdss_dr19p_speclite'
    __table_args__ = (
        Index('sdss_dr19p_speclite_plate_mjd_fiberid_idx', 'plate', 'mjd', 'fiberid'),
        Index('sdss_dr19p_speclite_mjd_plate_fiberid_idx', 'mjd', 'plate', 'fiberid', unique=True),
        {'schema': 'catalogdb'}
    )

    plate = Column(Integer)
    mjd = Column(Integer, index=True)
    fiberid = Column(Integer)
    field = Column(Integer)
    catalogid = Column(BigInteger, index=True)
    bestobjid = Column(ForeignKey('catalogdb.sdss_dr13_photoobj.objid'), index=True)
    targetobjid = Column(BigInteger)
    run2d = Column(Text)
    run1d = Column(Text)
    firstrelease = Column(Text)
    plug_ra = Column(Float(53))
    plug_dec = Column(Float(53))
    sourcetype = Column(Text)
    objtype = Column(Text)
    targettype = Column(Text)
    lambda_eff = Column(Float)
    sn_median_all = Column(Float, index=True)
    sn_median_u = Column(Float)
    sn_median_g = Column(Float)
    sn_median_r = Column(Float)
    sn_median_i = Column(Float)
    sn_median_z = Column(Float)
    platesn2 = Column(Float)
    platequality = Column(Text)
    z = Column(Float, index=True)
    z_err = Column(Float, index=True)
    zwarning = Column(Integer, index=True)
    zwarning_noqso = Column(Integer)
    _class = Column('class', Text)
    subclass = Column(Text)
    tfile = Column(Text)
    specprimary = Column(Integer)
    nspecobs = Column(Integer)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".sdss_dr19p_speclite_pk_seq'::regclass)"))

    sdss_dr13_photoobj = relationship('SdssDr13Photoobj')


class SDSSV_Plateholes(Base):
    __tablename__ = 'sdssv_plateholes'

    holetype = Column(Text, index=True)
    targettype = Column(Text, index=True)
    sourcetype = Column(Text, index=True)
    target_ra = Column(Float(53))
    target_dec = Column(Float(53))
    iplateinput = Column(Integer)
    pointing = Column(Integer)
    offset_integer = Column(Integer)
    fiberid = Column(Integer, index=True)
    block = Column(Integer, index=True)
    iguide = Column(Integer)
    xf_default = Column(Float)
    yf_default = Column(Float)
    lambda_eff = Column(Float)
    zoffset = Column(Float)
    bluefiber = Column(Integer)
    chunk = Column(Integer)
    ifinal = Column(Integer)
    origfile = Column(Text)
    fileindx = Column(Integer)
    diameter = Column(Float)
    buffer = Column(Float)
    priority = Column(Integer)
    assigned = Column(Integer)
    conflicted = Column(Integer)
    ranout = Column(Integer)
    outside = Column(Integer)
    mangaid = Column(Text)
    ifudesign = Column(Integer)
    ifudesignsize = Column(Integer)
    bundle_size = Column(Integer)
    fiber_size = Column(Float)
    tmass_j = Column(Float)
    tmass_h = Column(Float)
    tmass_k = Column(Float)
    gsc_vmag = Column(Float)
    tyc_bmag = Column(Float)
    tyc_vmag = Column(Float)
    mfd_mag = Column(ARRAY(Float()))
    usnob_mag = Column(ARRAY(Float()))
    source_id = Column(BigInteger)
    phot_g_mean_mag = Column(Float)
    sp_param_source = Column(Text)
    sp_params = Column(ARRAY(Float()))
    sp_param_err = Column(ARRAY(Float()))
    marvels_target1 = Column(Integer)
    marvels_target2 = Column(Integer)
    boss_target1 = Column(BigInteger)
    boss_target2 = Column(BigInteger)
    ancillary_target1 = Column(BigInteger)
    ancillary_target2 = Column(BigInteger)
    segue2_target1 = Column(Integer)
    segue2_target2 = Column(Integer)
    segueb_target1 = Column(Integer)
    segueb_target2 = Column(Integer)
    apogee_target1 = Column(Integer)
    apogee_target2 = Column(Integer)
    manga_target1 = Column(Integer)
    manga_target2 = Column(Integer)
    manga_target3 = Column(Integer)
    eboss_target0 = Column(BigInteger)
    eboss_target1 = Column(BigInteger)
    eboss_target2 = Column(BigInteger)
    eboss_target_id = Column(BigInteger)
    thing_id_targeting = Column(Integer)
    objid_targeting = Column(BigInteger)
    apogee2_target1 = Column(Integer)
    apogee2_target2 = Column(Integer)
    apogee2_target3 = Column(Integer)
    run = Column(Integer)
    rerun = Column(Text)
    camcol = Column(Integer)
    field = Column(Integer)
    id = Column(Integer)
    psfflux = Column(ARRAY(Float()))
    psfflux_ivar = Column(ARRAY(Float()))
    fiberflux = Column(ARRAY(Float()))
    fiberflux_ivar = Column(ARRAY(Float()))
    fiber2flux = Column(ARRAY(Float()))
    fiber2flux_ivar = Column(ARRAY(Float()))
    psfmag = Column(ARRAY(Float()))
    fibermag = Column(ARRAY(Float()))
    fiber2mag = Column(ARRAY(Float()))
    mag = Column(ARRAY(Float()))
    epoch = Column(Float)
    pmra = Column(Float)
    pmdec = Column(Float)
    targetids = Column(Text)
    ifuid = Column(Integer)
    catalogid = Column(BigInteger, index=True)
    gaia_bp = Column(Float)
    gaia_rp = Column(Float)
    gaia_g = Column(Float)
    tmass_id = Column(Text)
    sdssv_apogee_target0 = Column(Integer, index=True)
    sdssv_boss_target0 = Column(BigInteger, index=True)
    gri_gaia_transform = Column(Integer)
    firstcarton = Column(Text, index=True)
    xfocal = Column(Float(53))
    yfocal = Column(Float(53))
    yanny_uid = Column(ForeignKey('catalogdb.sdssv_plateholes_meta.yanny_uid'), index=True)
    yanny_filename = Column(Text)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".sdssv_plateholes_pkey_seq'::regclass)"))

    sdssv_plateholes_meta = relationship('SdssvPlateholesMeta')


class BHM_CSC_v3(Base):
    __tablename__ = 'bhm_csc_v3'

    csc21p_id = Column(Text, index=True)
    csc21p_ensemble = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    best_oir_cat = Column(Text, index=True)
    best_mag = Column(Float, index=True)
    mag_type = Column(Text)
    gaia_dr3_srcid = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    ls_dr10_lsid = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'), index=True)
    ls_dr10_objid = Column(Integer)
    ls_dr10_brickid = Column(Integer)
    ls_dr10_release = Column(SmallInteger)
    ps21p_objid = Column(BigInteger, index=True)
    ps21p_ippobjid = Column(BigInteger, index=True)
    tmass_designation = Column(ForeignKey('catalogdb.twomass_psc.designation'), index=True)
    tmass_ra = Column(Float(53))
    tmass_dec = Column(Float(53))
    tmass_h = Column(Float)
    csc21p_ra = Column(Float(53))
    csc21p_dec = Column(Float(53))
    logfx = Column(Float(53))
    xband = Column(Text)
    extent = Column(Boolean)
    xsig = Column(Float(53))
    xpriority = Column(Integer)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_csc_v3_pk_seq'::regclass)"))

    gaia_dr3_source = relationship('GaiaDr3Source')
    legacy_survey_dr10 = relationship('LegacySurveyDr10')
    twomass_psc = relationship('TwomassPsc')


class BHM_RM_v1(Base):
    __tablename__ = 'bhm_rm_v1'

    rm_field_name = Column(CHAR(8), nullable=False, index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    catalogidv05 = Column(BigInteger, index=True)
    rm_known_spec = Column(Boolean, index=True)
    rm_core = Column(Boolean, index=True)
    rm_var = Column(Boolean, index=True)
    rm_ancillary = Column(Boolean, index=True)
    mag_g = Column(Float, index=True)
    mag_r = Column(Float, index=True)
    mag_i = Column(Float, index=True)
    mag_z = Column(Float)
    gaia_g = Column(Float, index=True)
    gaia_bp = Column(Float)
    gaia_rp = Column(Float)
    ls_id_dr8 = Column(ForeignKey('catalogdb.legacy_survey_dr8.ls_id'), index=True)
    ls_id_dr10 = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'), index=True)
    gaia_dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    panstarrs1_catid_objid = Column(ForeignKey('catalogdb.panstarrs1.catid_objid'), index=True)
    rm_unsuitable = Column(Boolean, index=True)
    rm_xrayqso = Column(Integer, index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_rm_v1_pkey_seq'::regclass)"))

    gaia_dr2_source = relationship('GaiaDr2Source')
    gaia_dr3_source = relationship('GaiaDr3Source')
    legacy_survey_dr10 = relationship('LegacySurveyDr10')
    legacy_survey_dr8 = relationship('LegacySurveyDr8')
    panstarrs1 = relationship('Panstarrs1')


class BHM_RM_v1_1(Base):
    __tablename__ = 'bhm_rm_v1_1'

    rm_field_name = Column(CHAR(8), nullable=False, index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    catalogidv05 = Column(BigInteger, index=True)
    rm_known_spec = Column(Boolean, index=True)
    rm_core = Column(Boolean, index=True)
    rm_var = Column(Boolean, index=True)
    rm_ancillary = Column(Boolean, index=True)
    mag_g = Column(Float, index=True)
    mag_r = Column(Float, index=True)
    mag_i = Column(Float, index=True)
    mag_z = Column(Float)
    gaia_g = Column(Float, index=True)
    gaia_bp = Column(Float)
    gaia_rp = Column(Float)
    ls_id_dr8 = Column(ForeignKey('catalogdb.legacy_survey_dr8.ls_id'), index=True)
    ls_id_dr10 = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'), index=True)
    gaia_dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    panstarrs1_catid_objid = Column(ForeignKey('catalogdb.panstarrs1.catid_objid'), index=True)
    rm_unsuitable = Column(Boolean, index=True)
    rm_xrayqso = Column(Integer, index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_rm_v1_1_pkey_seq'::regclass)"))

    gaia_dr2_source = relationship('GaiaDr2Source')
    gaia_dr3_source = relationship('GaiaDr3Source')
    legacy_survey_dr10 = relationship('LegacySurveyDr10')
    legacy_survey_dr8 = relationship('LegacySurveyDr8')
    panstarrs1 = relationship('Panstarrs1')


class BHM_RM_v1_3(Base):
    __tablename__ = 'bhm_rm_v1_3'

    rm_field_name = Column(CHAR(8), nullable=False, index=True)
    ra = Column(Float(53))
    dec = Column(Float(53))
    catalogidv05 = Column(BigInteger, index=True)
    rm_known_spec = Column(Boolean, index=True)
    rm_core = Column(Boolean, index=True)
    rm_var = Column(Boolean, index=True)
    rm_ancillary = Column(Boolean, index=True)
    mag_g = Column(Float, index=True)
    mag_r = Column(Float, index=True)
    mag_i = Column(Float, index=True)
    mag_z = Column(Float)
    gaia_g = Column(Float, index=True)
    gaia_bp = Column(Float)
    gaia_rp = Column(Float)
    ls_id_dr8 = Column(ForeignKey('catalogdb.legacy_survey_dr8.ls_id'), index=True)
    ls_id_dr10 = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'), index=True)
    gaia_dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    panstarrs1_catid_objid = Column(ForeignKey('catalogdb.panstarrs1.catid_objid'), index=True)
    rm_unsuitable = Column(Boolean, index=True)
    rm_xrayqso = Column(Integer, index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_rm_v1_3_pkey_seq'::regclass)"))

    gaia_dr2_source = relationship('GaiaDr2Source')
    gaia_dr3_source = relationship('GaiaDr3Source')
    legacy_survey_dr10 = relationship('LegacySurveyDr10')
    legacy_survey_dr8 = relationship('LegacySurveyDr8')
    panstarrs1 = relationship('Panstarrs1')


class BhmSpidersAgnSuperset(Base):
    __tablename__ = 'bhm_spiders_agn_superset'

    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_spiders_agn_superset_pk_seq1'::regclass)"))
    ero_version = Column(Text)
    ero_detuid = Column(Text)
    ero_flux = Column(Float, index=True)
    ero_flux_err = Column(Float)
    ero_ext = Column(Float)
    ero_ext_err = Column(Float)
    ero_ext_like = Column(Float)
    ero_det_like = Column(Float)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(Text)
    xmatch_version = Column(Text)
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float)
    xmatch_flags = Column(BigInteger)
    target_class = Column(Text)
    target_priority = Column(Integer)
    target_has_spec = Column(Integer)
    best_opt = Column(Text)
    ls_id = Column(ForeignKey('catalogdb.legacy_survey_dr8.ls_id', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    ps1_dr2_objid = Column(BigInteger)
    gaia_dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    unwise_dr1_objid = Column(Text)
    des_dr1_coadd_object_id = Column(BigInteger)
    sdss_dr16_objid = Column(BigInteger)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    opt_modelflux_g = Column(Float)
    opt_modelflux_ivar_g = Column(Float)
    opt_modelflux_r = Column(Float)
    opt_modelflux_ivar_r = Column(Float)
    opt_modelflux_i = Column(Float)
    opt_modelflux_ivar_i = Column(Float)
    opt_modelflux_z = Column(Float)
    opt_modelflux_ivar_z = Column(Float)

    gaia_dr2_source = relationship('GaiaDr2Source')
    ls = relationship('LegacySurveyDr8')


class BhmSpidersClustersSuperset(Base):
    __tablename__ = 'bhm_spiders_clusters_superset'

    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".bhm_spiders_clusters_superset_pk_seq1'::regclass)"))
    ero_version = Column(Text)
    ero_detuid = Column(Text)
    ero_flux = Column(Float, index=True)
    ero_flux_err = Column(Float)
    ero_ext = Column(Float)
    ero_ext_err = Column(Float)
    ero_ext_like = Column(Float)
    ero_det_like = Column(Float)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(Text)
    xmatch_version = Column(Text)
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float)
    xmatch_flags = Column(BigInteger)
    target_class = Column(Text)
    target_priority = Column(Integer)
    target_has_spec = Column(Integer)
    best_opt = Column(Text)
    ls_id = Column(ForeignKey('catalogdb.legacy_survey_dr8.ls_id', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    ps1_dr2_objid = Column(BigInteger)
    gaia_dr2_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    unwise_dr1_objid = Column(Text)
    des_dr1_coadd_object_id = Column(BigInteger)
    sdss_dr16_objid = Column(BigInteger)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    opt_modelflux_g = Column(Float)
    opt_modelflux_ivar_g = Column(Float)
    opt_modelflux_r = Column(Float)
    opt_modelflux_ivar_r = Column(Float)
    opt_modelflux_i = Column(Float)
    opt_modelflux_ivar_i = Column(Float)
    opt_modelflux_z = Column(Float)
    opt_modelflux_ivar_z = Column(Float)

    gaia_dr2_source = relationship('GaiaDr2Source')
    ls = relationship('LegacySurveyDr8')


class EROSITASupersetv1AGN(Base):
    __tablename__ = 'erosita_superset_v1_agn'
    __table_args__ = (
        Index('erosita_superset_v1_agn_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(Text, index=True)
    ero_detuid = Column(Text, index=True)
    ero_flux = Column(Float, index=True)
    ero_flux_type = Column(Text)
    ero_mjd = Column(Text)
    ero_morph = Column(Text, index=True)
    ero_flags = Column(BigInteger, index=True)
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(Text)
    xmatch_version = Column(Text)
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger, index=True)
    target_class = Column(Text)
    target_priority = Column(Integer)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(Text, index=True)
    ls_id = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'), index=True)
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_v1_agn_pkey_seq'::regclass)"))

    gaia_dr3_source = relationship('GaiaDr3Source')
    ls = relationship('LegacySurveyDr10')


class EROSITASupersetv1Clusters(Base):
    __tablename__ = 'erosita_superset_v1_clusters'
    __table_args__ = (
        Index('erosita_superset_v1_clusters_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(Text, index=True)
    ero_detuid = Column(Text, index=True)
    ero_flux = Column(Float, index=True)
    ero_flux_type = Column(Text)
    ero_mjd = Column(Text)
    ero_morph = Column(Text)
    ero_flags = Column(BigInteger, index=True)
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(Text)
    xmatch_version = Column(Text)
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger)
    target_class = Column(Text)
    target_priority = Column(Integer, index=True)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(Text, index=True)
    ls_id = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'), index=True)
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'))
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    eromapper_lambda = Column(Float, index=True)
    eromapper_z_lambda = Column(Float, index=True)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_v1_clusters_pkey_seq'::regclass)"))

    gaia_dr3_source = relationship('GaiaDr3Source')
    ls = relationship('LegacySurveyDr10')


class EROSITASupersetv1Compactobjects(Base):
    __tablename__ = 'erosita_superset_v1_compactobjects'
    __table_args__ = (
        Index('erosita_superset_v1_compactobj_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(Text, index=True)
    ero_detuid = Column(Text, index=True)
    ero_flux = Column(Float, index=True)
    ero_flux_type = Column(Text)
    ero_mjd = Column(Text)
    ero_morph = Column(Text)
    ero_flags = Column(BigInteger, index=True)
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(Text)
    xmatch_version = Column(Text)
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger)
    target_class = Column(Text)
    target_priority = Column(Integer)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(Text, index=True)
    ls_id = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'))
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_v1_compactobjects_pkey_seq'::regclass)"))

    gaia_dr3_source = relationship('GaiaDr3Source')
    ls = relationship('LegacySurveyDr10')


class EROSITASupersetv1Stars(Base):
    __tablename__ = 'erosita_superset_v1_stars'
    __table_args__ = (
        Index('erosita_superset_v1_stars_xmatch_method_xmatch_version_idx', 'xmatch_method', 'xmatch_version'),
        {'schema': 'catalogdb'}
    )

    ero_version = Column(Text, index=True)
    ero_detuid = Column(Text, index=True)
    ero_flux = Column(Float, index=True)
    ero_flux_type = Column(Text)
    ero_mjd = Column(Text)
    ero_morph = Column(Text)
    ero_flags = Column(BigInteger, index=True)
    ero_det_like = Column(Float, index=True)
    ero_ra = Column(Float(53))
    ero_dec = Column(Float(53))
    ero_radec_err = Column(Float)
    xmatch_method = Column(Text)
    xmatch_version = Column(Text)
    xmatch_dist = Column(Float)
    xmatch_metric = Column(Float, index=True)
    xmatch_flags = Column(BigInteger)
    target_class = Column(Text)
    target_priority = Column(Integer)
    target_has_spec = Column(BigInteger)
    opt_cat = Column(Text, index=True)
    ls_id = Column(ForeignKey('catalogdb.legacy_survey_dr10.ls_id'))
    gaia_dr3_source_id = Column(ForeignKey('catalogdb.gaia_dr3_source.source_id'), index=True)
    opt_ra = Column(Float(53))
    opt_dec = Column(Float(53))
    opt_pmra = Column(Float)
    opt_pmdec = Column(Float)
    opt_epoch = Column(Float)
    pkey = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".erosita_superset_v1_stars_pkey_seq'::regclass)"))

    gaia_dr3_source = relationship('GaiaDr3Source')
    ls = relationship('LegacySurveyDr10')


class Gaia_DR2_WD_SDSS(Base):
    __tablename__ = 'gaia_dr2_wd_sdss'
    __table_args__ = (
        ForeignKeyConstraint(['mjd', 'plate', 'fiber'], ['catalogdb.sdss_dr19p_speclite.mjd', 'catalogdb.sdss_dr19p_speclite.plate', 'catalogdb.sdss_dr19p_speclite.fiberid']),
        Index('gaia_dr2_wd_sdss_mjd_plate_fiber_idx', 'mjd', 'plate', 'fiber'),
        {'schema': 'catalogdb'}
    )

    pk = Column(Integer, primary_key=True, server_default=text("nextval('\"catalogdb\".gaia_dr2_wd_sdss_pk_seq'::regclass)"))
    wd = Column(Text)
    n_wd = Column(Text)
    source = Column(Integer)
    sdss = Column(Text)
    ra = Column(Float(53))
    dec = Column(Float(53))
    umag = Column(Float)
    e_umag = Column(Float)
    gmag = Column(Float)
    e_gmag = Column(Float)
    rmag = Column(Float)
    e_rmag = Column(Float)
    imag = Column(Float)
    e_imag = Column(Float)
    zmag = Column(Float)
    e_zmag = Column(Float)
    plate = Column(Integer)
    mjd = Column(Integer)
    fiber = Column(Integer)
    snr = Column(Float)
    spclass = Column(Text)

    sdss_dr19p_speclite = relationship('SdssDr19pSpeclite')


class SDSS_DR16_APOGEE_Star_Visit(Base):
    __tablename__ = 'sdss_dr16_apogeestarvisit'

    visit_id = Column(ForeignKey('catalogdb.sdss_dr16_apogeevisit.visit_id', deferrable=True, initially='DEFERRED'), index=True)
    apstar_id = Column(ForeignKey('catalogdb.sdss_dr16_apogeestar.apstar_id', deferrable=True, initially='DEFERRED'), index=True)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".sdss_dr16_apogeestarvisit_pk_seq'::regclass)"))

    apstar = relationship('SdssDr16Apogeestar')
    visit = relationship('SdssDr16Apogeevisit')


class SkyMapper_DR1_1(Base):
    __tablename__ = 'skymapper_dr1_1'

    object_id = Column(BigInteger, primary_key=True)
    raj2000 = Column(Float(53))
    dej2000 = Column(Float(53))
    e_raj2000 = Column(Integer)
    e_dej2000 = Column(Integer)
    smss_j = Column(String(18))
    mean_epoch = Column(Float(53))
    rms_epoch = Column(Float)
    glon = Column(Float)
    glat = Column(Float)
    flags = Column(SmallInteger)
    nimaflags = Column(Integer)
    ngood = Column(SmallInteger)
    ngood_min = Column(SmallInteger)
    nch_max = Column(SmallInteger)
    u_flags = Column(SmallInteger)
    u_nimaflags = Column(Integer)
    u_ngood = Column(SmallInteger)
    u_nch = Column(SmallInteger)
    u_nvisit = Column(SmallInteger)
    v_flags = Column(SmallInteger)
    v_nimaflags = Column(Integer)
    v_ngood = Column(SmallInteger)
    v_nch = Column(SmallInteger)
    v_nvisit = Column(SmallInteger)
    g_flags = Column(SmallInteger)
    g_nimaflags = Column(Integer)
    g_ngood = Column(SmallInteger)
    g_nch = Column(SmallInteger)
    g_nvisit = Column(SmallInteger)
    r_flags = Column(SmallInteger)
    r_nimaflags = Column(Integer)
    r_ngood = Column(SmallInteger)
    r_nch = Column(SmallInteger)
    r_nvisit = Column(SmallInteger)
    i_flags = Column(SmallInteger)
    i_nimaflags = Column(Integer)
    i_ngood = Column(SmallInteger)
    i_nch = Column(SmallInteger)
    i_nvisit = Column(SmallInteger)
    z_flags = Column(SmallInteger)
    z_nimaflags = Column(Integer)
    z_ngood = Column(SmallInteger)
    z_nch = Column(SmallInteger)
    z_nvisit = Column(SmallInteger)
    class_star = Column(Float)
    radius_petro = Column(Float)
    a = Column(Float)
    e_a = Column(Float)
    b = Column(Float)
    e_b = Column(Float)
    pa = Column(Float)
    e_pa = Column(Float)
    u_psf = Column(Float)
    e_u_psf = Column(Float)
    u_petro = Column(Float)
    e_u_petro = Column(Float)
    v_psf = Column(Float)
    e_v_psf = Column(Float)
    v_petro = Column(Float)
    e_v_petro = Column(Float)
    g_psf = Column(Float)
    e_g_psf = Column(Float)
    g_petro = Column(Float)
    e_g_petro = Column(Float)
    r_psf = Column(Float)
    e_r_psf = Column(Float)
    r_petro = Column(Float)
    e_r_petro = Column(Float)
    i_psf = Column(Float)
    e_i_psf = Column(Float)
    i_petro = Column(Float)
    e_i_petro = Column(Float)
    z_psf = Column(Float)
    e_z_psf = Column(Float)
    z_petro = Column(Float)
    e_z_petro = Column(Float)
    ebmv_sfd = Column(Float)
    prox = Column(Float)
    prox_id = Column(BigInteger)
    edr_id = Column(BigInteger)
    edr_dist = Column(Float)
    twomass_key1 = Column(BigInteger)
    twomass_dist1 = Column(Float)
    twomass_cat1 = Column(String(3))
    twomass_key2 = Column(BigInteger)
    twomass_dist2 = Column(Float)
    twomass_cat2 = Column(String(3))
    allwise_cntr = Column(ForeignKey('catalogdb.allwise.cntr', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    allwise_dist = Column(Float)
    ucac4_mpos = Column(BigInteger)
    ucac4_dist = Column(Float)
    apass_recno = Column(BigInteger)
    apass_dist = Column(Float)
    gaia_dr1_id = Column(BigInteger)
    gaia_dr1_dist = Column(Float)
    ps1_dr1_id = Column(BigInteger)
    ps1_dr1_dist = Column(Float)
    galex_bcs_id = Column(BigInteger)
    galex_bcs_dist = Column(Float)
    gaia_dr2_id1 = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr2_dist1 = Column(Float)
    gaia_dr2_id2 = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr2_dist2 = Column(Float)

    allwise = relationship('Allwise')
    gaia_dr2_source = relationship('GaiaDr2Source', primaryjoin='SkymapperDr11.gaia_dr2_id1 == GaiaDr2Source.source_id')
    gaia_dr2_source1 = relationship('GaiaDr2Source', primaryjoin='SkymapperDr11.gaia_dr2_id2 == GaiaDr2Source.source_id')


class SkyMapperGaia(Base):
    __tablename__ = 'skymapper_gaia'
    __table_args__ = {'schema': 'catalogdb', 'comment': 'skymapper_gaia_dr1_1'}

    skymapper_object_id = Column(ForeignKey('catalogdb.skymapper_dr1_1.object_id', ondelete='CASCADE'), primary_key=True)
    gaia_source_id = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', ondelete='CASCADE'), index=True)
    teff = Column(Float, index=True)
    e_teff = Column(Float)
    feh = Column(Float, index=True)
    e_feh = Column(Float)

    gaia_source = relationship('GaiaDr2Source')


class SkyMapper_DR2(Base):
    __tablename__ = 'skymapper_dr2'

    object_id = Column(BigInteger, primary_key=True)
    raj2000 = Column(Float(53))
    dej2000 = Column(Float(53))
    e_raj2000 = Column(Integer)
    e_dej2000 = Column(Integer)
    smss_j = Column(CHAR(18), index=True)
    mean_epoch = Column(Float(53))
    rms_epoch = Column(Float)
    glon = Column(Float)
    glat = Column(Float)
    flags = Column(SmallInteger)
    nimaflags = Column(Integer, index=True)
    ngood = Column(SmallInteger)
    ngood_min = Column(SmallInteger)
    nch_max = Column(SmallInteger)
    density = Column(Float)
    u_flags = Column(SmallInteger)
    u_nimaflags = Column(Integer)
    u_ngood = Column(SmallInteger)
    u_nch = Column(SmallInteger)
    u_nclip = Column(SmallInteger)
    v_flags = Column(SmallInteger)
    v_nimaflags = Column(Integer)
    v_ngood = Column(SmallInteger)
    v_nch = Column(SmallInteger)
    v_nclip = Column(SmallInteger)
    g_flags = Column(SmallInteger)
    g_nimaflags = Column(Integer)
    g_ngood = Column(SmallInteger)
    g_nch = Column(SmallInteger)
    g_nclip = Column(SmallInteger)
    r_flags = Column(SmallInteger)
    r_nimaflags = Column(Integer)
    r_ngood = Column(SmallInteger)
    r_nch = Column(SmallInteger)
    r_nclip = Column(SmallInteger)
    i_flags = Column(SmallInteger)
    i_nimaflags = Column(Integer)
    i_ngood = Column(SmallInteger)
    i_nch = Column(SmallInteger)
    i_nclip = Column(SmallInteger)
    z_flags = Column(SmallInteger)
    z_nimaflags = Column(Integer)
    z_ngood = Column(SmallInteger)
    z_nch = Column(SmallInteger)
    z_nclip = Column(SmallInteger)
    class_star = Column(Float)
    flags_psf = Column(Integer, index=True)
    radius_petro = Column(Float)
    u_psf = Column(Float)
    e_u_psf = Column(Float)
    u_rchi2var = Column(Float)
    u_petro = Column(Float)
    e_u_petro = Column(Float)
    v_psf = Column(Float)
    e_v_psf = Column(Float)
    v_rchi2var = Column(Float)
    v_petro = Column(Float)
    e_v_petro = Column(Float)
    g_psf = Column(Float, index=True)
    e_g_psf = Column(Float)
    g_rchi2var = Column(Float)
    g_petro = Column(Float)
    e_g_petro = Column(Float)
    r_psf = Column(Float, index=True)
    e_r_psf = Column(Float)
    r_rchi2var = Column(Float)
    r_petro = Column(Float)
    e_r_petro = Column(Float)
    i_psf = Column(Float, index=True)
    e_i_psf = Column(Float)
    i_rchi2var = Column(Float)
    i_petro = Column(Float)
    e_i_petro = Column(Float)
    z_psf = Column(Float, index=True)
    e_z_psf = Column(Float)
    z_rchi2var = Column(Float)
    z_petro = Column(Float)
    e_z_petro = Column(Float)
    ebmv_sfd = Column(Float)
    prox = Column(Float)
    prox_id = Column(BigInteger)
    dr1_id = Column(BigInteger)
    dr1_dist = Column(Float)
    twomass_key = Column(BigInteger)
    twomass_dist = Column(Float)
    allwise_cntr = Column(ForeignKey('catalogdb.allwise.cntr'), index=True)
    allwise_dist = Column(Float)
    ucac4_mpos = Column(BigInteger)
    ucac4_dist = Column(Float)
    refcat2_id = Column(BigInteger)
    refcat2_dist = Column(Float)
    ps1_dr1_id = Column(BigInteger)
    ps1_dr1_dist = Column(Float)
    galex_guv_id = Column(BigInteger)
    galex_guv_dist = Column(Float)
    gaia_dr2_id1 = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr2_dist1 = Column(Float)
    gaia_dr2_id2 = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id'), index=True)
    gaia_dr2_dist2 = Column(Float)

    allwise = relationship('Allwise')
    gaia_dr2_source = relationship('GaiaDr2Source', primaryjoin='SkymapperDr2.gaia_dr2_id1 == GaiaDr2Source.source_id')
    gaia_dr2_source1 = relationship('GaiaDr2Source', primaryjoin='SkymapperDr2.gaia_dr2_id2 == GaiaDr2Source.source_id')


class TIC_v8(Base):
    __tablename__ = 'tic_v8'

    id = Column(BigInteger, primary_key=True)
    version = Column(String(8))
    hip = Column(Integer)
    tyc = Column(ForeignKey('catalogdb.tycho2.designation', ondelete='CASCADE', onupdate='CASCADE'))
    ucac = Column(String(10))
    twomass = Column(String(20))
    sdss = Column(ForeignKey('catalogdb.sdss_dr13_photoobj.objid', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    allwise = Column(ForeignKey('catalogdb.allwise.designation', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    gaia = Column(String(20))
    apass = Column(String(30))
    kic = Column(ForeignKey('catalogdb.kepler_input_10.kic_kepler_id', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    objtype = Column(String(16), index=True)
    typesrc = Column(String(16))
    ra = Column(Float(53))
    dec = Column(Float(53))
    posflag = Column(String(12), index=True)
    pmra = Column(Float)
    e_pmra = Column(Float)
    pmdec = Column(Float)
    e_pmdec = Column(Float)
    pmflag = Column(String(12))
    plx = Column(Float, index=True)
    e_plx = Column(Float)
    parflag = Column(String(12))
    gallong = Column(Float(53), index=True)
    gallat = Column(Float(53), index=True)
    eclong = Column(Float(53))
    eclat = Column(Float(53))
    bmag = Column(Float)
    e_bmag = Column(Float)
    vmag = Column(Float)
    e_vmag = Column(Float)
    umag = Column(Float)
    e_umag = Column(Float)
    gmag = Column(Float)
    e_gmag = Column(Float)
    rmag = Column(Float)
    e_rmag = Column(Float)
    imag = Column(Float)
    e_imag = Column(Float)
    zmag = Column(Float)
    e_zmag = Column(Float)
    jmag = Column(Float)
    e_jmag = Column(Float)
    hmag = Column(Float, index=True)
    e_hmag = Column(Float)
    kmag = Column(Float)
    e_kmag = Column(Float)
    twomflag = Column(String(20))
    prox = Column(Float)
    w1mag = Column(Float)
    e_w1mag = Column(Float)
    w2mag = Column(Float)
    e_w2mag = Column(Float)
    w3mag = Column(Float)
    e_w3mag = Column(Float)
    w4mag = Column(Float)
    e_w4mag = Column(Float)
    gaiamag = Column(Float, index=True)
    e_gaiamag = Column(Float)
    tmag = Column(Float, index=True)
    e_tmag = Column(Float)
    tessflag = Column(String(20))
    spflag = Column(String(20))
    teff = Column(Float, index=True)
    e_teff = Column(Float)
    logg = Column(Float, index=True)
    e_logg = Column(Float)
    mh = Column(Float)
    e_mh = Column(Float)
    rad = Column(Float)
    e_rad = Column(Float)
    mass = Column(Float)
    e_mass = Column(Float)
    rho = Column(Float)
    e_rho = Column(Float)
    lumclass = Column(String(10))
    lum = Column(Float)
    e_lum = Column(Float)
    d = Column(Float)
    e_d = Column(Float)
    ebv = Column(Float, index=True)
    e_ebv = Column(Float)
    numcont = Column(Integer)
    contratio = Column(Float)
    disposition = Column(String(10))
    duplicate_id = Column(BigInteger)
    priority = Column(Float)
    eneg_ebv = Column(Float)
    epos_ebv = Column(Float)
    ebvflag = Column(String(20))
    eneg_mass = Column(Float)
    epos_mass = Column(Float)
    eneg_rad = Column(Float)
    epos_rad = Column(Float)
    eneg_rho = Column(Float)
    epos_rho = Column(Float)
    eneg_logg = Column(Float)
    epos_logg = Column(Float)
    eneg_lum = Column(Float)
    epos_lum = Column(Float)
    eneg_dist = Column(Float)
    epos_dist = Column(Float)
    distflag = Column(String(20))
    eneg_teff = Column(Float)
    epos_teff = Column(Float)
    tefflag = Column(String(20))
    gaiabp = Column(Float)
    e_gaiabp = Column(Float)
    gaiarp = Column(Float)
    e_gaiarp = Column(Float)
    gaiaqflag = Column(Integer)
    starchareflag = Column(String(20))
    vmagflag = Column(String(20))
    bmagflag = Column(String(20))
    splits = Column(String(20))
    e_ra = Column(Float(53))
    e_dec = Column(Float(53))
    ra_orig = Column(Float(53))
    dec_orig = Column(Float(53))
    e_ra_orig = Column(Float(53))
    e_dec_orig = Column(Float(53))
    raddflag = Column(Integer)
    wdflag = Column(Integer)
    objid = Column(BigInteger)
    gaia_int = Column(ForeignKey('catalogdb.gaia_dr2_source.source_id', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    twomass_psc = Column(ForeignKey('catalogdb.twomass_psc.designation', ondelete='CASCADE', onupdate='CASCADE'), index=True)
    twomass_psc_pts_key = Column(Integer, index=True)
    tycho2_tycid = Column(ForeignKey('catalogdb.tycho2.tycid'), index=True)
    allwise_cntr = Column(BigInteger)

    allwise1 = relationship('Allwise')
    gaia_dr2_source = relationship('GaiaDr2Source')
    kepler_input_10 = relationship('KeplerInput10')
    sdss_dr13_photoobj = relationship('SdssDr13Photoobj')
    twomass_psc1 = relationship('TwomassPsc')
    tycho2 = relationship('Tycho2', primaryjoin='TicV8.tyc == Tycho2.designation')
    tycho21 = relationship('Tycho2', primaryjoin='TicV8.tycho2_tycid == Tycho2.tycid')


class TESS_TOI(Base):
    __tablename__ = 'tess_toi'

    ticid = Column(ForeignKey('catalogdb.tic_v8.id'), index=True)
    target_type = Column(String(8))
    toi = Column(String(32))
    tess_disposition = Column(String(2))
    tfopwg_disposition = Column(String(2))
    ctoi = Column(String(32))
    user_disposition = Column(String(2))
    num_sectors = Column(Float)
    pk = Column(BigInteger, primary_key=True, server_default=text("nextval('\"catalogdb\".tess_toi_pk_seq'::regclass)"))

    tic_v8 = relationship('TicV8')


def define_relations():
    """ leaving this empty as relations were autogenerated """
    pass


# prepare the base
database.add_base(Base)
